// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: protocol.proto

package pkg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message represents the top-level message structure
type Message struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Service       string                    `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Command       string                    `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Params        map[string]*ResponseValue `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Message) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Message) GetParams() map[string]*ResponseValue {
	if x != nil {
		return x.Params
	}
	return nil
}

// Command represents a specific command
type Command struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Command       string                    `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Action        string                    `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Params        map[string]*ResponseValue `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Command) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Command) GetParams() map[string]*ResponseValue {
	if x != nil {
		return x.Params
	}
	return nil
}

// Response represents the server's response
type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ResponseValue         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetData() *ResponseValue {
	if x != nil {
		return x.Data
	}
	return nil
}

type PeerInterfaceMap struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	PeerInterfaceToAddress map[string]string      `protobuf:"bytes,1,rep,name=peer_interface_to_address,json=peerInterfaceToAddress,proto3" json:"peer_interface_to_address,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PeerInterfaceMap) Reset() {
	*x = PeerInterfaceMap{}
	mi := &file_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInterfaceMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInterfaceMap) ProtoMessage() {}

func (x *PeerInterfaceMap) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInterfaceMap.ProtoReflect.Descriptor instead.
func (*PeerInterfaceMap) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *PeerInterfaceMap) GetPeerInterfaceToAddress() map[string]string {
	if x != nil {
		return x.PeerInterfaceToAddress
	}
	return nil
}

// ResponseValue represents a dynamic value (similar to interface{} in Go)
type ResponseValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ResponseValue_StringValue
	//	*ResponseValue_ParsedAnalyzerData
	//	*ResponseValue_Anomaly
	//	*ResponseValue_PeerInterfaceToAddress
	//	*ResponseValue_GeneralOspfInformation
	//	*ResponseValue_OspfDatabase
	//	*ResponseValue_OspfRouterData
	//	*ResponseValue_OspfNetworkData
	//	*ResponseValue_OspfSummaryData
	//	*ResponseValue_OspfAsbrSummaryData
	//	*ResponseValue_OspfExternalData
	//	*ResponseValue_OspfNssaExternalData
	//	*ResponseValue_OspfExternalAll
	//	*ResponseValue_OspfNssaExternalAll
	//	*ResponseValue_OspfNeighbors
	//	*ResponseValue_Interfaces
	//	*ResponseValue_RoutingInformationBase
	//	*ResponseValue_RibFibSummaryRoutes
	//	*ResponseValue_StaticFrrConfiguration
	//	*ResponseValue_SystemMetrics
	//	*ResponseValue_FrrRouterData
	Kind          isResponseValue_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseValue) Reset() {
	*x = ResponseValue{}
	mi := &file_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseValue) ProtoMessage() {}

func (x *ResponseValue) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseValue.ProtoReflect.Descriptor instead.
func (*ResponseValue) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseValue) GetKind() isResponseValue_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ResponseValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *ResponseValue) GetParsedAnalyzerData() *ParsedAnalyzerData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_ParsedAnalyzerData); ok {
			return x.ParsedAnalyzerData
		}
	}
	return nil
}

func (x *ResponseValue) GetAnomaly() *AnomalyDetection {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_Anomaly); ok {
			return x.Anomaly
		}
	}
	return nil
}

func (x *ResponseValue) GetPeerInterfaceToAddress() *PeerInterfaceMap {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_PeerInterfaceToAddress); ok {
			return x.PeerInterfaceToAddress
		}
	}
	return nil
}

func (x *ResponseValue) GetGeneralOspfInformation() *GeneralOspfInformation {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_GeneralOspfInformation); ok {
			return x.GeneralOspfInformation
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfDatabase() *OSPFDatabase {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfDatabase); ok {
			return x.OspfDatabase
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfRouterData() *OSPFRouterData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfRouterData); ok {
			return x.OspfRouterData
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfNetworkData() *OSPFNetworkData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfNetworkData); ok {
			return x.OspfNetworkData
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfSummaryData() *OSPFSummaryData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfSummaryData); ok {
			return x.OspfSummaryData
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfAsbrSummaryData() *OSPFAsbrSummaryData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfAsbrSummaryData); ok {
			return x.OspfAsbrSummaryData
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfExternalData() *OSPFExternalData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfExternalData); ok {
			return x.OspfExternalData
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfNssaExternalData() *OSPFNssaExternalData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfNssaExternalData); ok {
			return x.OspfNssaExternalData
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfExternalAll() *OSPFExternalAll {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfExternalAll); ok {
			return x.OspfExternalAll
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfNssaExternalAll() *OSPFNssaExternalAll {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfNssaExternalAll); ok {
			return x.OspfNssaExternalAll
		}
	}
	return nil
}

func (x *ResponseValue) GetOspfNeighbors() *OSPFNeighbors {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_OspfNeighbors); ok {
			return x.OspfNeighbors
		}
	}
	return nil
}

func (x *ResponseValue) GetInterfaces() *InterfaceList {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_Interfaces); ok {
			return x.Interfaces
		}
	}
	return nil
}

func (x *ResponseValue) GetRoutingInformationBase() *RoutingInformationBase {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_RoutingInformationBase); ok {
			return x.RoutingInformationBase
		}
	}
	return nil
}

func (x *ResponseValue) GetRibFibSummaryRoutes() *RibFibSummaryRoutes {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_RibFibSummaryRoutes); ok {
			return x.RibFibSummaryRoutes
		}
	}
	return nil
}

func (x *ResponseValue) GetStaticFrrConfiguration() *StaticFRRConfiguration {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_StaticFrrConfiguration); ok {
			return x.StaticFrrConfiguration
		}
	}
	return nil
}

func (x *ResponseValue) GetSystemMetrics() *SystemMetrics {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_SystemMetrics); ok {
			return x.SystemMetrics
		}
	}
	return nil
}

func (x *ResponseValue) GetFrrRouterData() *FRRRouterData {
	if x != nil {
		if x, ok := x.Kind.(*ResponseValue_FrrRouterData); ok {
			return x.FrrRouterData
		}
	}
	return nil
}

type isResponseValue_Kind interface {
	isResponseValue_Kind()
}

type ResponseValue_StringValue struct {
	// For testing
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ResponseValue_ParsedAnalyzerData struct {
	// Analyzer command message types
	// Anomalies anomalies = 2;
	ParsedAnalyzerData *ParsedAnalyzerData `protobuf:"bytes,2,opt,name=parsed_analyzer_data,json=parsedAnalyzerData,proto3,oneof"`
}

type ResponseValue_Anomaly struct {
	Anomaly *AnomalyDetection `protobuf:"bytes,3,opt,name=anomaly,proto3,oneof"`
}

type ResponseValue_PeerInterfaceToAddress struct {
	PeerInterfaceToAddress *PeerInterfaceMap `protobuf:"bytes,4,opt,name=peer_interface_to_address,json=peerInterfaceToAddress,proto3,oneof"`
}

type ResponseValue_GeneralOspfInformation struct {
	// New Aggregator service message types
	GeneralOspfInformation *GeneralOspfInformation `protobuf:"bytes,5,opt,name=general_ospf_information,json=generalOspfInformation,proto3,oneof"`
}

type ResponseValue_OspfDatabase struct {
	OspfDatabase *OSPFDatabase `protobuf:"bytes,6,opt,name=ospf_database,json=ospfDatabase,proto3,oneof"`
}

type ResponseValue_OspfRouterData struct {
	OspfRouterData *OSPFRouterData `protobuf:"bytes,7,opt,name=ospf_router_data,json=ospfRouterData,proto3,oneof"`
}

type ResponseValue_OspfNetworkData struct {
	OspfNetworkData *OSPFNetworkData `protobuf:"bytes,8,opt,name=ospf_network_data,json=ospfNetworkData,proto3,oneof"`
}

type ResponseValue_OspfSummaryData struct {
	OspfSummaryData *OSPFSummaryData `protobuf:"bytes,9,opt,name=ospf_summary_data,json=ospfSummaryData,proto3,oneof"`
}

type ResponseValue_OspfAsbrSummaryData struct {
	OspfAsbrSummaryData *OSPFAsbrSummaryData `protobuf:"bytes,10,opt,name=ospf_asbr_summary_data,json=ospfAsbrSummaryData,proto3,oneof"`
}

type ResponseValue_OspfExternalData struct {
	OspfExternalData *OSPFExternalData `protobuf:"bytes,11,opt,name=ospf_external_data,json=ospfExternalData,proto3,oneof"`
}

type ResponseValue_OspfNssaExternalData struct {
	OspfNssaExternalData *OSPFNssaExternalData `protobuf:"bytes,12,opt,name=ospf_nssa_external_data,json=ospfNssaExternalData,proto3,oneof"`
}

type ResponseValue_OspfExternalAll struct {
	OspfExternalAll *OSPFExternalAll `protobuf:"bytes,13,opt,name=ospf_external_all,json=ospfExternalAll,proto3,oneof"`
}

type ResponseValue_OspfNssaExternalAll struct {
	OspfNssaExternalAll *OSPFNssaExternalAll `protobuf:"bytes,14,opt,name=ospf_nssa_external_all,json=ospfNssaExternalAll,proto3,oneof"`
}

type ResponseValue_OspfNeighbors struct {
	OspfNeighbors *OSPFNeighbors `protobuf:"bytes,15,opt,name=ospf_neighbors,json=ospfNeighbors,proto3,oneof"`
}

type ResponseValue_Interfaces struct {
	Interfaces *InterfaceList `protobuf:"bytes,16,opt,name=interfaces,proto3,oneof"`
}

type ResponseValue_RoutingInformationBase struct {
	RoutingInformationBase *RoutingInformationBase `protobuf:"bytes,17,opt,name=routing_information_base,json=routingInformationBase,proto3,oneof"`
}

type ResponseValue_RibFibSummaryRoutes struct {
	RibFibSummaryRoutes *RibFibSummaryRoutes `protobuf:"bytes,18,opt,name=rib_fib_summary_routes,json=ribFibSummaryRoutes,proto3,oneof"`
}

type ResponseValue_StaticFrrConfiguration struct {
	StaticFrrConfiguration *StaticFRRConfiguration `protobuf:"bytes,19,opt,name=static_frr_configuration,json=staticFrrConfiguration,proto3,oneof"`
}

type ResponseValue_SystemMetrics struct {
	SystemMetrics *SystemMetrics `protobuf:"bytes,20,opt,name=system_metrics,json=systemMetrics,proto3,oneof"`
}

type ResponseValue_FrrRouterData struct {
	FrrRouterData *FRRRouterData `protobuf:"bytes,21,opt,name=frr_router_data,json=frrRouterData,proto3,oneof"`
}

func (*ResponseValue_StringValue) isResponseValue_Kind() {}

func (*ResponseValue_ParsedAnalyzerData) isResponseValue_Kind() {}

func (*ResponseValue_Anomaly) isResponseValue_Kind() {}

func (*ResponseValue_PeerInterfaceToAddress) isResponseValue_Kind() {}

func (*ResponseValue_GeneralOspfInformation) isResponseValue_Kind() {}

func (*ResponseValue_OspfDatabase) isResponseValue_Kind() {}

func (*ResponseValue_OspfRouterData) isResponseValue_Kind() {}

func (*ResponseValue_OspfNetworkData) isResponseValue_Kind() {}

func (*ResponseValue_OspfSummaryData) isResponseValue_Kind() {}

func (*ResponseValue_OspfAsbrSummaryData) isResponseValue_Kind() {}

func (*ResponseValue_OspfExternalData) isResponseValue_Kind() {}

func (*ResponseValue_OspfNssaExternalData) isResponseValue_Kind() {}

func (*ResponseValue_OspfExternalAll) isResponseValue_Kind() {}

func (*ResponseValue_OspfNssaExternalAll) isResponseValue_Kind() {}

func (*ResponseValue_OspfNeighbors) isResponseValue_Kind() {}

func (*ResponseValue_Interfaces) isResponseValue_Kind() {}

func (*ResponseValue_RoutingInformationBase) isResponseValue_Kind() {}

func (*ResponseValue_RibFibSummaryRoutes) isResponseValue_Kind() {}

func (*ResponseValue_StaticFrrConfiguration) isResponseValue_Kind() {}

func (*ResponseValue_SystemMetrics) isResponseValue_Kind() {}

func (*ResponseValue_FrrRouterData) isResponseValue_Kind() {}

type NetworkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouterId      string                 `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Areas         []*OSPFArea            `protobuf:"bytes,2,rep,name=areas,proto3" json:"areas,omitempty"`
	Interfaces    []*OSPFInterfaceConfig `protobuf:"bytes,3,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_protocol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkConfig) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *NetworkConfig) GetAreas() []*OSPFArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *NetworkConfig) GetInterfaces() []*OSPFInterfaceConfig {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type OSPFArea struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Networks      []string               `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFArea) Reset() {
	*x = OSPFArea{}
	mi := &file_protocol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFArea) ProtoMessage() {}

func (x *OSPFArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFArea.ProtoReflect.Descriptor instead.
func (*OSPFArea) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *OSPFArea) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OSPFArea) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

type OSPFInterfaceConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Area          string                 `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
	IpAddress     string                 `protobuf:"bytes,3,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`
	Passive       bool                   `protobuf:"varint,4,opt,name=passive,proto3" json:"passive,omitempty"`
	Cost          int32                  `protobuf:"varint,5,opt,name=cost,proto3" json:"cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFInterfaceConfig) Reset() {
	*x = OSPFInterfaceConfig{}
	mi := &file_protocol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFInterfaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFInterfaceConfig) ProtoMessage() {}

func (x *OSPFInterfaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFInterfaceConfig.ProtoReflect.Descriptor instead.
func (*OSPFInterfaceConfig) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *OSPFInterfaceConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OSPFInterfaceConfig) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *OSPFInterfaceConfig) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *OSPFInterfaceConfig) GetPassive() bool {
	if x != nil {
		return x.Passive
	}
	return false
}

func (x *OSPFInterfaceConfig) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

// ================ Main Aggregated Message ================
type FullFRRData struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	OspfDatabase           *OSPFDatabase           `protobuf:"bytes,1,opt,name=ospf_database,json=ospfDatabase,proto3" json:"ospf_database,omitempty"`
	OspfRouterData         *OSPFRouterData         `protobuf:"bytes,2,opt,name=ospf_router_data,json=ospfRouterData,proto3" json:"ospf_router_data,omitempty"`
	GeneralOspfInformation *GeneralOspfInformation `protobuf:"bytes,3,opt,name=general_ospf_information,json=generalOspfInformation,proto3" json:"general_ospf_information,omitempty"`
	OspfRouterDataAll      *OSPFRouterData         `protobuf:"bytes,4,opt,name=ospf_router_data_all,json=ospfRouterDataAll,proto3" json:"ospf_router_data_all,omitempty"`
	OspfNetworkData        *OSPFNetworkData        `protobuf:"bytes,5,opt,name=ospf_network_data,json=ospfNetworkData,proto3" json:"ospf_network_data,omitempty"`
	OspfNetworkDataAll     *OSPFNetworkData        `protobuf:"bytes,6,opt,name=ospf_network_data_all,json=ospfNetworkDataAll,proto3" json:"ospf_network_data_all,omitempty"`
	OspfSummaryData        *OSPFSummaryData        `protobuf:"bytes,7,opt,name=ospf_summary_data,json=ospfSummaryData,proto3" json:"ospf_summary_data,omitempty"`
	OspfSummaryDataAll     *OSPFSummaryData        `protobuf:"bytes,8,opt,name=ospf_summary_data_all,json=ospfSummaryDataAll,proto3" json:"ospf_summary_data_all,omitempty"`
	OspfAsbrSummaryData    *OSPFAsbrSummaryData    `protobuf:"bytes,9,opt,name=ospf_asbr_summary_data,json=ospfAsbrSummaryData,proto3" json:"ospf_asbr_summary_data,omitempty"`
	OspfExternalData       *OSPFExternalData       `protobuf:"bytes,10,opt,name=ospf_external_data,json=ospfExternalData,proto3" json:"ospf_external_data,omitempty"`
	OspfNssaExternalData   *OSPFNssaExternalData   `protobuf:"bytes,11,opt,name=ospf_nssa_external_data,json=ospfNssaExternalData,proto3" json:"ospf_nssa_external_data,omitempty"`
	OspfExternalAll        *OSPFExternalAll        `protobuf:"bytes,12,opt,name=ospf_external_all,json=ospfExternalAll,proto3" json:"ospf_external_all,omitempty"`
	OspfNssaExternalAll    *OSPFNssaExternalAll    `protobuf:"bytes,13,opt,name=ospf_nssa_external_all,json=ospfNssaExternalAll,proto3" json:"ospf_nssa_external_all,omitempty"`
	OspfNeighbors          *OSPFNeighbors          `protobuf:"bytes,14,opt,name=ospf_neighbors,json=ospfNeighbors,proto3" json:"ospf_neighbors,omitempty"`
	Interfaces             *InterfaceList          `protobuf:"bytes,15,opt,name=interfaces,proto3" json:"interfaces,omitempty"`
	RoutingInformationBase *RoutingInformationBase `protobuf:"bytes,16,opt,name=routing_information_base,json=routingInformationBase,proto3" json:"routing_information_base,omitempty"`
	RibFibSummaryRoutes    *RibFibSummaryRoutes    `protobuf:"bytes,17,opt,name=rib_fib_summary_routes,json=ribFibSummaryRoutes,proto3" json:"rib_fib_summary_routes,omitempty"`
	StaticFrrConfiguration *StaticFRRConfiguration `protobuf:"bytes,18,opt,name=static_frr_configuration,json=staticFrrConfiguration,proto3" json:"static_frr_configuration,omitempty"`
	SystemMetrics          *SystemMetrics          `protobuf:"bytes,19,opt,name=system_metrics,json=systemMetrics,proto3" json:"system_metrics,omitempty"`
	FrrRouterData          *FRRRouterData          `protobuf:"bytes,20,opt,name=frr_router_data,json=frrRouterData,proto3" json:"frr_router_data,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FullFRRData) Reset() {
	*x = FullFRRData{}
	mi := &file_protocol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullFRRData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullFRRData) ProtoMessage() {}

func (x *FullFRRData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullFRRData.ProtoReflect.Descriptor instead.
func (*FullFRRData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *FullFRRData) GetOspfDatabase() *OSPFDatabase {
	if x != nil {
		return x.OspfDatabase
	}
	return nil
}

func (x *FullFRRData) GetOspfRouterData() *OSPFRouterData {
	if x != nil {
		return x.OspfRouterData
	}
	return nil
}

func (x *FullFRRData) GetGeneralOspfInformation() *GeneralOspfInformation {
	if x != nil {
		return x.GeneralOspfInformation
	}
	return nil
}

func (x *FullFRRData) GetOspfRouterDataAll() *OSPFRouterData {
	if x != nil {
		return x.OspfRouterDataAll
	}
	return nil
}

func (x *FullFRRData) GetOspfNetworkData() *OSPFNetworkData {
	if x != nil {
		return x.OspfNetworkData
	}
	return nil
}

func (x *FullFRRData) GetOspfNetworkDataAll() *OSPFNetworkData {
	if x != nil {
		return x.OspfNetworkDataAll
	}
	return nil
}

func (x *FullFRRData) GetOspfSummaryData() *OSPFSummaryData {
	if x != nil {
		return x.OspfSummaryData
	}
	return nil
}

func (x *FullFRRData) GetOspfSummaryDataAll() *OSPFSummaryData {
	if x != nil {
		return x.OspfSummaryDataAll
	}
	return nil
}

func (x *FullFRRData) GetOspfAsbrSummaryData() *OSPFAsbrSummaryData {
	if x != nil {
		return x.OspfAsbrSummaryData
	}
	return nil
}

func (x *FullFRRData) GetOspfExternalData() *OSPFExternalData {
	if x != nil {
		return x.OspfExternalData
	}
	return nil
}

func (x *FullFRRData) GetOspfNssaExternalData() *OSPFNssaExternalData {
	if x != nil {
		return x.OspfNssaExternalData
	}
	return nil
}

func (x *FullFRRData) GetOspfExternalAll() *OSPFExternalAll {
	if x != nil {
		return x.OspfExternalAll
	}
	return nil
}

func (x *FullFRRData) GetOspfNssaExternalAll() *OSPFNssaExternalAll {
	if x != nil {
		return x.OspfNssaExternalAll
	}
	return nil
}

func (x *FullFRRData) GetOspfNeighbors() *OSPFNeighbors {
	if x != nil {
		return x.OspfNeighbors
	}
	return nil
}

func (x *FullFRRData) GetInterfaces() *InterfaceList {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *FullFRRData) GetRoutingInformationBase() *RoutingInformationBase {
	if x != nil {
		return x.RoutingInformationBase
	}
	return nil
}

func (x *FullFRRData) GetRibFibSummaryRoutes() *RibFibSummaryRoutes {
	if x != nil {
		return x.RibFibSummaryRoutes
	}
	return nil
}

func (x *FullFRRData) GetStaticFrrConfiguration() *StaticFRRConfiguration {
	if x != nil {
		return x.StaticFrrConfiguration
	}
	return nil
}

func (x *FullFRRData) GetSystemMetrics() *SystemMetrics {
	if x != nil {
		return x.SystemMetrics
	}
	return nil
}

func (x *FullFRRData) GetFrrRouterData() *FRRRouterData {
	if x != nil {
		return x.FrrRouterData
	}
	return nil
}

// ================ Aggregator Static FRRouting Configuration ================
type StaticFRRConfiguration struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Hostname   string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	FrrVersion string                 `protobuf:"bytes,2,opt,name=frr_version,json=frrVersion,proto3" json:"frr_version,omitempty"`
	// string frr_defaults = 3;
	Ipv6Forwarding     bool                   `protobuf:"varint,4,opt,name=ipv6_forwarding,json=ipv6Forwarding,proto3" json:"ipv6_forwarding,omitempty"`
	Ipv4Forwarding     bool                   `protobuf:"varint,5,opt,name=ipv4_forwarding,json=ipv4Forwarding,proto3" json:"ipv4_forwarding,omitempty"`
	ServiceAdvancedVty bool                   `protobuf:"varint,6,opt,name=service_advanced_vty,json=serviceAdvancedVty,proto3" json:"service_advanced_vty,omitempty"` // bool service_integrated_vtysh_config = 7;
	Interfaces         []*Interface           `protobuf:"bytes,8,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	StaticRoutes       []*StaticRoute         `protobuf:"bytes,9,rep,name=static_routes,json=staticRoutes,proto3" json:"static_routes,omitempty"`
	OspfConfig         *OSPFConfig            `protobuf:"bytes,10,opt,name=ospf_config,json=ospfConfig,proto3" json:"ospf_config,omitempty"`
	RouteMap           map[string]*RouteMap   `protobuf:"bytes,11,rep,name=route_map,json=routeMap,proto3" json:"route_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AccessList         map[string]*AccessList `protobuf:"bytes,12,rep,name=access_list,json=accessList,proto3" json:"access_list,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StaticFRRConfiguration) Reset() {
	*x = StaticFRRConfiguration{}
	mi := &file_protocol_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticFRRConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticFRRConfiguration) ProtoMessage() {}

func (x *StaticFRRConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticFRRConfiguration.ProtoReflect.Descriptor instead.
func (*StaticFRRConfiguration) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *StaticFRRConfiguration) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StaticFRRConfiguration) GetFrrVersion() string {
	if x != nil {
		return x.FrrVersion
	}
	return ""
}

func (x *StaticFRRConfiguration) GetIpv6Forwarding() bool {
	if x != nil {
		return x.Ipv6Forwarding
	}
	return false
}

func (x *StaticFRRConfiguration) GetIpv4Forwarding() bool {
	if x != nil {
		return x.Ipv4Forwarding
	}
	return false
}

func (x *StaticFRRConfiguration) GetServiceAdvancedVty() bool {
	if x != nil {
		return x.ServiceAdvancedVty
	}
	return false
}

func (x *StaticFRRConfiguration) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *StaticFRRConfiguration) GetStaticRoutes() []*StaticRoute {
	if x != nil {
		return x.StaticRoutes
	}
	return nil
}

func (x *StaticFRRConfiguration) GetOspfConfig() *OSPFConfig {
	if x != nil {
		return x.OspfConfig
	}
	return nil
}

func (x *StaticFRRConfiguration) GetRouteMap() map[string]*RouteMap {
	if x != nil {
		return x.RouteMap
	}
	return nil
}

func (x *StaticFRRConfiguration) GetAccessList() map[string]*AccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

type Interface struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InterfaceIpPrefixes []*InterfaceIPPrefix   `protobuf:"bytes,2,rep,name=interface_ip_prefixes,json=interfaceIpPrefixes,proto3" json:"interface_ip_prefixes,omitempty"`
	Area                string                 `protobuf:"bytes,3,opt,name=area,proto3" json:"area,omitempty"` // Optional: cost, dead-interval, hello-interval
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Interface) Reset() {
	*x = Interface{}
	mi := &file_protocol_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetInterfaceIpPrefixes() []*InterfaceIPPrefix {
	if x != nil {
		return x.InterfaceIpPrefixes
	}
	return nil
}

func (x *Interface) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

type StaticRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpPrefix      *IPPrefix              `protobuf:"bytes,1,opt,name=ip_prefix,json=ipPrefix,proto3" json:"ip_prefix,omitempty"`
	NextHop       string                 `protobuf:"bytes,2,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticRoute) Reset() {
	*x = StaticRoute{}
	mi := &file_protocol_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticRoute) ProtoMessage() {}

func (x *StaticRoute) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticRoute.ProtoReflect.Descriptor instead.
func (*StaticRoute) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *StaticRoute) GetIpPrefix() *IPPrefix {
	if x != nil {
		return x.IpPrefix
	}
	return nil
}

func (x *StaticRoute) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

type OSPFConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RouterId            string                 `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Redistribution      []*Redistribution      `protobuf:"bytes,2,rep,name=redistribution,proto3" json:"redistribution,omitempty"`
	Area                []*Area                `protobuf:"bytes,3,rep,name=area,proto3" json:"area,omitempty"`
	VirtualLinkNeighbor string                 `protobuf:"bytes,4,opt,name=virtual_link_neighbor,json=virtualLinkNeighbor,proto3" json:"virtual_link_neighbor,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *OSPFConfig) Reset() {
	*x = OSPFConfig{}
	mi := &file_protocol_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFConfig) ProtoMessage() {}

func (x *OSPFConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFConfig.ProtoReflect.Descriptor instead.
func (*OSPFConfig) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *OSPFConfig) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFConfig) GetRedistribution() []*Redistribution {
	if x != nil {
		return x.Redistribution
	}
	return nil
}

func (x *OSPFConfig) GetArea() []*Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *OSPFConfig) GetVirtualLinkNeighbor() string {
	if x != nil {
		return x.VirtualLinkNeighbor
	}
	return ""
}

type Redistribution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Metric        string                 `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	RouteMap      string                 `protobuf:"bytes,3,opt,name=route_map,json=routeMap,proto3" json:"route_map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Redistribution) Reset() {
	*x = Redistribution{}
	mi := &file_protocol_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redistribution) ProtoMessage() {}

func (x *Redistribution) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redistribution.ProtoReflect.Descriptor instead.
func (*Redistribution) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *Redistribution) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Redistribution) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *Redistribution) GetRouteMap() string {
	if x != nil {
		return x.RouteMap
	}
	return ""
}

type Area struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // transit (virtual-link) is an area type because it’s not possible to be nssa/stub AND transit-area
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Area) Reset() {
	*x = Area{}
	mi := &file_protocol_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *Area) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Area) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type RouteMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permit        bool                   `protobuf:"varint,1,opt,name=permit,proto3" json:"permit,omitempty"`
	Sequence      string                 `protobuf:"bytes,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Match         string                 `protobuf:"bytes,3,opt,name=match,proto3" json:"match,omitempty"`
	AccessList    string                 `protobuf:"bytes,4,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteMap) Reset() {
	*x = RouteMap{}
	mi := &file_protocol_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteMap) ProtoMessage() {}

func (x *RouteMap) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteMap.ProtoReflect.Descriptor instead.
func (*RouteMap) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *RouteMap) GetPermit() bool {
	if x != nil {
		return x.Permit
	}
	return false
}

func (x *RouteMap) GetSequence() string {
	if x != nil {
		return x.Sequence
	}
	return ""
}

func (x *RouteMap) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *RouteMap) GetAccessList() string {
	if x != nil {
		return x.AccessList
	}
	return ""
}

type AccessList struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AccessListItems []*AccessListItem      `protobuf:"bytes,2,rep,name=access_list_items,json=accessListItems,proto3" json:"access_list_items,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AccessList) Reset() {
	*x = AccessList{}
	mi := &file_protocol_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessList) ProtoMessage() {}

func (x *AccessList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessList.ProtoReflect.Descriptor instead.
func (*AccessList) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *AccessList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessList) GetAccessListItems() []*AccessListItem {
	if x != nil {
		return x.AccessListItems
	}
	return nil
}

type AccessListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      uint32                 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	AccessControl string                 `protobuf:"bytes,2,opt,name=access_control,json=accessControl,proto3" json:"access_control,omitempty"`
	// Types that are valid to be assigned to Destination:
	//
	//	*AccessListItem_IpPrefix
	//	*AccessListItem_Any
	Destination   isAccessListItem_Destination `protobuf_oneof:"destination"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessListItem) Reset() {
	*x = AccessListItem{}
	mi := &file_protocol_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListItem) ProtoMessage() {}

func (x *AccessListItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListItem.ProtoReflect.Descriptor instead.
func (*AccessListItem) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *AccessListItem) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *AccessListItem) GetAccessControl() string {
	if x != nil {
		return x.AccessControl
	}
	return ""
}

func (x *AccessListItem) GetDestination() isAccessListItem_Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *AccessListItem) GetIpPrefix() *IPPrefix {
	if x != nil {
		if x, ok := x.Destination.(*AccessListItem_IpPrefix); ok {
			return x.IpPrefix
		}
	}
	return nil
}

func (x *AccessListItem) GetAny() bool {
	if x != nil {
		if x, ok := x.Destination.(*AccessListItem_Any); ok {
			return x.Any
		}
	}
	return false
}

type isAccessListItem_Destination interface {
	isAccessListItem_Destination()
}

type AccessListItem_IpPrefix struct {
	IpPrefix *IPPrefix `protobuf:"bytes,3,opt,name=ip_prefix,json=ipPrefix,proto3,oneof"`
}

type AccessListItem_Any struct {
	Any bool `protobuf:"varint,4,opt,name=any,proto3,oneof"` // if set to true, means "any"
}

func (*AccessListItem_IpPrefix) isAccessListItem_Destination() {}

func (*AccessListItem_Any) isAccessListItem_Destination() {}

type InterfaceIPPrefix struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpPrefix      *IPPrefix              `protobuf:"bytes,1,opt,name=ip_prefix,json=ipPrefix,proto3" json:"ip_prefix,omitempty"`
	Ospf          bool                   `protobuf:"varint,2,opt,name=ospf,proto3" json:"ospf,omitempty"`
	OspfArea      string                 `protobuf:"bytes,3,opt,name=ospf_area,json=ospfArea,proto3" json:"ospf_area,omitempty"`
	Passive       bool                   `protobuf:"varint,4,opt,name=passive,proto3" json:"passive,omitempty"`
	HasPeer       bool                   `protobuf:"varint,5,opt,name=has_peer,json=hasPeer,proto3" json:"has_peer,omitempty"` // true/false
	PeerIpPrefix  *IPPrefix              `protobuf:"bytes,6,opt,name=peer_ip_prefix,json=peerIpPrefix,proto3" json:"peer_ip_prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceIPPrefix) Reset() {
	*x = InterfaceIPPrefix{}
	mi := &file_protocol_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceIPPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIPPrefix) ProtoMessage() {}

func (x *InterfaceIPPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIPPrefix.ProtoReflect.Descriptor instead.
func (*InterfaceIPPrefix) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18}
}

func (x *InterfaceIPPrefix) GetIpPrefix() *IPPrefix {
	if x != nil {
		return x.IpPrefix
	}
	return nil
}

func (x *InterfaceIPPrefix) GetOspf() bool {
	if x != nil {
		return x.Ospf
	}
	return false
}

func (x *InterfaceIPPrefix) GetOspfArea() string {
	if x != nil {
		return x.OspfArea
	}
	return ""
}

func (x *InterfaceIPPrefix) GetPassive() bool {
	if x != nil {
		return x.Passive
	}
	return false
}

func (x *InterfaceIPPrefix) GetHasPeer() bool {
	if x != nil {
		return x.HasPeer
	}
	return false
}

func (x *InterfaceIPPrefix) GetPeerIpPrefix() *IPPrefix {
	if x != nil {
		return x.PeerIpPrefix
	}
	return nil
}

type IPPrefix struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddress     string                 `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	PrefixLength  uint32                 `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPPrefix) Reset() {
	*x = IPPrefix{}
	mi := &file_protocol_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPPrefix) ProtoMessage() {}

func (x *IPPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPPrefix.ProtoReflect.Descriptor instead.
func (*IPPrefix) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{19}
}

func (x *IPPrefix) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IPPrefix) GetPrefixLength() uint32 {
	if x != nil {
		return x.PrefixLength
	}
	return 0
}

type SystemMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuAmount     int64                  `protobuf:"varint,1,opt,name=cpu_amount,json=cpuAmount,proto3" json:"cpu_amount,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemMetrics) Reset() {
	*x = SystemMetrics{}
	mi := &file_protocol_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetrics) ProtoMessage() {}

func (x *SystemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetrics.ProtoReflect.Descriptor instead.
func (*SystemMetrics) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{20}
}

func (x *SystemMetrics) GetCpuAmount() int64 {
	if x != nil {
		return x.CpuAmount
	}
	return 0
}

func (x *SystemMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemMetrics) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

type GeneralOspfInformation struct {
	state                 protoimpl.MessageState          `protogen:"open.v1"`
	RouterId              string                          `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	TosRoutesOnly         bool                            `protobuf:"varint,2,opt,name=tos_routes_only,json=tosRoutesOnly,proto3" json:"tos_routes_only,omitempty"`
	Rfc2328Conform        bool                            `protobuf:"varint,3,opt,name=rfc2328_conform,json=rfc2328Conform,proto3" json:"rfc2328_conform,omitempty"`
	SpfScheduleDelayMsecs int32                           `protobuf:"varint,4,opt,name=spf_schedule_delay_msecs,json=spfScheduleDelayMsecs,proto3" json:"spf_schedule_delay_msecs,omitempty"`
	HoldtimeMinMsecs      int32                           `protobuf:"varint,5,opt,name=holdtime_min_msecs,json=holdtimeMinMsecs,proto3" json:"holdtime_min_msecs,omitempty"`
	HoldtimeMaxMsecs      int32                           `protobuf:"varint,6,opt,name=holdtime_max_msecs,json=holdtimeMaxMsecs,proto3" json:"holdtime_max_msecs,omitempty"`
	HoldtimeMultiplier    int32                           `protobuf:"varint,7,opt,name=holdtime_multiplier,json=holdtimeMultiplier,proto3" json:"holdtime_multiplier,omitempty"`
	SpfLastExecutedMsecs  int64                           `protobuf:"varint,8,opt,name=spf_last_executed_msecs,json=spfLastExecutedMsecs,proto3" json:"spf_last_executed_msecs,omitempty"`
	SpfLastDurationMsecs  int32                           `protobuf:"varint,9,opt,name=spf_last_duration_msecs,json=spfLastDurationMsecs,proto3" json:"spf_last_duration_msecs,omitempty"`
	LsaMinIntervalMsecs   int32                           `protobuf:"varint,10,opt,name=lsa_min_interval_msecs,json=lsaMinIntervalMsecs,proto3" json:"lsa_min_interval_msecs,omitempty"`
	LsaMinArrivalMsecs    int32                           `protobuf:"varint,11,opt,name=lsa_min_arrival_msecs,json=lsaMinArrivalMsecs,proto3" json:"lsa_min_arrival_msecs,omitempty"`
	WriteMultiplier       int32                           `protobuf:"varint,12,opt,name=write_multiplier,json=writeMultiplier,proto3" json:"write_multiplier,omitempty"`
	RefreshTimerMsecs     int32                           `protobuf:"varint,13,opt,name=refresh_timer_msecs,json=refreshTimerMsecs,proto3" json:"refresh_timer_msecs,omitempty"`
	MaximumPaths          int32                           `protobuf:"varint,14,opt,name=maximum_paths,json=maximumPaths,proto3" json:"maximum_paths,omitempty"`
	Preference            int32                           `protobuf:"varint,15,opt,name=preference,proto3" json:"preference,omitempty"`
	AsbrRouter            string                          `protobuf:"bytes,16,opt,name=asbr_router,json=asbrRouter,proto3" json:"asbr_router,omitempty"`
	AbrType               string                          `protobuf:"bytes,17,opt,name=abr_type,json=abrType,proto3" json:"abr_type,omitempty"`
	LsaExternalCounter    int32                           `protobuf:"varint,18,opt,name=lsa_external_counter,json=lsaExternalCounter,proto3" json:"lsa_external_counter,omitempty"`
	LsaExternalChecksum   int64                           `protobuf:"varint,19,opt,name=lsa_external_checksum,json=lsaExternalChecksum,proto3" json:"lsa_external_checksum,omitempty"`
	LsaAsopaqueCounter    int32                           `protobuf:"varint,20,opt,name=lsa_asopaque_counter,json=lsaAsopaqueCounter,proto3" json:"lsa_asopaque_counter,omitempty"`
	LsaAsopaqueChecksum   int64                           `protobuf:"varint,21,opt,name=lsa_asopaque_checksum,json=lsaAsopaqueChecksum,proto3" json:"lsa_asopaque_checksum,omitempty"`
	AttachedAreaCounter   int32                           `protobuf:"varint,22,opt,name=attached_area_counter,json=attachedAreaCounter,proto3" json:"attached_area_counter,omitempty"`
	Areas                 map[string]*GeneralInfoOspfArea `protobuf:"bytes,23,rep,name=areas,proto3" json:"areas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GeneralOspfInformation) Reset() {
	*x = GeneralOspfInformation{}
	mi := &file_protocol_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneralOspfInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralOspfInformation) ProtoMessage() {}

func (x *GeneralOspfInformation) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralOspfInformation.ProtoReflect.Descriptor instead.
func (*GeneralOspfInformation) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{21}
}

func (x *GeneralOspfInformation) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *GeneralOspfInformation) GetTosRoutesOnly() bool {
	if x != nil {
		return x.TosRoutesOnly
	}
	return false
}

func (x *GeneralOspfInformation) GetRfc2328Conform() bool {
	if x != nil {
		return x.Rfc2328Conform
	}
	return false
}

func (x *GeneralOspfInformation) GetSpfScheduleDelayMsecs() int32 {
	if x != nil {
		return x.SpfScheduleDelayMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetHoldtimeMinMsecs() int32 {
	if x != nil {
		return x.HoldtimeMinMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetHoldtimeMaxMsecs() int32 {
	if x != nil {
		return x.HoldtimeMaxMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetHoldtimeMultiplier() int32 {
	if x != nil {
		return x.HoldtimeMultiplier
	}
	return 0
}

func (x *GeneralOspfInformation) GetSpfLastExecutedMsecs() int64 {
	if x != nil {
		return x.SpfLastExecutedMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetSpfLastDurationMsecs() int32 {
	if x != nil {
		return x.SpfLastDurationMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetLsaMinIntervalMsecs() int32 {
	if x != nil {
		return x.LsaMinIntervalMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetLsaMinArrivalMsecs() int32 {
	if x != nil {
		return x.LsaMinArrivalMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetWriteMultiplier() int32 {
	if x != nil {
		return x.WriteMultiplier
	}
	return 0
}

func (x *GeneralOspfInformation) GetRefreshTimerMsecs() int32 {
	if x != nil {
		return x.RefreshTimerMsecs
	}
	return 0
}

func (x *GeneralOspfInformation) GetMaximumPaths() int32 {
	if x != nil {
		return x.MaximumPaths
	}
	return 0
}

func (x *GeneralOspfInformation) GetPreference() int32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *GeneralOspfInformation) GetAsbrRouter() string {
	if x != nil {
		return x.AsbrRouter
	}
	return ""
}

func (x *GeneralOspfInformation) GetAbrType() string {
	if x != nil {
		return x.AbrType
	}
	return ""
}

func (x *GeneralOspfInformation) GetLsaExternalCounter() int32 {
	if x != nil {
		return x.LsaExternalCounter
	}
	return 0
}

func (x *GeneralOspfInformation) GetLsaExternalChecksum() int64 {
	if x != nil {
		return x.LsaExternalChecksum
	}
	return 0
}

func (x *GeneralOspfInformation) GetLsaAsopaqueCounter() int32 {
	if x != nil {
		return x.LsaAsopaqueCounter
	}
	return 0
}

func (x *GeneralOspfInformation) GetLsaAsopaqueChecksum() int64 {
	if x != nil {
		return x.LsaAsopaqueChecksum
	}
	return 0
}

func (x *GeneralOspfInformation) GetAttachedAreaCounter() int32 {
	if x != nil {
		return x.AttachedAreaCounter
	}
	return 0
}

func (x *GeneralOspfInformation) GetAreas() map[string]*GeneralInfoOspfArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

// Represents per-area statistics within the OSPF process.
type GeneralInfoOspfArea struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Backbone               bool                   `protobuf:"varint,1,opt,name=backbone,proto3" json:"backbone,omitempty"`
	AreaIfTotalCounter     int32                  `protobuf:"varint,2,opt,name=area_if_total_counter,json=areaIfTotalCounter,proto3" json:"area_if_total_counter,omitempty"`
	AreaIfActiveCounter    int32                  `protobuf:"varint,3,opt,name=area_if_active_counter,json=areaIfActiveCounter,proto3" json:"area_if_active_counter,omitempty"`
	NbrFullAdjacentCounter int32                  `protobuf:"varint,4,opt,name=nbr_full_adjacent_counter,json=nbrFullAdjacentCounter,proto3" json:"nbr_full_adjacent_counter,omitempty"`
	Authentication         string                 `protobuf:"bytes,5,opt,name=authentication,proto3" json:"authentication,omitempty"`
	SpfExecutedCounter     int32                  `protobuf:"varint,6,opt,name=spf_executed_counter,json=spfExecutedCounter,proto3" json:"spf_executed_counter,omitempty"`
	LsaNumber              int32                  `protobuf:"varint,7,opt,name=lsa_number,json=lsaNumber,proto3" json:"lsa_number,omitempty"`
	LsaRouterNumber        int32                  `protobuf:"varint,8,opt,name=lsa_router_number,json=lsaRouterNumber,proto3" json:"lsa_router_number,omitempty"`
	LsaRouterChecksum      int64                  `protobuf:"varint,9,opt,name=lsa_router_checksum,json=lsaRouterChecksum,proto3" json:"lsa_router_checksum,omitempty"`
	LsaNetworkNumber       int32                  `protobuf:"varint,10,opt,name=lsa_network_number,json=lsaNetworkNumber,proto3" json:"lsa_network_number,omitempty"`
	LsaNetworkChecksum     int64                  `protobuf:"varint,11,opt,name=lsa_network_checksum,json=lsaNetworkChecksum,proto3" json:"lsa_network_checksum,omitempty"`
	LsaSummaryNumber       int32                  `protobuf:"varint,12,opt,name=lsa_summary_number,json=lsaSummaryNumber,proto3" json:"lsa_summary_number,omitempty"`
	LsaSummaryChecksum     int64                  `protobuf:"varint,13,opt,name=lsa_summary_checksum,json=lsaSummaryChecksum,proto3" json:"lsa_summary_checksum,omitempty"`
	LsaAsbrNumber          int32                  `protobuf:"varint,14,opt,name=lsa_asbr_number,json=lsaAsbrNumber,proto3" json:"lsa_asbr_number,omitempty"`
	LsaAsbrChecksum        int64                  `protobuf:"varint,15,opt,name=lsa_asbr_checksum,json=lsaAsbrChecksum,proto3" json:"lsa_asbr_checksum,omitempty"`
	LsaNssaNumber          int32                  `protobuf:"varint,16,opt,name=lsa_nssa_number,json=lsaNssaNumber,proto3" json:"lsa_nssa_number,omitempty"`
	LsaNssaChecksum        int64                  `protobuf:"varint,17,opt,name=lsa_nssa_checksum,json=lsaNssaChecksum,proto3" json:"lsa_nssa_checksum,omitempty"`
	LsaOpaqueLinkNumber    int32                  `protobuf:"varint,18,opt,name=lsa_opaque_link_number,json=lsaOpaqueLinkNumber,proto3" json:"lsa_opaque_link_number,omitempty"`
	LsaOpaqueLinkChecksum  int64                  `protobuf:"varint,19,opt,name=lsa_opaque_link_checksum,json=lsaOpaqueLinkChecksum,proto3" json:"lsa_opaque_link_checksum,omitempty"`
	LsaOpaqueAreaNumber    int32                  `protobuf:"varint,20,opt,name=lsa_opaque_area_number,json=lsaOpaqueAreaNumber,proto3" json:"lsa_opaque_area_number,omitempty"`
	LsaOpaqueAreaChecksum  int64                  `protobuf:"varint,21,opt,name=lsa_opaque_area_checksum,json=lsaOpaqueAreaChecksum,proto3" json:"lsa_opaque_area_checksum,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GeneralInfoOspfArea) Reset() {
	*x = GeneralInfoOspfArea{}
	mi := &file_protocol_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneralInfoOspfArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralInfoOspfArea) ProtoMessage() {}

func (x *GeneralInfoOspfArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralInfoOspfArea.ProtoReflect.Descriptor instead.
func (*GeneralInfoOspfArea) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{22}
}

func (x *GeneralInfoOspfArea) GetBackbone() bool {
	if x != nil {
		return x.Backbone
	}
	return false
}

func (x *GeneralInfoOspfArea) GetAreaIfTotalCounter() int32 {
	if x != nil {
		return x.AreaIfTotalCounter
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetAreaIfActiveCounter() int32 {
	if x != nil {
		return x.AreaIfActiveCounter
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetNbrFullAdjacentCounter() int32 {
	if x != nil {
		return x.NbrFullAdjacentCounter
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetAuthentication() string {
	if x != nil {
		return x.Authentication
	}
	return ""
}

func (x *GeneralInfoOspfArea) GetSpfExecutedCounter() int32 {
	if x != nil {
		return x.SpfExecutedCounter
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaNumber() int32 {
	if x != nil {
		return x.LsaNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaRouterNumber() int32 {
	if x != nil {
		return x.LsaRouterNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaRouterChecksum() int64 {
	if x != nil {
		return x.LsaRouterChecksum
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaNetworkNumber() int32 {
	if x != nil {
		return x.LsaNetworkNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaNetworkChecksum() int64 {
	if x != nil {
		return x.LsaNetworkChecksum
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaSummaryNumber() int32 {
	if x != nil {
		return x.LsaSummaryNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaSummaryChecksum() int64 {
	if x != nil {
		return x.LsaSummaryChecksum
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaAsbrNumber() int32 {
	if x != nil {
		return x.LsaAsbrNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaAsbrChecksum() int64 {
	if x != nil {
		return x.LsaAsbrChecksum
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaNssaNumber() int32 {
	if x != nil {
		return x.LsaNssaNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaNssaChecksum() int64 {
	if x != nil {
		return x.LsaNssaChecksum
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaOpaqueLinkNumber() int32 {
	if x != nil {
		return x.LsaOpaqueLinkNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaOpaqueLinkChecksum() int64 {
	if x != nil {
		return x.LsaOpaqueLinkChecksum
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaOpaqueAreaNumber() int32 {
	if x != nil {
		return x.LsaOpaqueAreaNumber
	}
	return 0
}

func (x *GeneralInfoOspfArea) GetLsaOpaqueAreaChecksum() int64 {
	if x != nil {
		return x.LsaOpaqueAreaChecksum
	}
	return 0
}

type FRRRouterData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouterName    string                 `protobuf:"bytes,1,opt,name=router_name,json=routerName,proto3" json:"router_name,omitempty"`
	OspfRouterId  string                 `protobuf:"bytes,2,opt,name=ospf_router_id,json=ospfRouterId,proto3" json:"ospf_router_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FRRRouterData) Reset() {
	*x = FRRRouterData{}
	mi := &file_protocol_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FRRRouterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRRRouterData) ProtoMessage() {}

func (x *FRRRouterData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRRRouterData.ProtoReflect.Descriptor instead.
func (*FRRRouterData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{23}
}

func (x *FRRRouterData) GetRouterName() string {
	if x != nil {
		return x.RouterName
	}
	return ""
}

func (x *FRRRouterData) GetOspfRouterId() string {
	if x != nil {
		return x.OspfRouterId
	}
	return ""
}

type OSPFRouterData struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	RouterId      string                     `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	RouterStates  map[string]*OSPFRouterArea `protobuf:"bytes,2,rep,name=router_states,json=Router Link States,proto3" json:"router_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFRouterData) Reset() {
	*x = OSPFRouterData{}
	mi := &file_protocol_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFRouterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFRouterData) ProtoMessage() {}

func (x *OSPFRouterData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFRouterData.ProtoReflect.Descriptor instead.
func (*OSPFRouterData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{24}
}

func (x *OSPFRouterData) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFRouterData) GetRouterStates() map[string]*OSPFRouterArea {
	if x != nil {
		return x.RouterStates
	}
	return nil
}

type OSPFRouterArea struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	LsaEntries    map[string]*OSPFRouterLSA `protobuf:"bytes,1,rep,name=lsa_entries,json=lsaEntries,proto3" json:"lsa_entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // json keys are linkStateId
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFRouterArea) Reset() {
	*x = OSPFRouterArea{}
	mi := &file_protocol_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFRouterArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFRouterArea) ProtoMessage() {}

func (x *OSPFRouterArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFRouterArea.ProtoReflect.Descriptor instead.
func (*OSPFRouterArea) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{25}
}

func (x *OSPFRouterArea) GetLsaEntries() map[string]*OSPFRouterLSA {
	if x != nil {
		return x.LsaEntries
	}
	return nil
}

type OSPFRouterLSA struct {
	state             protoimpl.MessageState        `protogen:"open.v1"`
	LsaAge            int32                         `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options           string                        `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags          int32                         `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	Flags             int32                         `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Asbr              bool                          `protobuf:"varint,5,opt,name=asbr,proto3" json:"asbr,omitempty"`
	LsaType           string                        `protobuf:"bytes,6,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId       string                        `protobuf:"bytes,7,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter string                        `protobuf:"bytes,8,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber      string                        `protobuf:"bytes,9,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum          string                        `protobuf:"bytes,10,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length            int32                         `protobuf:"varint,11,opt,name=length,proto3" json:"length,omitempty"`
	NumOfLinks        int32                         `protobuf:"varint,12,opt,name=num_of_links,json=numOfLinks,proto3" json:"num_of_links,omitempty"`
	RouterLinks       map[string]*OSPFRouterLSALink `protobuf:"bytes,13,rep,name=router_links,json=routerLinks,proto3" json:"router_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *OSPFRouterLSA) Reset() {
	*x = OSPFRouterLSA{}
	mi := &file_protocol_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFRouterLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFRouterLSA) ProtoMessage() {}

func (x *OSPFRouterLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFRouterLSA.ProtoReflect.Descriptor instead.
func (*OSPFRouterLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{26}
}

func (x *OSPFRouterLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *OSPFRouterLSA) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *OSPFRouterLSA) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *OSPFRouterLSA) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *OSPFRouterLSA) GetAsbr() bool {
	if x != nil {
		return x.Asbr
	}
	return false
}

func (x *OSPFRouterLSA) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *OSPFRouterLSA) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *OSPFRouterLSA) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *OSPFRouterLSA) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *OSPFRouterLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *OSPFRouterLSA) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *OSPFRouterLSA) GetNumOfLinks() int32 {
	if x != nil {
		return x.NumOfLinks
	}
	return 0
}

func (x *OSPFRouterLSA) GetRouterLinks() map[string]*OSPFRouterLSALink {
	if x != nil {
		return x.RouterLinks
	}
	return nil
}

type OSPFRouterLSALink struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	LinkType                string                 `protobuf:"bytes,1,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	DesignatedRouterAddress string                 `protobuf:"bytes,2,opt,name=designated_router_address,json=designatedRouterAddress,proto3" json:"designated_router_address,omitempty"`
	NeighborRouterId        string                 `protobuf:"bytes,3,opt,name=neighbor_router_id,json=neighborRouterId,proto3" json:"neighbor_router_id,omitempty"`
	RouterInterfaceAddress  string                 `protobuf:"bytes,4,opt,name=router_interface_address,json=routerInterfaceAddress,proto3" json:"router_interface_address,omitempty"`
	NetworkAddress          string                 `protobuf:"bytes,5,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	NetworkMask             string                 `protobuf:"bytes,6,opt,name=network_mask,json=networkMask,proto3" json:"network_mask,omitempty"`
	P2PInterfaceAddress     string                 `protobuf:"bytes,7,opt,name=p2pInterfaceAddress,proto3" json:"p2pInterfaceAddress,omitempty"`
	NumOfTosMetrics         int32                  `protobuf:"varint,8,opt,name=num_of_tos_metrics,json=numOfTosMetrics,proto3" json:"num_of_tos_metrics,omitempty"`
	Tos0Metric              int32                  `protobuf:"varint,9,opt,name=tos0_metric,json=tos0Metric,proto3" json:"tos0_metric,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *OSPFRouterLSALink) Reset() {
	*x = OSPFRouterLSALink{}
	mi := &file_protocol_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFRouterLSALink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFRouterLSALink) ProtoMessage() {}

func (x *OSPFRouterLSALink) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFRouterLSALink.ProtoReflect.Descriptor instead.
func (*OSPFRouterLSALink) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{27}
}

func (x *OSPFRouterLSALink) GetLinkType() string {
	if x != nil {
		return x.LinkType
	}
	return ""
}

func (x *OSPFRouterLSALink) GetDesignatedRouterAddress() string {
	if x != nil {
		return x.DesignatedRouterAddress
	}
	return ""
}

func (x *OSPFRouterLSALink) GetNeighborRouterId() string {
	if x != nil {
		return x.NeighborRouterId
	}
	return ""
}

func (x *OSPFRouterLSALink) GetRouterInterfaceAddress() string {
	if x != nil {
		return x.RouterInterfaceAddress
	}
	return ""
}

func (x *OSPFRouterLSALink) GetNetworkAddress() string {
	if x != nil {
		return x.NetworkAddress
	}
	return ""
}

func (x *OSPFRouterLSALink) GetNetworkMask() string {
	if x != nil {
		return x.NetworkMask
	}
	return ""
}

func (x *OSPFRouterLSALink) GetP2PInterfaceAddress() string {
	if x != nil {
		return x.P2PInterfaceAddress
	}
	return ""
}

func (x *OSPFRouterLSALink) GetNumOfTosMetrics() int32 {
	if x != nil {
		return x.NumOfTosMetrics
	}
	return 0
}

func (x *OSPFRouterLSALink) GetTos0Metric() int32 {
	if x != nil {
		return x.Tos0Metric
	}
	return 0
}

type OSPFNetworkData struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	RouterId      string                   `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	NetStates     map[string]*NetAreaState `protobuf:"bytes,2,rep,name=net_states,json=Net Link States,proto3" json:"net_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFNetworkData) Reset() {
	*x = OSPFNetworkData{}
	mi := &file_protocol_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFNetworkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFNetworkData) ProtoMessage() {}

func (x *OSPFNetworkData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFNetworkData.ProtoReflect.Descriptor instead.
func (*OSPFNetworkData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{28}
}

func (x *OSPFNetworkData) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFNetworkData) GetNetStates() map[string]*NetAreaState {
	if x != nil {
		return x.NetStates
	}
	return nil
}

type NetAreaState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LsaEntries    map[string]*NetworkLSA `protobuf:"bytes,1,rep,name=lsa_entries,json=lsaEntries,proto3" json:"lsa_entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // json keys are linkStateId
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetAreaState) Reset() {
	*x = NetAreaState{}
	mi := &file_protocol_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetAreaState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetAreaState) ProtoMessage() {}

func (x *NetAreaState) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetAreaState.ProtoReflect.Descriptor instead.
func (*NetAreaState) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{29}
}

func (x *NetAreaState) GetLsaEntries() map[string]*NetworkLSA {
	if x != nil {
		return x.LsaEntries
	}
	return nil
}

type NetworkLSA struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	LsaAge            int32                      `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options           string                     `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags          int32                      `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	LsaType           string                     `protobuf:"bytes,4,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId       string                     `protobuf:"bytes,5,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter string                     `protobuf:"bytes,6,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber      string                     `protobuf:"bytes,7,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum          string                     `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length            int32                      `protobuf:"varint,9,opt,name=length,proto3" json:"length,omitempty"`
	NetworkMask       int32                      `protobuf:"varint,10,opt,name=network_mask,json=networkMask,proto3" json:"network_mask,omitempty"`
	AttachedRouters   map[string]*AttachedRouter `protobuf:"bytes,11,rep,name=attached_routers,json=attchedRouters,proto3" json:"attached_routers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NetworkLSA) Reset() {
	*x = NetworkLSA{}
	mi := &file_protocol_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkLSA) ProtoMessage() {}

func (x *NetworkLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkLSA.ProtoReflect.Descriptor instead.
func (*NetworkLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{30}
}

func (x *NetworkLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *NetworkLSA) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *NetworkLSA) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *NetworkLSA) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *NetworkLSA) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *NetworkLSA) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *NetworkLSA) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *NetworkLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *NetworkLSA) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *NetworkLSA) GetNetworkMask() int32 {
	if x != nil {
		return x.NetworkMask
	}
	return 0
}

func (x *NetworkLSA) GetAttachedRouters() map[string]*AttachedRouter {
	if x != nil {
		return x.AttachedRouters
	}
	return nil
}

type AttachedRouter struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AttachedRouterId string                 `protobuf:"bytes,1,opt,name=attached_router_id,json=attachedRouterId,proto3" json:"attached_router_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AttachedRouter) Reset() {
	*x = AttachedRouter{}
	mi := &file_protocol_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedRouter) ProtoMessage() {}

func (x *AttachedRouter) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedRouter.ProtoReflect.Descriptor instead.
func (*AttachedRouter) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{31}
}

func (x *AttachedRouter) GetAttachedRouterId() string {
	if x != nil {
		return x.AttachedRouterId
	}
	return ""
}

type OSPFSummaryData struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	RouterId      string                       `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	NetStates     map[string]*NetAreaState     `protobuf:"bytes,2,rep,name=net_states,json=Net Link States,proto3" json:"net_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SummaryStates map[string]*SummaryAreaState `protobuf:"bytes,3,rep,name=summary_states,json=Summary Link States,proto3" json:"summary_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFSummaryData) Reset() {
	*x = OSPFSummaryData{}
	mi := &file_protocol_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFSummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFSummaryData) ProtoMessage() {}

func (x *OSPFSummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFSummaryData.ProtoReflect.Descriptor instead.
func (*OSPFSummaryData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{32}
}

func (x *OSPFSummaryData) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFSummaryData) GetNetStates() map[string]*NetAreaState {
	if x != nil {
		return x.NetStates
	}
	return nil
}

func (x *OSPFSummaryData) GetSummaryStates() map[string]*SummaryAreaState {
	if x != nil {
		return x.SummaryStates
	}
	return nil
}

type SummaryAreaState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LsaEntries    map[string]*SummaryLSA `protobuf:"bytes,1,rep,name=lsa_entries,json=lsaEntries,proto3" json:"lsa_entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // json keys are linkStateId
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryAreaState) Reset() {
	*x = SummaryAreaState{}
	mi := &file_protocol_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryAreaState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryAreaState) ProtoMessage() {}

func (x *SummaryAreaState) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryAreaState.ProtoReflect.Descriptor instead.
func (*SummaryAreaState) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{33}
}

func (x *SummaryAreaState) GetLsaEntries() map[string]*SummaryLSA {
	if x != nil {
		return x.LsaEntries
	}
	return nil
}

type SummaryLSA struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LsaAge            int32                  `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options           string                 `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags          int32                  `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	LsaType           string                 `protobuf:"bytes,4,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId       string                 `protobuf:"bytes,5,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter string                 `protobuf:"bytes,6,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber      string                 `protobuf:"bytes,7,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum          string                 `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length            int32                  `protobuf:"varint,9,opt,name=length,proto3" json:"length,omitempty"`
	NetworkMask       int32                  `protobuf:"varint,10,opt,name=network_mask,json=networkMask,proto3" json:"network_mask,omitempty"`
	Tos0Metric        int32                  `protobuf:"varint,11,opt,name=tos0_metric,json=tos0Metric,proto3" json:"tos0_metric,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SummaryLSA) Reset() {
	*x = SummaryLSA{}
	mi := &file_protocol_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryLSA) ProtoMessage() {}

func (x *SummaryLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryLSA.ProtoReflect.Descriptor instead.
func (*SummaryLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{34}
}

func (x *SummaryLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *SummaryLSA) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *SummaryLSA) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *SummaryLSA) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *SummaryLSA) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *SummaryLSA) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *SummaryLSA) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *SummaryLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *SummaryLSA) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *SummaryLSA) GetNetworkMask() int32 {
	if x != nil {
		return x.NetworkMask
	}
	return 0
}

func (x *SummaryLSA) GetTos0Metric() int32 {
	if x != nil {
		return x.Tos0Metric
	}
	return 0
}

type OSPFAsbrSummaryData struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	RouterId          string                       `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	AsbrSummaryStates map[string]*SummaryAreaState `protobuf:"bytes,2,rep,name=asbr_summary_states,json=ASBR-Summary Link States,proto3" json:"asbr_summary_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *OSPFAsbrSummaryData) Reset() {
	*x = OSPFAsbrSummaryData{}
	mi := &file_protocol_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFAsbrSummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFAsbrSummaryData) ProtoMessage() {}

func (x *OSPFAsbrSummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFAsbrSummaryData.ProtoReflect.Descriptor instead.
func (*OSPFAsbrSummaryData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{35}
}

func (x *OSPFAsbrSummaryData) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFAsbrSummaryData) GetAsbrSummaryStates() map[string]*SummaryAreaState {
	if x != nil {
		return x.AsbrSummaryStates
	}
	return nil
}

type OSPFExternalData struct {
	state                protoimpl.MessageState  `protogen:"open.v1"`
	RouterId             string                  `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	AsExternalLinkStates map[string]*ExternalLSA `protobuf:"bytes,2,rep,name=as_external_link_states,json=AS External Link States,proto3" json:"as_external_link_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OSPFExternalData) Reset() {
	*x = OSPFExternalData{}
	mi := &file_protocol_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFExternalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFExternalData) ProtoMessage() {}

func (x *OSPFExternalData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFExternalData.ProtoReflect.Descriptor instead.
func (*OSPFExternalData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{36}
}

func (x *OSPFExternalData) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFExternalData) GetAsExternalLinkStates() map[string]*ExternalLSA {
	if x != nil {
		return x.AsExternalLinkStates
	}
	return nil
}

type ExternalLSA struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LsaAge            int32                  `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options           string                 `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags          int32                  `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	LsaType           string                 `protobuf:"bytes,4,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId       string                 `protobuf:"bytes,5,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter string                 `protobuf:"bytes,6,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber      string                 `protobuf:"bytes,7,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum          string                 `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length            int32                  `protobuf:"varint,9,opt,name=length,proto3" json:"length,omitempty"`
	NetworkMask       int32                  `protobuf:"varint,10,opt,name=network_mask,json=networkMask,proto3" json:"network_mask,omitempty"`
	MetricType        string                 `protobuf:"bytes,11,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	Tos               int32                  `protobuf:"varint,12,opt,name=tos,proto3" json:"tos,omitempty"`
	Metric            int32                  `protobuf:"varint,13,opt,name=metric,proto3" json:"metric,omitempty"`
	ForwardAddress    string                 `protobuf:"bytes,14,opt,name=forward_address,json=forwardAddress,proto3" json:"forward_address,omitempty"`
	ExternalRouteTag  int32                  `protobuf:"varint,15,opt,name=external_route_tag,json=externalRouteTag,proto3" json:"external_route_tag,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExternalLSA) Reset() {
	*x = ExternalLSA{}
	mi := &file_protocol_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalLSA) ProtoMessage() {}

func (x *ExternalLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalLSA.ProtoReflect.Descriptor instead.
func (*ExternalLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{37}
}

func (x *ExternalLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *ExternalLSA) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *ExternalLSA) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *ExternalLSA) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *ExternalLSA) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *ExternalLSA) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *ExternalLSA) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *ExternalLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *ExternalLSA) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ExternalLSA) GetNetworkMask() int32 {
	if x != nil {
		return x.NetworkMask
	}
	return 0
}

func (x *ExternalLSA) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *ExternalLSA) GetTos() int32 {
	if x != nil {
		return x.Tos
	}
	return 0
}

func (x *ExternalLSA) GetMetric() int32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *ExternalLSA) GetForwardAddress() string {
	if x != nil {
		return x.ForwardAddress
	}
	return ""
}

func (x *ExternalLSA) GetExternalRouteTag() int32 {
	if x != nil {
		return x.ExternalRouteTag
	}
	return 0
}

type OSPFNssaExternalData struct {
	state                  protoimpl.MessageState       `protogen:"open.v1"`
	RouterId               string                       `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	NssaExternalLinkStates map[string]*NssaExternalArea `protobuf:"bytes,2,rep,name=nssa_external_link_states,json=NSSA-External Link States,proto3" json:"nssa_external_link_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OSPFNssaExternalData) Reset() {
	*x = OSPFNssaExternalData{}
	mi := &file_protocol_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFNssaExternalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFNssaExternalData) ProtoMessage() {}

func (x *OSPFNssaExternalData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFNssaExternalData.ProtoReflect.Descriptor instead.
func (*OSPFNssaExternalData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{38}
}

func (x *OSPFNssaExternalData) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFNssaExternalData) GetNssaExternalLinkStates() map[string]*NssaExternalArea {
	if x != nil {
		return x.NssaExternalLinkStates
	}
	return nil
}

type NssaExternalArea struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Data          map[string]*NssaExternalLSA `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // json keys are linkStateId
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NssaExternalArea) Reset() {
	*x = NssaExternalArea{}
	mi := &file_protocol_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NssaExternalArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NssaExternalArea) ProtoMessage() {}

func (x *NssaExternalArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NssaExternalArea.ProtoReflect.Descriptor instead.
func (*NssaExternalArea) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{39}
}

func (x *NssaExternalArea) GetData() map[string]*NssaExternalLSA {
	if x != nil {
		return x.Data
	}
	return nil
}

type NssaExternalLSA struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LsaAge             int32                  `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options            string                 `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags           int32                  `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	LsaType            string                 `protobuf:"bytes,4,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId        string                 `protobuf:"bytes,5,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter  string                 `protobuf:"bytes,6,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber       string                 `protobuf:"bytes,7,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum           string                 `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length             int32                  `protobuf:"varint,9,opt,name=length,proto3" json:"length,omitempty"`
	NetworkMask        int32                  `protobuf:"varint,10,opt,name=network_mask,json=networkMask,proto3" json:"network_mask,omitempty"`
	MetricType         string                 `protobuf:"bytes,11,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	Tos                int32                  `protobuf:"varint,12,opt,name=tos,proto3" json:"tos,omitempty"`
	Metric             int32                  `protobuf:"varint,13,opt,name=metric,proto3" json:"metric,omitempty"`
	NssaForwardAddress string                 `protobuf:"bytes,14,opt,name=nssa_forward_address,json=nssaForwardAddress,proto3" json:"nssa_forward_address,omitempty"`
	ExternalRouteTag   int32                  `protobuf:"varint,15,opt,name=external_route_tag,json=externalRouteTag,proto3" json:"external_route_tag,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NssaExternalLSA) Reset() {
	*x = NssaExternalLSA{}
	mi := &file_protocol_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NssaExternalLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NssaExternalLSA) ProtoMessage() {}

func (x *NssaExternalLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NssaExternalLSA.ProtoReflect.Descriptor instead.
func (*NssaExternalLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{40}
}

func (x *NssaExternalLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *NssaExternalLSA) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *NssaExternalLSA) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *NssaExternalLSA) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *NssaExternalLSA) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *NssaExternalLSA) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *NssaExternalLSA) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *NssaExternalLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *NssaExternalLSA) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *NssaExternalLSA) GetNetworkMask() int32 {
	if x != nil {
		return x.NetworkMask
	}
	return 0
}

func (x *NssaExternalLSA) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *NssaExternalLSA) GetTos() int32 {
	if x != nil {
		return x.Tos
	}
	return 0
}

func (x *NssaExternalLSA) GetMetric() int32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *NssaExternalLSA) GetNssaForwardAddress() string {
	if x != nil {
		return x.NssaForwardAddress
	}
	return ""
}

func (x *NssaExternalLSA) GetExternalRouteTag() int32 {
	if x != nil {
		return x.ExternalRouteTag
	}
	return 0
}

// ================ OSPF Database ================
type OSPFDatabase struct {
	state                protoimpl.MessageState       `protogen:"open.v1"`
	RouterId             string                       `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Areas                map[string]*OSPFDatabaseArea `protobuf:"bytes,2,rep,name=areas,proto3" json:"areas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AsExternalLinkStates []*ASExternalLSA             `protobuf:"bytes,3,rep,name=as_external_link_states,json=asExternalLinkStates,proto3" json:"as_external_link_states,omitempty"`
	AsExternalCount      int32                        `protobuf:"varint,4,opt,name=as_external_count,json=asExternalCount,proto3" json:"as_external_count,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OSPFDatabase) Reset() {
	*x = OSPFDatabase{}
	mi := &file_protocol_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFDatabase) ProtoMessage() {}

func (x *OSPFDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFDatabase.ProtoReflect.Descriptor instead.
func (*OSPFDatabase) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{41}
}

func (x *OSPFDatabase) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFDatabase) GetAreas() map[string]*OSPFDatabaseArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *OSPFDatabase) GetAsExternalLinkStates() []*ASExternalLSA {
	if x != nil {
		return x.AsExternalLinkStates
	}
	return nil
}

func (x *OSPFDatabase) GetAsExternalCount() int32 {
	if x != nil {
		return x.AsExternalCount
	}
	return 0
}

type OSPFDatabaseArea struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	RouterLinkStates            []*RouterDataLSA       `protobuf:"bytes,1,rep,name=router_link_states,json=routerLinkStates,proto3" json:"router_link_states,omitempty"`
	RouterLinkStatesCount       int32                  `protobuf:"varint,2,opt,name=router_link_states_count,json=routerLinkStatesCount,proto3" json:"router_link_states_count,omitempty"`
	NetworkLinkStates           []*NetworkDataLSA      `protobuf:"bytes,3,rep,name=network_link_states,json=networkLinkStates,proto3" json:"network_link_states,omitempty"`
	NetworkLinkStatesCount      int32                  `protobuf:"varint,4,opt,name=network_link_states_count,json=networkLinkStatesCount,proto3" json:"network_link_states_count,omitempty"`
	SummaryLinkStates           []*SummaryDataLSA      `protobuf:"bytes,5,rep,name=summary_link_states,json=summaryLinkStates,proto3" json:"summary_link_states,omitempty"`
	SummaryLinkStatesCount      int32                  `protobuf:"varint,6,opt,name=summary_link_states_count,json=summaryLinkStatesCount,proto3" json:"summary_link_states_count,omitempty"`
	AsbrSummaryLinkStates       []*ASBRSummaryLSA      `protobuf:"bytes,7,rep,name=asbr_summary_link_states,json=asbrSummaryLinkStates,proto3" json:"asbr_summary_link_states,omitempty"`
	AsbrSummaryLinkStatesCount  int32                  `protobuf:"varint,8,opt,name=asbr_summary_link_states_count,json=asbrSummaryLinkStatesCount,proto3" json:"asbr_summary_link_states_count,omitempty"`
	NssaExternalLinkStates      []*NSSAExternalLSAData `protobuf:"bytes,9,rep,name=nssa_external_link_states,json=nssaExternalLinkStates,proto3" json:"nssa_external_link_states,omitempty"`
	NssaExternalLinkStatesCount int32                  `protobuf:"varint,10,opt,name=nssa_external_link_states_count,json=nssaExternalLinkStatesCount,proto3" json:"nssa_external_link_states_count,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *OSPFDatabaseArea) Reset() {
	*x = OSPFDatabaseArea{}
	mi := &file_protocol_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFDatabaseArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFDatabaseArea) ProtoMessage() {}

func (x *OSPFDatabaseArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFDatabaseArea.ProtoReflect.Descriptor instead.
func (*OSPFDatabaseArea) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{42}
}

func (x *OSPFDatabaseArea) GetRouterLinkStates() []*RouterDataLSA {
	if x != nil {
		return x.RouterLinkStates
	}
	return nil
}

func (x *OSPFDatabaseArea) GetRouterLinkStatesCount() int32 {
	if x != nil {
		return x.RouterLinkStatesCount
	}
	return 0
}

func (x *OSPFDatabaseArea) GetNetworkLinkStates() []*NetworkDataLSA {
	if x != nil {
		return x.NetworkLinkStates
	}
	return nil
}

func (x *OSPFDatabaseArea) GetNetworkLinkStatesCount() int32 {
	if x != nil {
		return x.NetworkLinkStatesCount
	}
	return 0
}

func (x *OSPFDatabaseArea) GetSummaryLinkStates() []*SummaryDataLSA {
	if x != nil {
		return x.SummaryLinkStates
	}
	return nil
}

func (x *OSPFDatabaseArea) GetSummaryLinkStatesCount() int32 {
	if x != nil {
		return x.SummaryLinkStatesCount
	}
	return 0
}

func (x *OSPFDatabaseArea) GetAsbrSummaryLinkStates() []*ASBRSummaryLSA {
	if x != nil {
		return x.AsbrSummaryLinkStates
	}
	return nil
}

func (x *OSPFDatabaseArea) GetAsbrSummaryLinkStatesCount() int32 {
	if x != nil {
		return x.AsbrSummaryLinkStatesCount
	}
	return 0
}

func (x *OSPFDatabaseArea) GetNssaExternalLinkStates() []*NSSAExternalLSAData {
	if x != nil {
		return x.NssaExternalLinkStates
	}
	return nil
}

func (x *OSPFDatabaseArea) GetNssaExternalLinkStatesCount() int32 {
	if x != nil {
		return x.NssaExternalLinkStatesCount
	}
	return 0
}

type BaseLSA struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	LsId             string                 `protobuf:"bytes,1,opt,name=ls_id,json=lsId,proto3" json:"ls_id,omitempty"`
	AdvertisedRouter string                 `protobuf:"bytes,2,opt,name=advertised_router,json=advertisedRouter,proto3" json:"advertised_router,omitempty"`
	LsaAge           int32                  `protobuf:"varint,3,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	SequenceNumber   string                 `protobuf:"bytes,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Checksum         string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BaseLSA) Reset() {
	*x = BaseLSA{}
	mi := &file_protocol_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseLSA) ProtoMessage() {}

func (x *BaseLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseLSA.ProtoReflect.Descriptor instead.
func (*BaseLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{43}
}

func (x *BaseLSA) GetLsId() string {
	if x != nil {
		return x.LsId
	}
	return ""
}

func (x *BaseLSA) GetAdvertisedRouter() string {
	if x != nil {
		return x.AdvertisedRouter
	}
	return ""
}

func (x *BaseLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *BaseLSA) GetSequenceNumber() string {
	if x != nil {
		return x.SequenceNumber
	}
	return ""
}

func (x *BaseLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type RouterDataLSA struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Base             *BaseLSA               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NumOfRouterLinks int32                  `protobuf:"varint,2,opt,name=num_of_router_links,json=numOfRouterLinks,proto3" json:"num_of_router_links,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RouterDataLSA) Reset() {
	*x = RouterDataLSA{}
	mi := &file_protocol_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterDataLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterDataLSA) ProtoMessage() {}

func (x *RouterDataLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterDataLSA.ProtoReflect.Descriptor instead.
func (*RouterDataLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{44}
}

func (x *RouterDataLSA) GetBase() *BaseLSA {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RouterDataLSA) GetNumOfRouterLinks() int32 {
	if x != nil {
		return x.NumOfRouterLinks
	}
	return 0
}

type NetworkDataLSA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseLSA               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDataLSA) Reset() {
	*x = NetworkDataLSA{}
	mi := &file_protocol_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDataLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDataLSA) ProtoMessage() {}

func (x *NetworkDataLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDataLSA.ProtoReflect.Descriptor instead.
func (*NetworkDataLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{45}
}

func (x *NetworkDataLSA) GetBase() *BaseLSA {
	if x != nil {
		return x.Base
	}
	return nil
}

type SummaryDataLSA struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Base           *BaseLSA               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SummaryAddress string                 `protobuf:"bytes,2,opt,name=summary_address,json=summaryAddress,proto3" json:"summary_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SummaryDataLSA) Reset() {
	*x = SummaryDataLSA{}
	mi := &file_protocol_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryDataLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryDataLSA) ProtoMessage() {}

func (x *SummaryDataLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryDataLSA.ProtoReflect.Descriptor instead.
func (*SummaryDataLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{46}
}

func (x *SummaryDataLSA) GetBase() *BaseLSA {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SummaryDataLSA) GetSummaryAddress() string {
	if x != nil {
		return x.SummaryAddress
	}
	return ""
}

type ASBRSummaryLSA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseLSA               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASBRSummaryLSA) Reset() {
	*x = ASBRSummaryLSA{}
	mi := &file_protocol_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASBRSummaryLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASBRSummaryLSA) ProtoMessage() {}

func (x *ASBRSummaryLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASBRSummaryLSA.ProtoReflect.Descriptor instead.
func (*ASBRSummaryLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{47}
}

func (x *ASBRSummaryLSA) GetBase() *BaseLSA {
	if x != nil {
		return x.Base
	}
	return nil
}

type NSSAExternalLSAData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseLSA               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	MetricType    string                 `protobuf:"bytes,2,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	Route         string                 `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
	Tag           int32                  `protobuf:"varint,4,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NSSAExternalLSAData) Reset() {
	*x = NSSAExternalLSAData{}
	mi := &file_protocol_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NSSAExternalLSAData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NSSAExternalLSAData) ProtoMessage() {}

func (x *NSSAExternalLSAData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NSSAExternalLSAData.ProtoReflect.Descriptor instead.
func (*NSSAExternalLSAData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{48}
}

func (x *NSSAExternalLSAData) GetBase() *BaseLSA {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *NSSAExternalLSAData) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *NSSAExternalLSAData) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *NSSAExternalLSAData) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

type ASExternalLSA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseLSA               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	MetricType    string                 `protobuf:"bytes,2,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // E1 or E2
	Route         string                 `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`                             // Prefix with mask
	Tag           int32                  `protobuf:"varint,4,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASExternalLSA) Reset() {
	*x = ASExternalLSA{}
	mi := &file_protocol_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASExternalLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASExternalLSA) ProtoMessage() {}

func (x *ASExternalLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASExternalLSA.ProtoReflect.Descriptor instead.
func (*ASExternalLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{49}
}

func (x *ASExternalLSA) GetBase() *BaseLSA {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ASExternalLSA) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *ASExternalLSA) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ASExternalLSA) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

// ================ OSPF External All ================
type OSPFExternalAll struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RouterId             string                 `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	AsExternalLinkStates []*ASExternalLinkState `protobuf:"bytes,2,rep,name=as_external_link_states,json=asExternalLinkStates,proto3" json:"as_external_link_states,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OSPFExternalAll) Reset() {
	*x = OSPFExternalAll{}
	mi := &file_protocol_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFExternalAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFExternalAll) ProtoMessage() {}

func (x *OSPFExternalAll) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFExternalAll.ProtoReflect.Descriptor instead.
func (*OSPFExternalAll) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{50}
}

func (x *OSPFExternalAll) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFExternalAll) GetAsExternalLinkStates() []*ASExternalLinkState {
	if x != nil {
		return x.AsExternalLinkStates
	}
	return nil
}

type ASExternalLinkState struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LsaAge            int32                  `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options           string                 `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags          int32                  `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	LsaType           string                 `protobuf:"bytes,4,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId       string                 `protobuf:"bytes,5,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter string                 `protobuf:"bytes,6,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber      string                 `protobuf:"bytes,7,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum          string                 `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length            int32                  `protobuf:"varint,9,opt,name=length,proto3" json:"length,omitempty"`
	NetworkMask       int32                  `protobuf:"varint,10,opt,name=network_mask,json=networkMask,proto3" json:"network_mask,omitempty"`
	MetricType        string                 `protobuf:"bytes,11,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	Tos               int32                  `protobuf:"varint,12,opt,name=tos,proto3" json:"tos,omitempty"`
	Metric            int32                  `protobuf:"varint,13,opt,name=metric,proto3" json:"metric,omitempty"`
	ForwardAddress    string                 `protobuf:"bytes,14,opt,name=forward_address,json=forwardAddress,proto3" json:"forward_address,omitempty"`
	ExternalRouteTag  int32                  `protobuf:"varint,15,opt,name=external_route_tag,json=externalRouteTag,proto3" json:"external_route_tag,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ASExternalLinkState) Reset() {
	*x = ASExternalLinkState{}
	mi := &file_protocol_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASExternalLinkState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASExternalLinkState) ProtoMessage() {}

func (x *ASExternalLinkState) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASExternalLinkState.ProtoReflect.Descriptor instead.
func (*ASExternalLinkState) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{51}
}

func (x *ASExternalLinkState) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *ASExternalLinkState) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *ASExternalLinkState) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *ASExternalLinkState) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *ASExternalLinkState) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *ASExternalLinkState) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *ASExternalLinkState) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *ASExternalLinkState) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *ASExternalLinkState) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ASExternalLinkState) GetNetworkMask() int32 {
	if x != nil {
		return x.NetworkMask
	}
	return 0
}

func (x *ASExternalLinkState) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *ASExternalLinkState) GetTos() int32 {
	if x != nil {
		return x.Tos
	}
	return 0
}

func (x *ASExternalLinkState) GetMetric() int32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *ASExternalLinkState) GetForwardAddress() string {
	if x != nil {
		return x.ForwardAddress
	}
	return ""
}

func (x *ASExternalLinkState) GetExternalRouteTag() int32 {
	if x != nil {
		return x.ExternalRouteTag
	}
	return 0
}

// ================ OSPF Nssa External All ================
type OSPFNssaExternalAll struct {
	state                     protoimpl.MessageState       `protogen:"open.v1"`
	RouterId                  string                       `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	NssaExternalAllLinkStates map[string]*NssaExternalArea `protobuf:"bytes,2,rep,name=nssa_external_all_link_states,json=NSSA-External Link States,proto3" json:"nssa_external_all_link_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *OSPFNssaExternalAll) Reset() {
	*x = OSPFNssaExternalAll{}
	mi := &file_protocol_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFNssaExternalAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFNssaExternalAll) ProtoMessage() {}

func (x *OSPFNssaExternalAll) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFNssaExternalAll.ProtoReflect.Descriptor instead.
func (*OSPFNssaExternalAll) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{52}
}

func (x *OSPFNssaExternalAll) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OSPFNssaExternalAll) GetNssaExternalAllLinkStates() map[string]*NssaExternalArea {
	if x != nil {
		return x.NssaExternalAllLinkStates
	}
	return nil
}

// ================ OSPF Neighbors ================
type OSPFNeighbors struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Neighbors     map[string]*NeighborList `protobuf:"bytes,1,rep,name=neighbors,proto3" json:"neighbors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSPFNeighbors) Reset() {
	*x = OSPFNeighbors{}
	mi := &file_protocol_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSPFNeighbors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSPFNeighbors) ProtoMessage() {}

func (x *OSPFNeighbors) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSPFNeighbors.ProtoReflect.Descriptor instead.
func (*OSPFNeighbors) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{53}
}

func (x *OSPFNeighbors) GetNeighbors() map[string]*NeighborList {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type NeighborList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Neighbors     []*Neighbor            `protobuf:"bytes,1,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NeighborList) Reset() {
	*x = NeighborList{}
	mi := &file_protocol_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NeighborList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeighborList) ProtoMessage() {}

func (x *NeighborList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeighborList.ProtoReflect.Descriptor instead.
func (*NeighborList) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{54}
}

func (x *NeighborList) GetNeighbors() []*Neighbor {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type Neighbor struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	Priority                           int32                  `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	State                              string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	NbrPriority                        int32                  `protobuf:"varint,3,opt,name=nbr_priority,json=nbrPriority,proto3" json:"nbr_priority,omitempty"`
	NbrState                           string                 `protobuf:"bytes,4,opt,name=nbr_state,json=nbrState,proto3" json:"nbr_state,omitempty"`
	Converged                          string                 `protobuf:"bytes,5,opt,name=converged,proto3" json:"converged,omitempty"`
	Role                               string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	UpTimeInMsec                       int64                  `protobuf:"varint,7,opt,name=up_time_in_msec,json=upTimeInMsec,proto3" json:"up_time_in_msec,omitempty"`
	DeadTimeMsecs                      int32                  `protobuf:"varint,8,opt,name=dead_time_msecs,json=deadTimeMsecs,proto3" json:"dead_time_msecs,omitempty"`
	RouterDeadIntervalTimerDueMsec     int32                  `protobuf:"varint,9,opt,name=router_dead_interval_timer_due_msec,json=routerDeadIntervalTimerDueMsec,proto3" json:"router_dead_interval_timer_due_msec,omitempty"`
	UpTime                             string                 `protobuf:"bytes,10,opt,name=up_time,json=upTime,proto3" json:"up_time,omitempty"`
	DeadTime                           string                 `protobuf:"bytes,11,opt,name=dead_time,json=deadTime,proto3" json:"dead_time,omitempty"`
	Address                            string                 `protobuf:"bytes,12,opt,name=address,proto3" json:"address,omitempty"`
	IfaceAddress                       string                 `protobuf:"bytes,13,opt,name=iface_address,json=ifaceAddress,proto3" json:"iface_address,omitempty"`
	IfaceName                          string                 `protobuf:"bytes,14,opt,name=iface_name,json=ifaceName,proto3" json:"iface_name,omitempty"`
	RetransmitCounter                  int32                  `protobuf:"varint,15,opt,name=retransmit_counter,json=retransmitCounter,proto3" json:"retransmit_counter,omitempty"`
	LinkStateRetransmissionListCounter int32                  `protobuf:"varint,16,opt,name=link_state_retransmission_list_counter,json=linkStateRetransmissionListCounter,proto3" json:"link_state_retransmission_list_counter,omitempty"`
	RequestCounter                     int32                  `protobuf:"varint,17,opt,name=request_counter,json=requestCounter,proto3" json:"request_counter,omitempty"`
	LinkStateRequestListCounter        int32                  `protobuf:"varint,18,opt,name=link_state_request_list_counter,json=linkStateRequestListCounter,proto3" json:"link_state_request_list_counter,omitempty"`
	DbSummaryCounter                   int32                  `protobuf:"varint,19,opt,name=db_summary_counter,json=dbSummaryCounter,proto3" json:"db_summary_counter,omitempty"`
	DatabaseSummaryListCounter         int32                  `protobuf:"varint,20,opt,name=database_summary_list_counter,json=databaseSummaryListCounter,proto3" json:"database_summary_list_counter,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *Neighbor) Reset() {
	*x = Neighbor{}
	mi := &file_protocol_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Neighbor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Neighbor) ProtoMessage() {}

func (x *Neighbor) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Neighbor.ProtoReflect.Descriptor instead.
func (*Neighbor) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{55}
}

func (x *Neighbor) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Neighbor) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Neighbor) GetNbrPriority() int32 {
	if x != nil {
		return x.NbrPriority
	}
	return 0
}

func (x *Neighbor) GetNbrState() string {
	if x != nil {
		return x.NbrState
	}
	return ""
}

func (x *Neighbor) GetConverged() string {
	if x != nil {
		return x.Converged
	}
	return ""
}

func (x *Neighbor) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Neighbor) GetUpTimeInMsec() int64 {
	if x != nil {
		return x.UpTimeInMsec
	}
	return 0
}

func (x *Neighbor) GetDeadTimeMsecs() int32 {
	if x != nil {
		return x.DeadTimeMsecs
	}
	return 0
}

func (x *Neighbor) GetRouterDeadIntervalTimerDueMsec() int32 {
	if x != nil {
		return x.RouterDeadIntervalTimerDueMsec
	}
	return 0
}

func (x *Neighbor) GetUpTime() string {
	if x != nil {
		return x.UpTime
	}
	return ""
}

func (x *Neighbor) GetDeadTime() string {
	if x != nil {
		return x.DeadTime
	}
	return ""
}

func (x *Neighbor) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Neighbor) GetIfaceAddress() string {
	if x != nil {
		return x.IfaceAddress
	}
	return ""
}

func (x *Neighbor) GetIfaceName() string {
	if x != nil {
		return x.IfaceName
	}
	return ""
}

func (x *Neighbor) GetRetransmitCounter() int32 {
	if x != nil {
		return x.RetransmitCounter
	}
	return 0
}

func (x *Neighbor) GetLinkStateRetransmissionListCounter() int32 {
	if x != nil {
		return x.LinkStateRetransmissionListCounter
	}
	return 0
}

func (x *Neighbor) GetRequestCounter() int32 {
	if x != nil {
		return x.RequestCounter
	}
	return 0
}

func (x *Neighbor) GetLinkStateRequestListCounter() int32 {
	if x != nil {
		return x.LinkStateRequestListCounter
	}
	return 0
}

func (x *Neighbor) GetDbSummaryCounter() int32 {
	if x != nil {
		return x.DbSummaryCounter
	}
	return 0
}

func (x *Neighbor) GetDatabaseSummaryListCounter() int32 {
	if x != nil {
		return x.DatabaseSummaryListCounter
	}
	return 0
}

// ================ Interfaces ================
type InterfaceList struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Interfaces    map[string]*SingleInterface `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceList) Reset() {
	*x = InterfaceList{}
	mi := &file_protocol_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceList) ProtoMessage() {}

func (x *InterfaceList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceList.ProtoReflect.Descriptor instead.
func (*InterfaceList) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{56}
}

func (x *InterfaceList) GetInterfaces() map[string]*SingleInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type SingleInterface struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AdministrativeStatus string                 `protobuf:"bytes,1,opt,name=administrative_status,json=administrativeStatus,proto3" json:"administrative_status,omitempty"`
	OperationalStatus    string                 `protobuf:"bytes,2,opt,name=operational_status,json=operationalStatus,proto3" json:"operational_status,omitempty"`
	LinkDetection        bool                   `protobuf:"varint,3,opt,name=link_detection,json=linkDetection,proto3" json:"link_detection,omitempty"`
	LinkUps              int32                  `protobuf:"varint,4,opt,name=link_ups,json=linkUps,proto3" json:"link_ups,omitempty"`
	LinkDowns            int32                  `protobuf:"varint,5,opt,name=link_downs,json=linkDowns,proto3" json:"link_downs,omitempty"`
	LastLinkUp           string                 `protobuf:"bytes,6,opt,name=last_link_up,json=lastLinkUp,proto3" json:"last_link_up,omitempty"`
	LastLinkDown         string                 `protobuf:"bytes,7,opt,name=last_link_down,json=lastLinkDown,proto3" json:"last_link_down,omitempty"`
	VrfName              string                 `protobuf:"bytes,8,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	MplsEnabled          bool                   `protobuf:"varint,9,opt,name=mpls_enabled,json=mplsEnabled,proto3" json:"mpls_enabled,omitempty"`
	LinkDown             bool                   `protobuf:"varint,10,opt,name=link_down,json=linkDown,proto3" json:"link_down,omitempty"`
	LinkDownV6           bool                   `protobuf:"varint,11,opt,name=link_down_v6,json=linkDownV6,proto3" json:"link_down_v6,omitempty"`
	McForwardingV4       bool                   `protobuf:"varint,12,opt,name=mc_forwarding_v4,json=mcForwardingV4,proto3" json:"mc_forwarding_v4,omitempty"`
	McForwardingV6       bool                   `protobuf:"varint,13,opt,name=mc_forwarding_v6,json=mcForwardingV6,proto3" json:"mc_forwarding_v6,omitempty"`
	PseudoInterface      bool                   `protobuf:"varint,14,opt,name=pseudo_interface,json=pseudoInterface,proto3" json:"pseudo_interface,omitempty"`
	Index                int32                  `protobuf:"varint,15,opt,name=index,proto3" json:"index,omitempty"`
	Metric               int32                  `protobuf:"varint,16,opt,name=metric,proto3" json:"metric,omitempty"`
	Mtu                  int32                  `protobuf:"varint,17,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Speed                int32                  `protobuf:"varint,18,opt,name=speed,proto3" json:"speed,omitempty"`
	Flags                string                 `protobuf:"bytes,19,opt,name=flags,proto3" json:"flags,omitempty"`
	Type                 string                 `protobuf:"bytes,20,opt,name=type,proto3" json:"type,omitempty"`
	HardwareAddress      string                 `protobuf:"bytes,21,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	IpAddresses          []*IpAddress           `protobuf:"bytes,22,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	InterfaceType        string                 `protobuf:"bytes,23,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	InterfaceSlaveType   string                 `protobuf:"bytes,24,opt,name=interface_slave_type,json=interfaceSlaveType,proto3" json:"interface_slave_type,omitempty"`
	LacpBypass           bool                   `protobuf:"varint,25,opt,name=lacp_bypass,json=lacpBypass,proto3" json:"lacp_bypass,omitempty"`
	EvpnMh               *EvpnMh                `protobuf:"bytes,26,opt,name=evpn_mh,json=evpnMh,proto3" json:"evpn_mh,omitempty"`
	Protodown            string                 `protobuf:"bytes,27,opt,name=protodown,proto3" json:"protodown,omitempty"`
	ParentIfindex        int32                  `protobuf:"varint,28,opt,name=parent_ifindex,json=parentIfindex,proto3" json:"parent_ifindex,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SingleInterface) Reset() {
	*x = SingleInterface{}
	mi := &file_protocol_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleInterface) ProtoMessage() {}

func (x *SingleInterface) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleInterface.ProtoReflect.Descriptor instead.
func (*SingleInterface) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{57}
}

func (x *SingleInterface) GetAdministrativeStatus() string {
	if x != nil {
		return x.AdministrativeStatus
	}
	return ""
}

func (x *SingleInterface) GetOperationalStatus() string {
	if x != nil {
		return x.OperationalStatus
	}
	return ""
}

func (x *SingleInterface) GetLinkDetection() bool {
	if x != nil {
		return x.LinkDetection
	}
	return false
}

func (x *SingleInterface) GetLinkUps() int32 {
	if x != nil {
		return x.LinkUps
	}
	return 0
}

func (x *SingleInterface) GetLinkDowns() int32 {
	if x != nil {
		return x.LinkDowns
	}
	return 0
}

func (x *SingleInterface) GetLastLinkUp() string {
	if x != nil {
		return x.LastLinkUp
	}
	return ""
}

func (x *SingleInterface) GetLastLinkDown() string {
	if x != nil {
		return x.LastLinkDown
	}
	return ""
}

func (x *SingleInterface) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *SingleInterface) GetMplsEnabled() bool {
	if x != nil {
		return x.MplsEnabled
	}
	return false
}

func (x *SingleInterface) GetLinkDown() bool {
	if x != nil {
		return x.LinkDown
	}
	return false
}

func (x *SingleInterface) GetLinkDownV6() bool {
	if x != nil {
		return x.LinkDownV6
	}
	return false
}

func (x *SingleInterface) GetMcForwardingV4() bool {
	if x != nil {
		return x.McForwardingV4
	}
	return false
}

func (x *SingleInterface) GetMcForwardingV6() bool {
	if x != nil {
		return x.McForwardingV6
	}
	return false
}

func (x *SingleInterface) GetPseudoInterface() bool {
	if x != nil {
		return x.PseudoInterface
	}
	return false
}

func (x *SingleInterface) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SingleInterface) GetMetric() int32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *SingleInterface) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *SingleInterface) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *SingleInterface) GetFlags() string {
	if x != nil {
		return x.Flags
	}
	return ""
}

func (x *SingleInterface) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SingleInterface) GetHardwareAddress() string {
	if x != nil {
		return x.HardwareAddress
	}
	return ""
}

func (x *SingleInterface) GetIpAddresses() []*IpAddress {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *SingleInterface) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *SingleInterface) GetInterfaceSlaveType() string {
	if x != nil {
		return x.InterfaceSlaveType
	}
	return ""
}

func (x *SingleInterface) GetLacpBypass() bool {
	if x != nil {
		return x.LacpBypass
	}
	return false
}

func (x *SingleInterface) GetEvpnMh() *EvpnMh {
	if x != nil {
		return x.EvpnMh
	}
	return nil
}

func (x *SingleInterface) GetProtodown() string {
	if x != nil {
		return x.Protodown
	}
	return ""
}

func (x *SingleInterface) GetParentIfindex() int32 {
	if x != nil {
		return x.ParentIfindex
	}
	return 0
}

type IpAddress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Secondary     bool                   `protobuf:"varint,2,opt,name=secondary,proto3" json:"secondary,omitempty"`
	Unnumbered    bool                   `protobuf:"varint,3,opt,name=unnumbered,proto3" json:"unnumbered,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpAddress) Reset() {
	*x = IpAddress{}
	mi := &file_protocol_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAddress) ProtoMessage() {}

func (x *IpAddress) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAddress.ProtoReflect.Descriptor instead.
func (*IpAddress) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{58}
}

func (x *IpAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IpAddress) GetSecondary() bool {
	if x != nil {
		return x.Secondary
	}
	return false
}

func (x *IpAddress) GetUnnumbered() bool {
	if x != nil {
		return x.Unnumbered
	}
	return false
}

type EvpnMh struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EthernetSegmentId string                 `protobuf:"bytes,1,opt,name=ethernet_segment_id,json=ethernetSegmentId,proto3" json:"ethernet_segment_id,omitempty"`
	Esi               string                 `protobuf:"bytes,2,opt,name=esi,proto3" json:"esi,omitempty"`
	DfPreference      int32                  `protobuf:"varint,3,opt,name=df_preference,json=dfPreference,proto3" json:"df_preference,omitempty"`
	DfAlgorithm       string                 `protobuf:"bytes,4,opt,name=df_algorithm,json=dfAlgorithm,proto3" json:"df_algorithm,omitempty"`
	DfStatus          string                 `protobuf:"bytes,5,opt,name=df_status,json=dfStatus,proto3" json:"df_status,omitempty"`
	MultiHomingMode   string                 `protobuf:"bytes,6,opt,name=multi_homing_mode,json=multiHomingMode,proto3" json:"multi_homing_mode,omitempty"`
	ActiveMode        bool                   `protobuf:"varint,7,opt,name=active_mode,json=activeMode,proto3" json:"active_mode,omitempty"`
	BypassMode        bool                   `protobuf:"varint,8,opt,name=bypass_mode,json=bypassMode,proto3" json:"bypass_mode,omitempty"`
	LocalBias         bool                   `protobuf:"varint,9,opt,name=local_bias,json=localBias,proto3" json:"local_bias,omitempty"`
	FastFailover      bool                   `protobuf:"varint,10,opt,name=fast_failover,json=fastFailover,proto3" json:"fast_failover,omitempty"`
	UpTime            string                 `protobuf:"bytes,11,opt,name=up_time,json=upTime,proto3" json:"up_time,omitempty"`
	BgpStatus         string                 `protobuf:"bytes,12,opt,name=bgp_status,json=bgpStatus,proto3" json:"bgp_status,omitempty"`
	ProtocolStatus    string                 `protobuf:"bytes,13,opt,name=protocol_status,json=protocolStatus,proto3" json:"protocol_status,omitempty"`
	ProtocolDown      bool                   `protobuf:"varint,14,opt,name=protocol_down,json=protocolDown,proto3" json:"protocol_down,omitempty"`
	MacCount          int32                  `protobuf:"varint,15,opt,name=mac_count,json=macCount,proto3" json:"mac_count,omitempty"`
	LocalIfindex      int32                  `protobuf:"varint,16,opt,name=local_ifindex,json=localIfindex,proto3" json:"local_ifindex,omitempty"`
	NetworkCount      int32                  `protobuf:"varint,17,opt,name=network_count,json=networkCount,proto3" json:"network_count,omitempty"`
	JoinCount         int32                  `protobuf:"varint,18,opt,name=join_count,json=joinCount,proto3" json:"join_count,omitempty"`
	LeaveCount        int32                  `protobuf:"varint,19,opt,name=leave_count,json=leaveCount,proto3" json:"leave_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EvpnMh) Reset() {
	*x = EvpnMh{}
	mi := &file_protocol_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvpnMh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvpnMh) ProtoMessage() {}

func (x *EvpnMh) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvpnMh.ProtoReflect.Descriptor instead.
func (*EvpnMh) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{59}
}

func (x *EvpnMh) GetEthernetSegmentId() string {
	if x != nil {
		return x.EthernetSegmentId
	}
	return ""
}

func (x *EvpnMh) GetEsi() string {
	if x != nil {
		return x.Esi
	}
	return ""
}

func (x *EvpnMh) GetDfPreference() int32 {
	if x != nil {
		return x.DfPreference
	}
	return 0
}

func (x *EvpnMh) GetDfAlgorithm() string {
	if x != nil {
		return x.DfAlgorithm
	}
	return ""
}

func (x *EvpnMh) GetDfStatus() string {
	if x != nil {
		return x.DfStatus
	}
	return ""
}

func (x *EvpnMh) GetMultiHomingMode() string {
	if x != nil {
		return x.MultiHomingMode
	}
	return ""
}

func (x *EvpnMh) GetActiveMode() bool {
	if x != nil {
		return x.ActiveMode
	}
	return false
}

func (x *EvpnMh) GetBypassMode() bool {
	if x != nil {
		return x.BypassMode
	}
	return false
}

func (x *EvpnMh) GetLocalBias() bool {
	if x != nil {
		return x.LocalBias
	}
	return false
}

func (x *EvpnMh) GetFastFailover() bool {
	if x != nil {
		return x.FastFailover
	}
	return false
}

func (x *EvpnMh) GetUpTime() string {
	if x != nil {
		return x.UpTime
	}
	return ""
}

func (x *EvpnMh) GetBgpStatus() string {
	if x != nil {
		return x.BgpStatus
	}
	return ""
}

func (x *EvpnMh) GetProtocolStatus() string {
	if x != nil {
		return x.ProtocolStatus
	}
	return ""
}

func (x *EvpnMh) GetProtocolDown() bool {
	if x != nil {
		return x.ProtocolDown
	}
	return false
}

func (x *EvpnMh) GetMacCount() int32 {
	if x != nil {
		return x.MacCount
	}
	return 0
}

func (x *EvpnMh) GetLocalIfindex() int32 {
	if x != nil {
		return x.LocalIfindex
	}
	return 0
}

func (x *EvpnMh) GetNetworkCount() int32 {
	if x != nil {
		return x.NetworkCount
	}
	return 0
}

func (x *EvpnMh) GetJoinCount() int32 {
	if x != nil {
		return x.JoinCount
	}
	return 0
}

func (x *EvpnMh) GetLeaveCount() int32 {
	if x != nil {
		return x.LeaveCount
	}
	return 0
}

// ================ Aggregator Routes ================
type RoutingInformationBase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        map[string]*RouteEntry `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoutingInformationBase) Reset() {
	*x = RoutingInformationBase{}
	mi := &file_protocol_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingInformationBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingInformationBase) ProtoMessage() {}

func (x *RoutingInformationBase) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingInformationBase.ProtoReflect.Descriptor instead.
func (*RoutingInformationBase) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{60}
}

func (x *RoutingInformationBase) GetRoutes() map[string]*RouteEntry {
	if x != nil {
		return x.Routes
	}
	return nil
}

type RouteEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*Route               `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteEntry) Reset() {
	*x = RouteEntry{}
	mi := &file_protocol_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteEntry) ProtoMessage() {}

func (x *RouteEntry) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteEntry.ProtoReflect.Descriptor instead.
func (*RouteEntry) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{61}
}

func (x *RouteEntry) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type Route struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Prefix                   string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PrefixLen                int32                  `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Protocol                 string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	VrfId                    int32                  `protobuf:"varint,4,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	VrfName                  string                 `protobuf:"bytes,5,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	Selected                 bool                   `protobuf:"varint,6,opt,name=selected,proto3" json:"selected,omitempty"`
	DestSelected             bool                   `protobuf:"varint,7,opt,name=dest_selected,json=destSelected,proto3" json:"dest_selected,omitempty"`
	Distance                 int32                  `protobuf:"varint,8,opt,name=distance,proto3" json:"distance,omitempty"`
	Metric                   int32                  `protobuf:"varint,9,opt,name=metric,proto3" json:"metric,omitempty"`
	Installed                bool                   `protobuf:"varint,10,opt,name=installed,proto3" json:"installed,omitempty"`
	Table                    int32                  `protobuf:"varint,11,opt,name=table,proto3" json:"table,omitempty"`
	InternalStatus           int32                  `protobuf:"varint,12,opt,name=internal_status,json=internalStatus,proto3" json:"internal_status,omitempty"`
	InternalFlags            int32                  `protobuf:"varint,13,opt,name=internal_flags,json=internalFlags,proto3" json:"internal_flags,omitempty"`
	InternalNextHopNum       int32                  `protobuf:"varint,14,opt,name=internal_next_hop_num,json=internalNextHopNum,proto3" json:"internal_next_hop_num,omitempty"`
	InternalNextHopActiveNum int32                  `protobuf:"varint,15,opt,name=internal_next_hop_active_num,json=internalNextHopActiveNum,proto3" json:"internal_next_hop_active_num,omitempty"`
	NexthopGroupId           int32                  `protobuf:"varint,16,opt,name=nexthop_group_id,json=nexthopGroupId,proto3" json:"nexthop_group_id,omitempty"`
	InstalledNexthopGroupId  int32                  `protobuf:"varint,17,opt,name=installed_nexthop_group_id,json=installedNexthopGroupId,proto3" json:"installed_nexthop_group_id,omitempty"`
	Uptime                   string                 `protobuf:"bytes,18,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Nexthops                 []*Nexthop             `protobuf:"bytes,19,rep,name=nexthops,proto3" json:"nexthops,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_protocol_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{62}
}

func (x *Route) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Route) GetPrefixLen() int32 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

func (x *Route) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Route) GetVrfId() int32 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *Route) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *Route) GetSelected() bool {
	if x != nil {
		return x.Selected
	}
	return false
}

func (x *Route) GetDestSelected() bool {
	if x != nil {
		return x.DestSelected
	}
	return false
}

func (x *Route) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Route) GetMetric() int32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *Route) GetInstalled() bool {
	if x != nil {
		return x.Installed
	}
	return false
}

func (x *Route) GetTable() int32 {
	if x != nil {
		return x.Table
	}
	return 0
}

func (x *Route) GetInternalStatus() int32 {
	if x != nil {
		return x.InternalStatus
	}
	return 0
}

func (x *Route) GetInternalFlags() int32 {
	if x != nil {
		return x.InternalFlags
	}
	return 0
}

func (x *Route) GetInternalNextHopNum() int32 {
	if x != nil {
		return x.InternalNextHopNum
	}
	return 0
}

func (x *Route) GetInternalNextHopActiveNum() int32 {
	if x != nil {
		return x.InternalNextHopActiveNum
	}
	return 0
}

func (x *Route) GetNexthopGroupId() int32 {
	if x != nil {
		return x.NexthopGroupId
	}
	return 0
}

func (x *Route) GetInstalledNexthopGroupId() int32 {
	if x != nil {
		return x.InstalledNexthopGroupId
	}
	return 0
}

func (x *Route) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *Route) GetNexthops() []*Nexthop {
	if x != nil {
		return x.Nexthops
	}
	return nil
}

type Nexthop struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Flags             int32                  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	Fib               bool                   `protobuf:"varint,2,opt,name=fib,proto3" json:"fib,omitempty"`
	DirectlyConnected bool                   `protobuf:"varint,3,opt,name=directly_connected,json=directlyConnected,proto3" json:"directly_connected,omitempty"`
	Duplicate         bool                   `protobuf:"varint,4,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	Ip                string                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Afi               string                 `protobuf:"bytes,6,opt,name=afi,proto3" json:"afi,omitempty"`
	InterfaceIndex    int32                  `protobuf:"varint,7,opt,name=interface_index,json=interfaceIndex,proto3" json:"interface_index,omitempty"`
	InterfaceName     string                 `protobuf:"bytes,8,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Active            bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	Weight            int32                  `protobuf:"varint,10,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Nexthop) Reset() {
	*x = Nexthop{}
	mi := &file_protocol_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nexthop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nexthop) ProtoMessage() {}

func (x *Nexthop) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nexthop.ProtoReflect.Descriptor instead.
func (*Nexthop) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{63}
}

func (x *Nexthop) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Nexthop) GetFib() bool {
	if x != nil {
		return x.Fib
	}
	return false
}

func (x *Nexthop) GetDirectlyConnected() bool {
	if x != nil {
		return x.DirectlyConnected
	}
	return false
}

func (x *Nexthop) GetDuplicate() bool {
	if x != nil {
		return x.Duplicate
	}
	return false
}

func (x *Nexthop) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Nexthop) GetAfi() string {
	if x != nil {
		return x.Afi
	}
	return ""
}

func (x *Nexthop) GetInterfaceIndex() int32 {
	if x != nil {
		return x.InterfaceIndex
	}
	return 0
}

func (x *Nexthop) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *Nexthop) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Nexthop) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type RibFibSummaryRoutes struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RouteSummaries []*RouteSummary        `protobuf:"bytes,1,rep,name=route_summaries,json=routeSummaries,proto3" json:"route_summaries,omitempty"`
	RoutesTotal    int32                  `protobuf:"varint,2,opt,name=routes_total,json=routesTotal,proto3" json:"routes_total,omitempty"`
	RoutesTotalFib int32                  `protobuf:"varint,3,opt,name=routes_total_fib,json=routesTotalFib,proto3" json:"routes_total_fib,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RibFibSummaryRoutes) Reset() {
	*x = RibFibSummaryRoutes{}
	mi := &file_protocol_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RibFibSummaryRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RibFibSummaryRoutes) ProtoMessage() {}

func (x *RibFibSummaryRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RibFibSummaryRoutes.ProtoReflect.Descriptor instead.
func (*RibFibSummaryRoutes) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{64}
}

func (x *RibFibSummaryRoutes) GetRouteSummaries() []*RouteSummary {
	if x != nil {
		return x.RouteSummaries
	}
	return nil
}

func (x *RibFibSummaryRoutes) GetRoutesTotal() int32 {
	if x != nil {
		return x.RoutesTotal
	}
	return 0
}

func (x *RibFibSummaryRoutes) GetRoutesTotalFib() int32 {
	if x != nil {
		return x.RoutesTotalFib
	}
	return 0
}

type RouteSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fib           int32                  `protobuf:"varint,1,opt,name=fib,proto3" json:"fib,omitempty"`
	Rib           int32                  `protobuf:"varint,2,opt,name=rib,proto3" json:"rib,omitempty"`
	FibOffLoaded  int32                  `protobuf:"varint,3,opt,name=fib_off_loaded,json=fibOffLoaded,proto3" json:"fib_off_loaded,omitempty"`
	FibTrapped    int32                  `protobuf:"varint,4,opt,name=fib_trapped,json=fibTrapped,proto3" json:"fib_trapped,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteSummary) Reset() {
	*x = RouteSummary{}
	mi := &file_protocol_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteSummary) ProtoMessage() {}

func (x *RouteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteSummary.ProtoReflect.Descriptor instead.
func (*RouteSummary) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{65}
}

func (x *RouteSummary) GetFib() int32 {
	if x != nil {
		return x.Fib
	}
	return 0
}

func (x *RouteSummary) GetRib() int32 {
	if x != nil {
		return x.Rib
	}
	return 0
}

func (x *RouteSummary) GetFibOffLoaded() int32 {
	if x != nil {
		return x.FibOffLoaded
	}
	return 0
}

func (x *RouteSummary) GetFibTrapped() int32 {
	if x != nil {
		return x.FibTrapped
	}
	return 0
}

func (x *RouteSummary) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// new
type AnomalyAnalysis struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RouterAnomaly       *AnomalyDetection      `protobuf:"bytes,1,opt,name=router_anomaly,json=routerAnomaly,proto3" json:"router_anomaly,omitempty"`
	ExternalAnomaly     *AnomalyDetection      `protobuf:"bytes,2,opt,name=external_anomaly,json=externalAnomaly,proto3" json:"external_anomaly,omitempty"`
	NssaExternalAnomaly *AnomalyDetection      `protobuf:"bytes,3,opt,name=nssa_external_anomaly,json=nssaExternalAnomaly,proto3" json:"nssa_external_anomaly,omitempty"`
	LsdbToRibAnomaly    *AnomalyDetection      `protobuf:"bytes,4,opt,name=lsdb_to_rib_anomaly,json=lsdbToRibAnomaly,proto3" json:"lsdb_to_rib_anomaly,omitempty"`
	RibToFibAnomaly     *AnomalyDetection      `protobuf:"bytes,5,opt,name=rib_to_fib_anomaly,json=ribToFibAnomaly,proto3" json:"rib_to_fib_anomaly,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AnomalyAnalysis) Reset() {
	*x = AnomalyAnalysis{}
	mi := &file_protocol_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnomalyAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyAnalysis) ProtoMessage() {}

func (x *AnomalyAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyAnalysis.ProtoReflect.Descriptor instead.
func (*AnomalyAnalysis) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{66}
}

func (x *AnomalyAnalysis) GetRouterAnomaly() *AnomalyDetection {
	if x != nil {
		return x.RouterAnomaly
	}
	return nil
}

func (x *AnomalyAnalysis) GetExternalAnomaly() *AnomalyDetection {
	if x != nil {
		return x.ExternalAnomaly
	}
	return nil
}

func (x *AnomalyAnalysis) GetNssaExternalAnomaly() *AnomalyDetection {
	if x != nil {
		return x.NssaExternalAnomaly
	}
	return nil
}

func (x *AnomalyAnalysis) GetLsdbToRibAnomaly() *AnomalyDetection {
	if x != nil {
		return x.LsdbToRibAnomaly
	}
	return nil
}

func (x *AnomalyAnalysis) GetRibToFibAnomaly() *AnomalyDetection {
	if x != nil {
		return x.RibToFibAnomaly
	}
	return nil
}

type AnomalyDetection struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	HasOverAdvertisedPrefixes bool                   `protobuf:"varint,1,opt,name=HasOverAdvertisedPrefixes,proto3" json:"HasOverAdvertisedPrefixes,omitempty"`
	HasUnAdvertisedPrefixes   bool                   `protobuf:"varint,2,opt,name=HasUnAdvertisedPrefixes,proto3" json:"HasUnAdvertisedPrefixes,omitempty"`
	HasDuplicatePrefixes      bool                   `protobuf:"varint,3,opt,name=HasDuplicatePrefixes,proto3" json:"HasDuplicatePrefixes,omitempty"`
	HasMisconfiguredPrefixes  bool                   `protobuf:"varint,4,opt,name=HasMisconfiguredPrefixes,proto3" json:"HasMisconfiguredPrefixes,omitempty"`
	SuperfluousEntries        []*Advertisement       `protobuf:"bytes,5,rep,name=superfluous_entries,json=superfluousEntries,proto3" json:"superfluous_entries,omitempty"`
	MissingEntries            []*Advertisement       `protobuf:"bytes,6,rep,name=missing_entries,json=missingEntries,proto3" json:"missing_entries,omitempty"`
	DuplicateEntries          []*Advertisement       `protobuf:"bytes,7,rep,name=duplicate_entries,json=duplicateEntries,proto3" json:"duplicate_entries,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AnomalyDetection) Reset() {
	*x = AnomalyDetection{}
	mi := &file_protocol_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnomalyDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyDetection) ProtoMessage() {}

func (x *AnomalyDetection) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyDetection.ProtoReflect.Descriptor instead.
func (*AnomalyDetection) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{67}
}

func (x *AnomalyDetection) GetHasOverAdvertisedPrefixes() bool {
	if x != nil {
		return x.HasOverAdvertisedPrefixes
	}
	return false
}

func (x *AnomalyDetection) GetHasUnAdvertisedPrefixes() bool {
	if x != nil {
		return x.HasUnAdvertisedPrefixes
	}
	return false
}

func (x *AnomalyDetection) GetHasDuplicatePrefixes() bool {
	if x != nil {
		return x.HasDuplicatePrefixes
	}
	return false
}

func (x *AnomalyDetection) GetHasMisconfiguredPrefixes() bool {
	if x != nil {
		return x.HasMisconfiguredPrefixes
	}
	return false
}

func (x *AnomalyDetection) GetSuperfluousEntries() []*Advertisement {
	if x != nil {
		return x.SuperfluousEntries
	}
	return nil
}

func (x *AnomalyDetection) GetMissingEntries() []*Advertisement {
	if x != nil {
		return x.MissingEntries
	}
	return nil
}

func (x *AnomalyDetection) GetDuplicateEntries() []*Advertisement {
	if x != nil {
		return x.DuplicateEntries
	}
	return nil
}

type Advertisement struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InterfaceAddress string                 `protobuf:"bytes,1,opt,name=InterfaceAddress,proto3" json:"InterfaceAddress,omitempty"`
	LinkStateId      string                 `protobuf:"bytes,2,opt,name=LinkStateId,proto3" json:"LinkStateId,omitempty"`
	PrefixLength     string                 `protobuf:"bytes,3,opt,name=PrefixLength,proto3" json:"PrefixLength,omitempty"`
	LinkType         string                 `protobuf:"bytes,4,opt,name=LinkType,proto3" json:"LinkType,omitempty"`
	PBit             bool                   `protobuf:"varint,5,opt,name=PBit,proto3" json:"PBit,omitempty"`
	Options          string                 `protobuf:"bytes,6,opt,name=Options,proto3" json:"Options,omitempty"`
	Ospf             bool                   `protobuf:"varint,7,opt,name=Ospf,proto3" json:"Ospf,omitempty"`
	OspfArea         string                 `protobuf:"bytes,8,opt,name=ospf_area,json=ospfArea,proto3" json:"ospf_area,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Advertisement) Reset() {
	*x = Advertisement{}
	mi := &file_protocol_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Advertisement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Advertisement) ProtoMessage() {}

func (x *Advertisement) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Advertisement.ProtoReflect.Descriptor instead.
func (*Advertisement) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{68}
}

func (x *Advertisement) GetInterfaceAddress() string {
	if x != nil {
		return x.InterfaceAddress
	}
	return ""
}

func (x *Advertisement) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *Advertisement) GetPrefixLength() string {
	if x != nil {
		return x.PrefixLength
	}
	return ""
}

func (x *Advertisement) GetLinkType() string {
	if x != nil {
		return x.LinkType
	}
	return ""
}

func (x *Advertisement) GetPBit() bool {
	if x != nil {
		return x.PBit
	}
	return false
}

func (x *Advertisement) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *Advertisement) GetOspf() bool {
	if x != nil {
		return x.Ospf
	}
	return false
}

func (x *Advertisement) GetOspfArea() string {
	if x != nil {
		return x.OspfArea
	}
	return ""
}

type AccessListAnalyzer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessList    string                 `protobuf:"bytes,1,opt,name=AccessList,proto3" json:"AccessList,omitempty"`
	AclEntry      []*ACLEntry            `protobuf:"bytes,2,rep,name=acl_entry,json=aclEntry,proto3" json:"acl_entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessListAnalyzer) Reset() {
	*x = AccessListAnalyzer{}
	mi := &file_protocol_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListAnalyzer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListAnalyzer) ProtoMessage() {}

func (x *AccessListAnalyzer) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListAnalyzer.ProtoReflect.Descriptor instead.
func (*AccessListAnalyzer) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{69}
}

func (x *AccessListAnalyzer) GetAccessList() string {
	if x != nil {
		return x.AccessList
	}
	return ""
}

func (x *AccessListAnalyzer) GetAclEntry() []*ACLEntry {
	if x != nil {
		return x.AclEntry
	}
	return nil
}

type ACLEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IPAddress     string                 `protobuf:"bytes,1,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
	PrefixLength  int32                  `protobuf:"varint,2,opt,name=PrefixLength,proto3" json:"PrefixLength,omitempty"`
	IsPermit      bool                   `protobuf:"varint,3,opt,name=IsPermit,proto3" json:"IsPermit,omitempty"`
	Any           bool                   `protobuf:"varint,4,opt,name=Any,proto3" json:"Any,omitempty"`
	Sequence      int32                  `protobuf:"varint,5,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ACLEntry) Reset() {
	*x = ACLEntry{}
	mi := &file_protocol_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ACLEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLEntry) ProtoMessage() {}

func (x *ACLEntry) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLEntry.ProtoReflect.Descriptor instead.
func (*ACLEntry) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{70}
}

func (x *ACLEntry) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *ACLEntry) GetPrefixLength() int32 {
	if x != nil {
		return x.PrefixLength
	}
	return 0
}

func (x *ACLEntry) GetIsPermit() bool {
	if x != nil {
		return x.IsPermit
	}
	return false
}

func (x *ACLEntry) GetAny() bool {
	if x != nil {
		return x.Any
	}
	return false
}

func (x *ACLEntry) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type StaticList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddress     string                 `protobuf:"bytes,1,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`
	PrefixLength  int32                  `protobuf:"varint,2,opt,name=PrefixLength,proto3" json:"PrefixLength,omitempty"`
	NextHop       string                 `protobuf:"bytes,3,opt,name=NextHop,proto3" json:"NextHop,omitempty"`
	Area          string                 `protobuf:"bytes,4,opt,name=Area,proto3" json:"Area,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticList) Reset() {
	*x = StaticList{}
	mi := &file_protocol_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticList) ProtoMessage() {}

func (x *StaticList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticList.ProtoReflect.Descriptor instead.
func (*StaticList) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{71}
}

func (x *StaticList) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *StaticList) GetPrefixLength() int32 {
	if x != nil {
		return x.PrefixLength
	}
	return 0
}

func (x *StaticList) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *StaticList) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

type IntraAreaLsa struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	RouterId      string                 `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	RouterType    string                 `protobuf:"bytes,3,opt,name=router_type,json=routerType,proto3" json:"router_type,omitempty"`
	Areas         []*AreaAnalyzer        `protobuf:"bytes,4,rep,name=areas,proto3" json:"areas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntraAreaLsa) Reset() {
	*x = IntraAreaLsa{}
	mi := &file_protocol_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntraAreaLsa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntraAreaLsa) ProtoMessage() {}

func (x *IntraAreaLsa) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntraAreaLsa.ProtoReflect.Descriptor instead.
func (*IntraAreaLsa) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{72}
}

func (x *IntraAreaLsa) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *IntraAreaLsa) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *IntraAreaLsa) GetRouterType() string {
	if x != nil {
		return x.RouterType
	}
	return ""
}

func (x *IntraAreaLsa) GetAreas() []*AreaAnalyzer {
	if x != nil {
		return x.Areas
	}
	return nil
}

type InterAreaLsa struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	RouterId      string                 `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	RouterType    string                 `protobuf:"bytes,3,opt,name=router_type,json=routerType,proto3" json:"router_type,omitempty"`
	Areas         []*AreaAnalyzer        `protobuf:"bytes,4,rep,name=areas,proto3" json:"areas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterAreaLsa) Reset() {
	*x = InterAreaLsa{}
	mi := &file_protocol_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterAreaLsa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterAreaLsa) ProtoMessage() {}

func (x *InterAreaLsa) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterAreaLsa.ProtoReflect.Descriptor instead.
func (*InterAreaLsa) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{73}
}

func (x *InterAreaLsa) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *InterAreaLsa) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *InterAreaLsa) GetRouterType() string {
	if x != nil {
		return x.RouterType
	}
	return ""
}

func (x *InterAreaLsa) GetAreas() []*AreaAnalyzer {
	if x != nil {
		return x.Areas
	}
	return nil
}

type AreaAnalyzer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AreaName      string                 `protobuf:"bytes,1,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
	LsaType       string                 `protobuf:"bytes,2,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	AreaType      string                 `protobuf:"bytes,3,opt,name=area_type,json=areaType,proto3" json:"area_type,omitempty"`
	Links         []*Advertisement       `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AreaAnalyzer) Reset() {
	*x = AreaAnalyzer{}
	mi := &file_protocol_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AreaAnalyzer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaAnalyzer) ProtoMessage() {}

func (x *AreaAnalyzer) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaAnalyzer.ProtoReflect.Descriptor instead.
func (*AreaAnalyzer) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{74}
}

func (x *AreaAnalyzer) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *AreaAnalyzer) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *AreaAnalyzer) GetAreaType() string {
	if x != nil {
		return x.AreaType
	}
	return ""
}

func (x *AreaAnalyzer) GetLinks() []*Advertisement {
	if x != nil {
		return x.Links
	}
	return nil
}

type RibPrefixes struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Prefix         string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PrefixLength   string                 `protobuf:"bytes,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	Protocol       string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	NextHopAddress string                 `protobuf:"bytes,4,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RibPrefixes) Reset() {
	*x = RibPrefixes{}
	mi := &file_protocol_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RibPrefixes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RibPrefixes) ProtoMessage() {}

func (x *RibPrefixes) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RibPrefixes.ProtoReflect.Descriptor instead.
func (*RibPrefixes) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{75}
}

func (x *RibPrefixes) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *RibPrefixes) GetPrefixLength() string {
	if x != nil {
		return x.PrefixLength
	}
	return ""
}

func (x *RibPrefixes) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *RibPrefixes) GetNextHopAddress() string {
	if x != nil {
		return x.NextHopAddress
	}
	return ""
}

type ParsedAnalyzerData struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ShouldRouterLsdb       *IntraAreaLsa          `protobuf:"bytes,1,opt,name=should_router_lsdb,json=shouldRouterLsdb,proto3" json:"should_router_lsdb,omitempty"`
	ShouldExternalLsdb     *InterAreaLsa          `protobuf:"bytes,2,opt,name=should_external_lsdb,json=shouldExternalLsdb,proto3" json:"should_external_lsdb,omitempty"`
	ShouldNssaExternalLsdb *InterAreaLsa          `protobuf:"bytes,3,opt,name=should_nssa_external_lsdb,json=shouldNssaExternalLsdb,proto3" json:"should_nssa_external_lsdb,omitempty"`
	P2PMap                 *PeerInterfaceMap      `protobuf:"bytes,4,opt,name=p2p_map,json=p2pMap,proto3" json:"p2p_map,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ParsedAnalyzerData) Reset() {
	*x = ParsedAnalyzerData{}
	mi := &file_protocol_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParsedAnalyzerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedAnalyzerData) ProtoMessage() {}

func (x *ParsedAnalyzerData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedAnalyzerData.ProtoReflect.Descriptor instead.
func (*ParsedAnalyzerData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{76}
}

func (x *ParsedAnalyzerData) GetShouldRouterLsdb() *IntraAreaLsa {
	if x != nil {
		return x.ShouldRouterLsdb
	}
	return nil
}

func (x *ParsedAnalyzerData) GetShouldExternalLsdb() *InterAreaLsa {
	if x != nil {
		return x.ShouldExternalLsdb
	}
	return nil
}

func (x *ParsedAnalyzerData) GetShouldNssaExternalLsdb() *InterAreaLsa {
	if x != nil {
		return x.ShouldNssaExternalLsdb
	}
	return nil
}

func (x *ParsedAnalyzerData) GetP2PMap() *PeerInterfaceMap {
	if x != nil {
		return x.P2PMap
	}
	return nil
}

// Main message containing the router information
type OspfRouterInfo struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	RouterId         string                     `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	RouterLinkStates map[string]*AreaLinkStates `protobuf:"bytes,2,rep,name=router_link_states,json=routerLinkStates,proto3" json:"router_link_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OspfRouterInfo) Reset() {
	*x = OspfRouterInfo{}
	mi := &file_protocol_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OspfRouterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OspfRouterInfo) ProtoMessage() {}

func (x *OspfRouterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OspfRouterInfo.ProtoReflect.Descriptor instead.
func (*OspfRouterInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{77}
}

func (x *OspfRouterInfo) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *OspfRouterInfo) GetRouterLinkStates() map[string]*AreaLinkStates {
	if x != nil {
		return x.RouterLinkStates
	}
	return nil
}

// Container for all link states in an area
type AreaLinkStates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouterLsas    map[string]*RouterLSA  `protobuf:"bytes,1,rep,name=router_lsas,json=routerLsas,proto3" json:"router_lsas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AreaLinkStates) Reset() {
	*x = AreaLinkStates{}
	mi := &file_protocol_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AreaLinkStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaLinkStates) ProtoMessage() {}

func (x *AreaLinkStates) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaLinkStates.ProtoReflect.Descriptor instead.
func (*AreaLinkStates) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{78}
}

func (x *AreaLinkStates) GetRouterLsas() map[string]*RouterLSA {
	if x != nil {
		return x.RouterLsas
	}
	return nil
}

// Router Link State Advertisement
type RouterLSA struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LsaAge            int32                  `protobuf:"varint,1,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	Options           string                 `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	LsaFlags          int32                  `protobuf:"varint,3,opt,name=lsa_flags,json=lsaFlags,proto3" json:"lsa_flags,omitempty"`
	Flags             int32                  `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Asbr              bool                   `protobuf:"varint,5,opt,name=asbr,proto3" json:"asbr,omitempty"`
	LsaType           string                 `protobuf:"bytes,6,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	LinkStateId       string                 `protobuf:"bytes,7,opt,name=link_state_id,json=linkStateId,proto3" json:"link_state_id,omitempty"`
	AdvertisingRouter string                 `protobuf:"bytes,8,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaSeqNumber      string                 `protobuf:"bytes,9,opt,name=lsa_seq_number,json=lsaSeqNumber,proto3" json:"lsa_seq_number,omitempty"`
	Checksum          string                 `protobuf:"bytes,10,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Length            int32                  `protobuf:"varint,11,opt,name=length,proto3" json:"length,omitempty"`
	NumOfLinks        int32                  `protobuf:"varint,12,opt,name=num_of_links,json=numOfLinks,proto3" json:"num_of_links,omitempty"`
	RouterLinks       map[string]*RouterLink `protobuf:"bytes,13,rep,name=router_links,json=routerLinks,proto3" json:"router_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RouterLSA) Reset() {
	*x = RouterLSA{}
	mi := &file_protocol_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterLSA) ProtoMessage() {}

func (x *RouterLSA) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterLSA.ProtoReflect.Descriptor instead.
func (*RouterLSA) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{79}
}

func (x *RouterLSA) GetLsaAge() int32 {
	if x != nil {
		return x.LsaAge
	}
	return 0
}

func (x *RouterLSA) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *RouterLSA) GetLsaFlags() int32 {
	if x != nil {
		return x.LsaFlags
	}
	return 0
}

func (x *RouterLSA) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *RouterLSA) GetAsbr() bool {
	if x != nil {
		return x.Asbr
	}
	return false
}

func (x *RouterLSA) GetLsaType() string {
	if x != nil {
		return x.LsaType
	}
	return ""
}

func (x *RouterLSA) GetLinkStateId() string {
	if x != nil {
		return x.LinkStateId
	}
	return ""
}

func (x *RouterLSA) GetAdvertisingRouter() string {
	if x != nil {
		return x.AdvertisingRouter
	}
	return ""
}

func (x *RouterLSA) GetLsaSeqNumber() string {
	if x != nil {
		return x.LsaSeqNumber
	}
	return ""
}

func (x *RouterLSA) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *RouterLSA) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *RouterLSA) GetNumOfLinks() int32 {
	if x != nil {
		return x.NumOfLinks
	}
	return 0
}

func (x *RouterLSA) GetRouterLinks() map[string]*RouterLink {
	if x != nil {
		return x.RouterLinks
	}
	return nil
}

// Individual router link
type RouterLink struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	LinkType string                 `protobuf:"bytes,1,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	// For transit networks
	DesignatedRouterAddress *string `protobuf:"bytes,2,opt,name=designated_router_address,json=designatedRouterAddress,proto3,oneof" json:"designated_router_address,omitempty"`
	RouterInterfaceAddress  *string `protobuf:"bytes,3,opt,name=router_interface_address,json=routerInterfaceAddress,proto3,oneof" json:"router_interface_address,omitempty"`
	// For stub networks
	NetworkAddress  *string `protobuf:"bytes,4,opt,name=network_address,json=networkAddress,proto3,oneof" json:"network_address,omitempty"`
	NetworkMask     *string `protobuf:"bytes,5,opt,name=network_mask,json=networkMask,proto3,oneof" json:"network_mask,omitempty"`
	NumOfTosMetrics int32   `protobuf:"varint,6,opt,name=num_of_tos_metrics,json=numOfTosMetrics,proto3" json:"num_of_tos_metrics,omitempty"`
	Tos0Metric      int32   `protobuf:"varint,7,opt,name=tos0_metric,json=tos0Metric,proto3" json:"tos0_metric,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RouterLink) Reset() {
	*x = RouterLink{}
	mi := &file_protocol_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterLink) ProtoMessage() {}

func (x *RouterLink) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterLink.ProtoReflect.Descriptor instead.
func (*RouterLink) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{80}
}

func (x *RouterLink) GetLinkType() string {
	if x != nil {
		return x.LinkType
	}
	return ""
}

func (x *RouterLink) GetDesignatedRouterAddress() string {
	if x != nil && x.DesignatedRouterAddress != nil {
		return *x.DesignatedRouterAddress
	}
	return ""
}

func (x *RouterLink) GetRouterInterfaceAddress() string {
	if x != nil && x.RouterInterfaceAddress != nil {
		return *x.RouterInterfaceAddress
	}
	return ""
}

func (x *RouterLink) GetNetworkAddress() string {
	if x != nil && x.NetworkAddress != nil {
		return *x.NetworkAddress
	}
	return ""
}

func (x *RouterLink) GetNetworkMask() string {
	if x != nil && x.NetworkMask != nil {
		return *x.NetworkMask
	}
	return ""
}

func (x *RouterLink) GetNumOfTosMetrics() int32 {
	if x != nil {
		return x.NumOfTosMetrics
	}
	return 0
}

func (x *RouterLink) GetTos0Metric() int32 {
	if x != nil {
		return x.Tos0Metric
	}
	return 0
}

var File_protocol_proto protoreflect.FileDescriptor

const file_protocol_proto_rawDesc = "" +
	"\n" +
	"\x0eprotocol.proto\x12\rcommunication\"\xd2\x01\n" +
	"\aMessage\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12:\n" +
	"\x06params\x18\x03 \x03(\v2\".communication.Message.ParamsEntryR\x06params\x1aW\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.communication.ResponseValueR\x05value:\x028\x01\"\xd0\x01\n" +
	"\aCommand\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12:\n" +
	"\x06params\x18\x03 \x03(\v2\".communication.Command.ParamsEntryR\x06params\x1aW\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.communication.ResponseValueR\x05value:\x028\x01\"n\n" +
	"\bResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x04data\x18\x03 \x01(\v2\x1c.communication.ResponseValueR\x04data\"\xd5\x01\n" +
	"\x10PeerInterfaceMap\x12v\n" +
	"\x19peer_interface_to_address\x18\x01 \x03(\v2;.communication.PeerInterfaceMap.PeerInterfaceToAddressEntryR\x16peerInterfaceToAddress\x1aI\n" +
	"\x1bPeerInterfaceToAddressEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\r\n" +
	"\rResponseValue\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12U\n" +
	"\x14parsed_analyzer_data\x18\x02 \x01(\v2!.communication.ParsedAnalyzerDataH\x00R\x12parsedAnalyzerData\x12;\n" +
	"\aanomaly\x18\x03 \x01(\v2\x1f.communication.AnomalyDetectionH\x00R\aanomaly\x12\\\n" +
	"\x19peer_interface_to_address\x18\x04 \x01(\v2\x1f.communication.PeerInterfaceMapH\x00R\x16peerInterfaceToAddress\x12a\n" +
	"\x18general_ospf_information\x18\x05 \x01(\v2%.communication.GeneralOspfInformationH\x00R\x16generalOspfInformation\x12B\n" +
	"\rospf_database\x18\x06 \x01(\v2\x1b.communication.OSPFDatabaseH\x00R\fospfDatabase\x12I\n" +
	"\x10ospf_router_data\x18\a \x01(\v2\x1d.communication.OSPFRouterDataH\x00R\x0eospfRouterData\x12L\n" +
	"\x11ospf_network_data\x18\b \x01(\v2\x1e.communication.OSPFNetworkDataH\x00R\x0fospfNetworkData\x12L\n" +
	"\x11ospf_summary_data\x18\t \x01(\v2\x1e.communication.OSPFSummaryDataH\x00R\x0fospfSummaryData\x12Y\n" +
	"\x16ospf_asbr_summary_data\x18\n" +
	" \x01(\v2\".communication.OSPFAsbrSummaryDataH\x00R\x13ospfAsbrSummaryData\x12O\n" +
	"\x12ospf_external_data\x18\v \x01(\v2\x1f.communication.OSPFExternalDataH\x00R\x10ospfExternalData\x12\\\n" +
	"\x17ospf_nssa_external_data\x18\f \x01(\v2#.communication.OSPFNssaExternalDataH\x00R\x14ospfNssaExternalData\x12L\n" +
	"\x11ospf_external_all\x18\r \x01(\v2\x1e.communication.OSPFExternalAllH\x00R\x0fospfExternalAll\x12Y\n" +
	"\x16ospf_nssa_external_all\x18\x0e \x01(\v2\".communication.OSPFNssaExternalAllH\x00R\x13ospfNssaExternalAll\x12E\n" +
	"\x0eospf_neighbors\x18\x0f \x01(\v2\x1c.communication.OSPFNeighborsH\x00R\rospfNeighbors\x12>\n" +
	"\n" +
	"interfaces\x18\x10 \x01(\v2\x1c.communication.InterfaceListH\x00R\n" +
	"interfaces\x12a\n" +
	"\x18routing_information_base\x18\x11 \x01(\v2%.communication.RoutingInformationBaseH\x00R\x16routingInformationBase\x12Y\n" +
	"\x16rib_fib_summary_routes\x18\x12 \x01(\v2\".communication.RibFibSummaryRoutesH\x00R\x13ribFibSummaryRoutes\x12a\n" +
	"\x18static_frr_configuration\x18\x13 \x01(\v2%.communication.StaticFRRConfigurationH\x00R\x16staticFrrConfiguration\x12E\n" +
	"\x0esystem_metrics\x18\x14 \x01(\v2\x1c.communication.SystemMetricsH\x00R\rsystemMetrics\x12F\n" +
	"\x0ffrr_router_data\x18\x15 \x01(\v2\x1c.communication.FRRRouterDataH\x00R\rfrrRouterDataB\x06\n" +
	"\x04kind\"\x9f\x01\n" +
	"\rNetworkConfig\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12-\n" +
	"\x05areas\x18\x02 \x03(\v2\x17.communication.OSPFAreaR\x05areas\x12B\n" +
	"\n" +
	"interfaces\x18\x03 \x03(\v2\".communication.OSPFInterfaceConfigR\n" +
	"interfaces\"6\n" +
	"\bOSPFArea\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bnetworks\x18\x02 \x03(\tR\bnetworks\"\x89\x01\n" +
	"\x13OSPFInterfaceConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04area\x18\x02 \x01(\tR\x04area\x12\x1c\n" +
	"\tIpAddress\x18\x03 \x01(\tR\tIpAddress\x12\x18\n" +
	"\apassive\x18\x04 \x01(\bR\apassive\x12\x12\n" +
	"\x04cost\x18\x05 \x01(\x05R\x04cost\"\xd9\f\n" +
	"\vFullFRRData\x12@\n" +
	"\rospf_database\x18\x01 \x01(\v2\x1b.communication.OSPFDatabaseR\fospfDatabase\x12G\n" +
	"\x10ospf_router_data\x18\x02 \x01(\v2\x1d.communication.OSPFRouterDataR\x0eospfRouterData\x12_\n" +
	"\x18general_ospf_information\x18\x03 \x01(\v2%.communication.GeneralOspfInformationR\x16generalOspfInformation\x12N\n" +
	"\x14ospf_router_data_all\x18\x04 \x01(\v2\x1d.communication.OSPFRouterDataR\x11ospfRouterDataAll\x12J\n" +
	"\x11ospf_network_data\x18\x05 \x01(\v2\x1e.communication.OSPFNetworkDataR\x0fospfNetworkData\x12Q\n" +
	"\x15ospf_network_data_all\x18\x06 \x01(\v2\x1e.communication.OSPFNetworkDataR\x12ospfNetworkDataAll\x12J\n" +
	"\x11ospf_summary_data\x18\a \x01(\v2\x1e.communication.OSPFSummaryDataR\x0fospfSummaryData\x12Q\n" +
	"\x15ospf_summary_data_all\x18\b \x01(\v2\x1e.communication.OSPFSummaryDataR\x12ospfSummaryDataAll\x12W\n" +
	"\x16ospf_asbr_summary_data\x18\t \x01(\v2\".communication.OSPFAsbrSummaryDataR\x13ospfAsbrSummaryData\x12M\n" +
	"\x12ospf_external_data\x18\n" +
	" \x01(\v2\x1f.communication.OSPFExternalDataR\x10ospfExternalData\x12Z\n" +
	"\x17ospf_nssa_external_data\x18\v \x01(\v2#.communication.OSPFNssaExternalDataR\x14ospfNssaExternalData\x12J\n" +
	"\x11ospf_external_all\x18\f \x01(\v2\x1e.communication.OSPFExternalAllR\x0fospfExternalAll\x12W\n" +
	"\x16ospf_nssa_external_all\x18\r \x01(\v2\".communication.OSPFNssaExternalAllR\x13ospfNssaExternalAll\x12C\n" +
	"\x0eospf_neighbors\x18\x0e \x01(\v2\x1c.communication.OSPFNeighborsR\rospfNeighbors\x12<\n" +
	"\n" +
	"interfaces\x18\x0f \x01(\v2\x1c.communication.InterfaceListR\n" +
	"interfaces\x12_\n" +
	"\x18routing_information_base\x18\x10 \x01(\v2%.communication.RoutingInformationBaseR\x16routingInformationBase\x12W\n" +
	"\x16rib_fib_summary_routes\x18\x11 \x01(\v2\".communication.RibFibSummaryRoutesR\x13ribFibSummaryRoutes\x12_\n" +
	"\x18static_frr_configuration\x18\x12 \x01(\v2%.communication.StaticFRRConfigurationR\x16staticFrrConfiguration\x12C\n" +
	"\x0esystem_metrics\x18\x13 \x01(\v2\x1c.communication.SystemMetricsR\rsystemMetrics\x12D\n" +
	"\x0ffrr_router_data\x18\x14 \x01(\v2\x1c.communication.FRRRouterDataR\rfrrRouterData\"\xea\x05\n" +
	"\x16StaticFRRConfiguration\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1f\n" +
	"\vfrr_version\x18\x02 \x01(\tR\n" +
	"frrVersion\x12'\n" +
	"\x0fipv6_forwarding\x18\x04 \x01(\bR\x0eipv6Forwarding\x12'\n" +
	"\x0fipv4_forwarding\x18\x05 \x01(\bR\x0eipv4Forwarding\x120\n" +
	"\x14service_advanced_vty\x18\x06 \x01(\bR\x12serviceAdvancedVty\x128\n" +
	"\n" +
	"interfaces\x18\b \x03(\v2\x18.communication.InterfaceR\n" +
	"interfaces\x12?\n" +
	"\rstatic_routes\x18\t \x03(\v2\x1a.communication.StaticRouteR\fstaticRoutes\x12:\n" +
	"\vospf_config\x18\n" +
	" \x01(\v2\x19.communication.OSPFConfigR\n" +
	"ospfConfig\x12P\n" +
	"\troute_map\x18\v \x03(\v23.communication.StaticFRRConfiguration.RouteMapEntryR\brouteMap\x12V\n" +
	"\vaccess_list\x18\f \x03(\v25.communication.StaticFRRConfiguration.AccessListEntryR\n" +
	"accessList\x1aT\n" +
	"\rRouteMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.communication.RouteMapR\x05value:\x028\x01\x1aX\n" +
	"\x0fAccessListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.communication.AccessListR\x05value:\x028\x01\"\x89\x01\n" +
	"\tInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12T\n" +
	"\x15interface_ip_prefixes\x18\x02 \x03(\v2 .communication.InterfaceIPPrefixR\x13interfaceIpPrefixes\x12\x12\n" +
	"\x04area\x18\x03 \x01(\tR\x04area\"^\n" +
	"\vStaticRoute\x124\n" +
	"\tip_prefix\x18\x01 \x01(\v2\x17.communication.IPPrefixR\bipPrefix\x12\x19\n" +
	"\bnext_hop\x18\x02 \x01(\tR\anextHop\"\xcd\x01\n" +
	"\n" +
	"OSPFConfig\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12E\n" +
	"\x0eredistribution\x18\x02 \x03(\v2\x1d.communication.RedistributionR\x0eredistribution\x12'\n" +
	"\x04area\x18\x03 \x03(\v2\x13.communication.AreaR\x04area\x122\n" +
	"\x15virtual_link_neighbor\x18\x04 \x01(\tR\x13virtualLinkNeighbor\"Y\n" +
	"\x0eRedistribution\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06metric\x18\x02 \x01(\tR\x06metric\x12\x1b\n" +
	"\troute_map\x18\x03 \x01(\tR\brouteMap\".\n" +
	"\x04Area\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"u\n" +
	"\bRouteMap\x12\x16\n" +
	"\x06permit\x18\x01 \x01(\bR\x06permit\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\tR\bsequence\x12\x14\n" +
	"\x05match\x18\x03 \x01(\tR\x05match\x12\x1f\n" +
	"\vaccess_list\x18\x04 \x01(\tR\n" +
	"accessList\"k\n" +
	"\n" +
	"AccessList\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12I\n" +
	"\x11access_list_items\x18\x02 \x03(\v2\x1d.communication.AccessListItemR\x0faccessListItems\"\xae\x01\n" +
	"\x0eAccessListItem\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\rR\bsequence\x12%\n" +
	"\x0eaccess_control\x18\x02 \x01(\tR\raccessControl\x126\n" +
	"\tip_prefix\x18\x03 \x01(\v2\x17.communication.IPPrefixH\x00R\bipPrefix\x12\x12\n" +
	"\x03any\x18\x04 \x01(\bH\x00R\x03anyB\r\n" +
	"\vdestination\"\xee\x01\n" +
	"\x11InterfaceIPPrefix\x124\n" +
	"\tip_prefix\x18\x01 \x01(\v2\x17.communication.IPPrefixR\bipPrefix\x12\x12\n" +
	"\x04ospf\x18\x02 \x01(\bR\x04ospf\x12\x1b\n" +
	"\tospf_area\x18\x03 \x01(\tR\bospfArea\x12\x18\n" +
	"\apassive\x18\x04 \x01(\bR\apassive\x12\x19\n" +
	"\bhas_peer\x18\x05 \x01(\bR\ahasPeer\x12=\n" +
	"\x0epeer_ip_prefix\x18\x06 \x01(\v2\x17.communication.IPPrefixR\fpeerIpPrefix\"N\n" +
	"\bIPPrefix\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x01 \x01(\tR\tipAddress\x12#\n" +
	"\rprefix_length\x18\x02 \x01(\rR\fprefixLength\"n\n" +
	"\rSystemMetrics\x12\x1d\n" +
	"\n" +
	"cpu_amount\x18\x01 \x01(\x03R\tcpuAmount\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x01R\vmemoryUsage\"\xa4\t\n" +
	"\x16GeneralOspfInformation\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12&\n" +
	"\x0ftos_routes_only\x18\x02 \x01(\bR\rtosRoutesOnly\x12'\n" +
	"\x0frfc2328_conform\x18\x03 \x01(\bR\x0erfc2328Conform\x127\n" +
	"\x18spf_schedule_delay_msecs\x18\x04 \x01(\x05R\x15spfScheduleDelayMsecs\x12,\n" +
	"\x12holdtime_min_msecs\x18\x05 \x01(\x05R\x10holdtimeMinMsecs\x12,\n" +
	"\x12holdtime_max_msecs\x18\x06 \x01(\x05R\x10holdtimeMaxMsecs\x12/\n" +
	"\x13holdtime_multiplier\x18\a \x01(\x05R\x12holdtimeMultiplier\x125\n" +
	"\x17spf_last_executed_msecs\x18\b \x01(\x03R\x14spfLastExecutedMsecs\x125\n" +
	"\x17spf_last_duration_msecs\x18\t \x01(\x05R\x14spfLastDurationMsecs\x123\n" +
	"\x16lsa_min_interval_msecs\x18\n" +
	" \x01(\x05R\x13lsaMinIntervalMsecs\x121\n" +
	"\x15lsa_min_arrival_msecs\x18\v \x01(\x05R\x12lsaMinArrivalMsecs\x12)\n" +
	"\x10write_multiplier\x18\f \x01(\x05R\x0fwriteMultiplier\x12.\n" +
	"\x13refresh_timer_msecs\x18\r \x01(\x05R\x11refreshTimerMsecs\x12#\n" +
	"\rmaximum_paths\x18\x0e \x01(\x05R\fmaximumPaths\x12\x1e\n" +
	"\n" +
	"preference\x18\x0f \x01(\x05R\n" +
	"preference\x12\x1f\n" +
	"\vasbr_router\x18\x10 \x01(\tR\n" +
	"asbrRouter\x12\x19\n" +
	"\babr_type\x18\x11 \x01(\tR\aabrType\x120\n" +
	"\x14lsa_external_counter\x18\x12 \x01(\x05R\x12lsaExternalCounter\x122\n" +
	"\x15lsa_external_checksum\x18\x13 \x01(\x03R\x13lsaExternalChecksum\x120\n" +
	"\x14lsa_asopaque_counter\x18\x14 \x01(\x05R\x12lsaAsopaqueCounter\x122\n" +
	"\x15lsa_asopaque_checksum\x18\x15 \x01(\x03R\x13lsaAsopaqueChecksum\x122\n" +
	"\x15attached_area_counter\x18\x16 \x01(\x05R\x13attachedAreaCounter\x12F\n" +
	"\x05areas\x18\x17 \x03(\v20.communication.GeneralOspfInformation.AreasEntryR\x05areas\x1a\\\n" +
	"\n" +
	"AreasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".communication.GeneralInfoOspfAreaR\x05value:\x028\x01\"\xed\a\n" +
	"\x13GeneralInfoOspfArea\x12\x1a\n" +
	"\bbackbone\x18\x01 \x01(\bR\bbackbone\x121\n" +
	"\x15area_if_total_counter\x18\x02 \x01(\x05R\x12areaIfTotalCounter\x123\n" +
	"\x16area_if_active_counter\x18\x03 \x01(\x05R\x13areaIfActiveCounter\x129\n" +
	"\x19nbr_full_adjacent_counter\x18\x04 \x01(\x05R\x16nbrFullAdjacentCounter\x12&\n" +
	"\x0eauthentication\x18\x05 \x01(\tR\x0eauthentication\x120\n" +
	"\x14spf_executed_counter\x18\x06 \x01(\x05R\x12spfExecutedCounter\x12\x1d\n" +
	"\n" +
	"lsa_number\x18\a \x01(\x05R\tlsaNumber\x12*\n" +
	"\x11lsa_router_number\x18\b \x01(\x05R\x0flsaRouterNumber\x12.\n" +
	"\x13lsa_router_checksum\x18\t \x01(\x03R\x11lsaRouterChecksum\x12,\n" +
	"\x12lsa_network_number\x18\n" +
	" \x01(\x05R\x10lsaNetworkNumber\x120\n" +
	"\x14lsa_network_checksum\x18\v \x01(\x03R\x12lsaNetworkChecksum\x12,\n" +
	"\x12lsa_summary_number\x18\f \x01(\x05R\x10lsaSummaryNumber\x120\n" +
	"\x14lsa_summary_checksum\x18\r \x01(\x03R\x12lsaSummaryChecksum\x12&\n" +
	"\x0flsa_asbr_number\x18\x0e \x01(\x05R\rlsaAsbrNumber\x12*\n" +
	"\x11lsa_asbr_checksum\x18\x0f \x01(\x03R\x0flsaAsbrChecksum\x12&\n" +
	"\x0flsa_nssa_number\x18\x10 \x01(\x05R\rlsaNssaNumber\x12*\n" +
	"\x11lsa_nssa_checksum\x18\x11 \x01(\x03R\x0flsaNssaChecksum\x123\n" +
	"\x16lsa_opaque_link_number\x18\x12 \x01(\x05R\x13lsaOpaqueLinkNumber\x127\n" +
	"\x18lsa_opaque_link_checksum\x18\x13 \x01(\x03R\x15lsaOpaqueLinkChecksum\x123\n" +
	"\x16lsa_opaque_area_number\x18\x14 \x01(\x05R\x13lsaOpaqueAreaNumber\x127\n" +
	"\x18lsa_opaque_area_checksum\x18\x15 \x01(\x03R\x15lsaOpaqueAreaChecksum\"V\n" +
	"\rFRRRouterData\x12\x1f\n" +
	"\vrouter_name\x18\x01 \x01(\tR\n" +
	"routerName\x12$\n" +
	"\x0eospf_router_id\x18\x02 \x01(\tR\fospfRouterId\"\xe9\x01\n" +
	"\x0eOSPFRouterData\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12Z\n" +
	"\rrouter_states\x18\x02 \x03(\v2/.communication.OSPFRouterData.RouterStatesEntryR\x12Router Link States\x1a^\n" +
	"\x11RouterStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.communication.OSPFRouterAreaR\x05value:\x028\x01\"\xbd\x01\n" +
	"\x0eOSPFRouterArea\x12N\n" +
	"\vlsa_entries\x18\x01 \x03(\v2-.communication.OSPFRouterArea.LsaEntriesEntryR\n" +
	"lsaEntries\x1a[\n" +
	"\x0fLsaEntriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.communication.OSPFRouterLSAR\x05value:\x028\x01\"\xa7\x04\n" +
	"\rOSPFRouterLSA\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\x05R\x05flags\x12\x12\n" +
	"\x04asbr\x18\x05 \x01(\bR\x04asbr\x12\x19\n" +
	"\blsa_type\x18\x06 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\a \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\b \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\t \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\n" +
	" \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\v \x01(\x05R\x06length\x12 \n" +
	"\fnum_of_links\x18\f \x01(\x05R\n" +
	"numOfLinks\x12P\n" +
	"\frouter_links\x18\r \x03(\v2-.communication.OSPFRouterLSA.RouterLinksEntryR\vrouterLinks\x1a`\n" +
	"\x10RouterLinksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .communication.OSPFRouterLSALinkR\x05value:\x028\x01\"\xa0\x03\n" +
	"\x11OSPFRouterLSALink\x12\x1b\n" +
	"\tlink_type\x18\x01 \x01(\tR\blinkType\x12:\n" +
	"\x19designated_router_address\x18\x02 \x01(\tR\x17designatedRouterAddress\x12,\n" +
	"\x12neighbor_router_id\x18\x03 \x01(\tR\x10neighborRouterId\x128\n" +
	"\x18router_interface_address\x18\x04 \x01(\tR\x16routerInterfaceAddress\x12'\n" +
	"\x0fnetwork_address\x18\x05 \x01(\tR\x0enetworkAddress\x12!\n" +
	"\fnetwork_mask\x18\x06 \x01(\tR\vnetworkMask\x120\n" +
	"\x13p2pInterfaceAddress\x18\a \x01(\tR\x13p2pInterfaceAddress\x12+\n" +
	"\x12num_of_tos_metrics\x18\b \x01(\x05R\x0fnumOfTosMetrics\x12\x1f\n" +
	"\vtos0_metric\x18\t \x01(\x05R\n" +
	"tos0Metric\"\xdd\x01\n" +
	"\x0fOSPFNetworkData\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12R\n" +
	"\n" +
	"net_states\x18\x02 \x03(\v2-.communication.OSPFNetworkData.NetStatesEntryR\x0fNet Link States\x1aY\n" +
	"\x0eNetStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.communication.NetAreaStateR\x05value:\x028\x01\"\xb6\x01\n" +
	"\fNetAreaState\x12L\n" +
	"\vlsa_entries\x18\x01 \x03(\v2+.communication.NetAreaState.LsaEntriesEntryR\n" +
	"lsaEntries\x1aX\n" +
	"\x0fLsaEntriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.communication.NetworkLSAR\x05value:\x028\x01\"\x84\x04\n" +
	"\n" +
	"NetworkLSA\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x19\n" +
	"\blsa_type\x18\x04 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\x05 \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\x06 \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\a \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\t \x01(\x05R\x06length\x12!\n" +
	"\fnetwork_mask\x18\n" +
	" \x01(\x05R\vnetworkMask\x12X\n" +
	"\x10attached_routers\x18\v \x03(\v2..communication.NetworkLSA.AttachedRoutersEntryR\x0eattchedRouters\x1aa\n" +
	"\x14AttachedRoutersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.communication.AttachedRouterR\x05value:\x028\x01\">\n" +
	"\x0eAttachedRouter\x12,\n" +
	"\x12attached_router_id\x18\x01 \x01(\tR\x10attachedRouterId\"\xa0\x03\n" +
	"\x0fOSPFSummaryData\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12R\n" +
	"\n" +
	"net_states\x18\x02 \x03(\v2-.communication.OSPFSummaryData.NetStatesEntryR\x0fNet Link States\x12^\n" +
	"\x0esummary_states\x18\x03 \x03(\v21.communication.OSPFSummaryData.SummaryStatesEntryR\x13Summary Link States\x1aY\n" +
	"\x0eNetStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.communication.NetAreaStateR\x05value:\x028\x01\x1aa\n" +
	"\x12SummaryStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.communication.SummaryAreaStateR\x05value:\x028\x01\"\xbe\x01\n" +
	"\x10SummaryAreaState\x12P\n" +
	"\vlsa_entries\x18\x01 \x03(\v2/.communication.SummaryAreaState.LsaEntriesEntryR\n" +
	"lsaEntries\x1aX\n" +
	"\x0fLsaEntriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.communication.SummaryLSAR\x05value:\x028\x01\"\xe8\x02\n" +
	"\n" +
	"SummaryLSA\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x19\n" +
	"\blsa_type\x18\x04 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\x05 \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\x06 \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\a \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\t \x01(\x05R\x06length\x12!\n" +
	"\fnetwork_mask\x18\n" +
	" \x01(\x05R\vnetworkMask\x12\x1f\n" +
	"\vtos0_metric\x18\v \x01(\x05R\n" +
	"tos0Metric\"\x8b\x02\n" +
	"\x13OSPFAsbrSummaryData\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12p\n" +
	"\x13asbr_summary_states\x18\x02 \x03(\v29.communication.OSPFAsbrSummaryData.AsbrSummaryStatesEntryR\x18ASBR-Summary Link States\x1ae\n" +
	"\x16AsbrSummaryStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.communication.SummaryAreaStateR\x05value:\x028\x01\"\x89\x02\n" +
	"\x10OSPFExternalData\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12s\n" +
	"\x17as_external_link_states\x18\x02 \x03(\v29.communication.OSPFExternalData.AsExternalLinkStatesEntryR\x17AS External Link States\x1ac\n" +
	"\x19AsExternalLinkStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.communication.ExternalLSAR\x05value:\x028\x01\"\xea\x03\n" +
	"\vExternalLSA\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x19\n" +
	"\blsa_type\x18\x04 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\x05 \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\x06 \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\a \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\t \x01(\x05R\x06length\x12!\n" +
	"\fnetwork_mask\x18\n" +
	" \x01(\x05R\vnetworkMask\x12\x1f\n" +
	"\vmetric_type\x18\v \x01(\tR\n" +
	"metricType\x12\x10\n" +
	"\x03tos\x18\f \x01(\x05R\x03tos\x12\x16\n" +
	"\x06metric\x18\r \x01(\x05R\x06metric\x12'\n" +
	"\x0fforward_address\x18\x0e \x01(\tR\x0eforwardAddress\x12,\n" +
	"\x12external_route_tag\x18\x0f \x01(\x05R\x10externalRouteTag\"\x9e\x02\n" +
	"\x14OSPFNssaExternalData\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12}\n" +
	"\x19nssa_external_link_states\x18\x02 \x03(\v2?.communication.OSPFNssaExternalData.NssaExternalLinkStatesEntryR\x19NSSA-External Link States\x1aj\n" +
	"\x1bNssaExternalLinkStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.communication.NssaExternalAreaR\x05value:\x028\x01\"\xaa\x01\n" +
	"\x10NssaExternalArea\x12=\n" +
	"\x04data\x18\x01 \x03(\v2).communication.NssaExternalArea.DataEntryR\x04data\x1aW\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.communication.NssaExternalLSAR\x05value:\x028\x01\"\xf7\x03\n" +
	"\x0fNssaExternalLSA\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x19\n" +
	"\blsa_type\x18\x04 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\x05 \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\x06 \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\a \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\t \x01(\x05R\x06length\x12!\n" +
	"\fnetwork_mask\x18\n" +
	" \x01(\x05R\vnetworkMask\x12\x1f\n" +
	"\vmetric_type\x18\v \x01(\tR\n" +
	"metricType\x12\x10\n" +
	"\x03tos\x18\f \x01(\x05R\x03tos\x12\x16\n" +
	"\x06metric\x18\r \x01(\x05R\x06metric\x120\n" +
	"\x14nssa_forward_address\x18\x0e \x01(\tR\x12nssaForwardAddress\x12,\n" +
	"\x12external_route_tag\x18\x0f \x01(\x05R\x10externalRouteTag\"\xc5\x02\n" +
	"\fOSPFDatabase\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12<\n" +
	"\x05areas\x18\x02 \x03(\v2&.communication.OSPFDatabase.AreasEntryR\x05areas\x12S\n" +
	"\x17as_external_link_states\x18\x03 \x03(\v2\x1c.communication.ASExternalLSAR\x14asExternalLinkStates\x12*\n" +
	"\x11as_external_count\x18\x04 \x01(\x05R\x0fasExternalCount\x1aY\n" +
	"\n" +
	"AreasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.communication.OSPFDatabaseAreaR\x05value:\x028\x01\"\xec\x05\n" +
	"\x10OSPFDatabaseArea\x12J\n" +
	"\x12router_link_states\x18\x01 \x03(\v2\x1c.communication.RouterDataLSAR\x10routerLinkStates\x127\n" +
	"\x18router_link_states_count\x18\x02 \x01(\x05R\x15routerLinkStatesCount\x12M\n" +
	"\x13network_link_states\x18\x03 \x03(\v2\x1d.communication.NetworkDataLSAR\x11networkLinkStates\x129\n" +
	"\x19network_link_states_count\x18\x04 \x01(\x05R\x16networkLinkStatesCount\x12M\n" +
	"\x13summary_link_states\x18\x05 \x03(\v2\x1d.communication.SummaryDataLSAR\x11summaryLinkStates\x129\n" +
	"\x19summary_link_states_count\x18\x06 \x01(\x05R\x16summaryLinkStatesCount\x12V\n" +
	"\x18asbr_summary_link_states\x18\a \x03(\v2\x1d.communication.ASBRSummaryLSAR\x15asbrSummaryLinkStates\x12B\n" +
	"\x1easbr_summary_link_states_count\x18\b \x01(\x05R\x1aasbrSummaryLinkStatesCount\x12]\n" +
	"\x19nssa_external_link_states\x18\t \x03(\v2\".communication.NSSAExternalLSADataR\x16nssaExternalLinkStates\x12D\n" +
	"\x1fnssa_external_link_states_count\x18\n" +
	" \x01(\x05R\x1bnssaExternalLinkStatesCount\"\xa9\x01\n" +
	"\aBaseLSA\x12\x13\n" +
	"\x05ls_id\x18\x01 \x01(\tR\x04lsId\x12+\n" +
	"\x11advertised_router\x18\x02 \x01(\tR\x10advertisedRouter\x12\x17\n" +
	"\alsa_age\x18\x03 \x01(\x05R\x06lsaAge\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\tR\x0esequenceNumber\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksum\"j\n" +
	"\rRouterDataLSA\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.communication.BaseLSAR\x04base\x12-\n" +
	"\x13num_of_router_links\x18\x02 \x01(\x05R\x10numOfRouterLinks\"<\n" +
	"\x0eNetworkDataLSA\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.communication.BaseLSAR\x04base\"e\n" +
	"\x0eSummaryDataLSA\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.communication.BaseLSAR\x04base\x12'\n" +
	"\x0fsummary_address\x18\x02 \x01(\tR\x0esummaryAddress\"<\n" +
	"\x0eASBRSummaryLSA\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.communication.BaseLSAR\x04base\"\x8a\x01\n" +
	"\x13NSSAExternalLSAData\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.communication.BaseLSAR\x04base\x12\x1f\n" +
	"\vmetric_type\x18\x02 \x01(\tR\n" +
	"metricType\x12\x14\n" +
	"\x05route\x18\x03 \x01(\tR\x05route\x12\x10\n" +
	"\x03tag\x18\x04 \x01(\x05R\x03tag\"\x84\x01\n" +
	"\rASExternalLSA\x12*\n" +
	"\x04base\x18\x01 \x01(\v2\x16.communication.BaseLSAR\x04base\x12\x1f\n" +
	"\vmetric_type\x18\x02 \x01(\tR\n" +
	"metricType\x12\x14\n" +
	"\x05route\x18\x03 \x01(\tR\x05route\x12\x10\n" +
	"\x03tag\x18\x04 \x01(\x05R\x03tag\"\x89\x01\n" +
	"\x0fOSPFExternalAll\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12Y\n" +
	"\x17as_external_link_states\x18\x02 \x03(\v2\".communication.ASExternalLinkStateR\x14asExternalLinkStates\"\xf2\x03\n" +
	"\x13ASExternalLinkState\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x19\n" +
	"\blsa_type\x18\x04 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\x05 \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\x06 \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\a \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\t \x01(\x05R\x06length\x12!\n" +
	"\fnetwork_mask\x18\n" +
	" \x01(\x05R\vnetworkMask\x12\x1f\n" +
	"\vmetric_type\x18\v \x01(\tR\n" +
	"metricType\x12\x10\n" +
	"\x03tos\x18\f \x01(\x05R\x03tos\x12\x16\n" +
	"\x06metric\x18\r \x01(\x05R\x06metric\x12'\n" +
	"\x0fforward_address\x18\x0e \x01(\tR\x0eforwardAddress\x12,\n" +
	"\x12external_route_tag\x18\x0f \x01(\x05R\x10externalRouteTag\"\xa7\x02\n" +
	"\x13OSPFNssaExternalAll\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12\x83\x01\n" +
	"\x1dnssa_external_all_link_states\x18\x02 \x03(\v2A.communication.OSPFNssaExternalAll.NssaExternalAllLinkStatesEntryR\x19NSSA-External Link States\x1am\n" +
	"\x1eNssaExternalAllLinkStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.communication.NssaExternalAreaR\x05value:\x028\x01\"\xb5\x01\n" +
	"\rOSPFNeighbors\x12I\n" +
	"\tneighbors\x18\x01 \x03(\v2+.communication.OSPFNeighbors.NeighborsEntryR\tneighbors\x1aY\n" +
	"\x0eNeighborsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.communication.NeighborListR\x05value:\x028\x01\"E\n" +
	"\fNeighborList\x125\n" +
	"\tneighbors\x18\x01 \x03(\v2\x17.communication.NeighborR\tneighbors\"\xc1\x06\n" +
	"\bNeighbor\x12\x1a\n" +
	"\bpriority\x18\x01 \x01(\x05R\bpriority\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12!\n" +
	"\fnbr_priority\x18\x03 \x01(\x05R\vnbrPriority\x12\x1b\n" +
	"\tnbr_state\x18\x04 \x01(\tR\bnbrState\x12\x1c\n" +
	"\tconverged\x18\x05 \x01(\tR\tconverged\x12\x12\n" +
	"\x04role\x18\x06 \x01(\tR\x04role\x12%\n" +
	"\x0fup_time_in_msec\x18\a \x01(\x03R\fupTimeInMsec\x12&\n" +
	"\x0fdead_time_msecs\x18\b \x01(\x05R\rdeadTimeMsecs\x12K\n" +
	"#router_dead_interval_timer_due_msec\x18\t \x01(\x05R\x1erouterDeadIntervalTimerDueMsec\x12\x17\n" +
	"\aup_time\x18\n" +
	" \x01(\tR\x06upTime\x12\x1b\n" +
	"\tdead_time\x18\v \x01(\tR\bdeadTime\x12\x18\n" +
	"\aaddress\x18\f \x01(\tR\aaddress\x12#\n" +
	"\riface_address\x18\r \x01(\tR\fifaceAddress\x12\x1d\n" +
	"\n" +
	"iface_name\x18\x0e \x01(\tR\tifaceName\x12-\n" +
	"\x12retransmit_counter\x18\x0f \x01(\x05R\x11retransmitCounter\x12R\n" +
	"&link_state_retransmission_list_counter\x18\x10 \x01(\x05R\"linkStateRetransmissionListCounter\x12'\n" +
	"\x0frequest_counter\x18\x11 \x01(\x05R\x0erequestCounter\x12D\n" +
	"\x1flink_state_request_list_counter\x18\x12 \x01(\x05R\x1blinkStateRequestListCounter\x12,\n" +
	"\x12db_summary_counter\x18\x13 \x01(\x05R\x10dbSummaryCounter\x12A\n" +
	"\x1ddatabase_summary_list_counter\x18\x14 \x01(\x05R\x1adatabaseSummaryListCounter\"\xbc\x01\n" +
	"\rInterfaceList\x12L\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2,.communication.InterfaceList.InterfacesEntryR\n" +
	"interfaces\x1a]\n" +
	"\x0fInterfacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.communication.SingleInterfaceR\x05value:\x028\x01\"\xf1\a\n" +
	"\x0fSingleInterface\x123\n" +
	"\x15administrative_status\x18\x01 \x01(\tR\x14administrativeStatus\x12-\n" +
	"\x12operational_status\x18\x02 \x01(\tR\x11operationalStatus\x12%\n" +
	"\x0elink_detection\x18\x03 \x01(\bR\rlinkDetection\x12\x19\n" +
	"\blink_ups\x18\x04 \x01(\x05R\alinkUps\x12\x1d\n" +
	"\n" +
	"link_downs\x18\x05 \x01(\x05R\tlinkDowns\x12 \n" +
	"\flast_link_up\x18\x06 \x01(\tR\n" +
	"lastLinkUp\x12$\n" +
	"\x0elast_link_down\x18\a \x01(\tR\flastLinkDown\x12\x19\n" +
	"\bvrf_name\x18\b \x01(\tR\avrfName\x12!\n" +
	"\fmpls_enabled\x18\t \x01(\bR\vmplsEnabled\x12\x1b\n" +
	"\tlink_down\x18\n" +
	" \x01(\bR\blinkDown\x12 \n" +
	"\flink_down_v6\x18\v \x01(\bR\n" +
	"linkDownV6\x12(\n" +
	"\x10mc_forwarding_v4\x18\f \x01(\bR\x0emcForwardingV4\x12(\n" +
	"\x10mc_forwarding_v6\x18\r \x01(\bR\x0emcForwardingV6\x12)\n" +
	"\x10pseudo_interface\x18\x0e \x01(\bR\x0fpseudoInterface\x12\x14\n" +
	"\x05index\x18\x0f \x01(\x05R\x05index\x12\x16\n" +
	"\x06metric\x18\x10 \x01(\x05R\x06metric\x12\x10\n" +
	"\x03mtu\x18\x11 \x01(\x05R\x03mtu\x12\x14\n" +
	"\x05speed\x18\x12 \x01(\x05R\x05speed\x12\x14\n" +
	"\x05flags\x18\x13 \x01(\tR\x05flags\x12\x12\n" +
	"\x04type\x18\x14 \x01(\tR\x04type\x12)\n" +
	"\x10hardware_address\x18\x15 \x01(\tR\x0fhardwareAddress\x12;\n" +
	"\fip_addresses\x18\x16 \x03(\v2\x18.communication.IpAddressR\vipAddresses\x12%\n" +
	"\x0einterface_type\x18\x17 \x01(\tR\rinterfaceType\x120\n" +
	"\x14interface_slave_type\x18\x18 \x01(\tR\x12interfaceSlaveType\x12\x1f\n" +
	"\vlacp_bypass\x18\x19 \x01(\bR\n" +
	"lacpBypass\x12.\n" +
	"\aevpn_mh\x18\x1a \x01(\v2\x15.communication.EvpnMhR\x06evpnMh\x12\x1c\n" +
	"\tprotodown\x18\x1b \x01(\tR\tprotodown\x12%\n" +
	"\x0eparent_ifindex\x18\x1c \x01(\x05R\rparentIfindex\"c\n" +
	"\tIpAddress\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1c\n" +
	"\tsecondary\x18\x02 \x01(\bR\tsecondary\x12\x1e\n" +
	"\n" +
	"unnumbered\x18\x03 \x01(\bR\n" +
	"unnumbered\"\x8e\x05\n" +
	"\x06EvpnMh\x12.\n" +
	"\x13ethernet_segment_id\x18\x01 \x01(\tR\x11ethernetSegmentId\x12\x10\n" +
	"\x03esi\x18\x02 \x01(\tR\x03esi\x12#\n" +
	"\rdf_preference\x18\x03 \x01(\x05R\fdfPreference\x12!\n" +
	"\fdf_algorithm\x18\x04 \x01(\tR\vdfAlgorithm\x12\x1b\n" +
	"\tdf_status\x18\x05 \x01(\tR\bdfStatus\x12*\n" +
	"\x11multi_homing_mode\x18\x06 \x01(\tR\x0fmultiHomingMode\x12\x1f\n" +
	"\vactive_mode\x18\a \x01(\bR\n" +
	"activeMode\x12\x1f\n" +
	"\vbypass_mode\x18\b \x01(\bR\n" +
	"bypassMode\x12\x1d\n" +
	"\n" +
	"local_bias\x18\t \x01(\bR\tlocalBias\x12#\n" +
	"\rfast_failover\x18\n" +
	" \x01(\bR\ffastFailover\x12\x17\n" +
	"\aup_time\x18\v \x01(\tR\x06upTime\x12\x1d\n" +
	"\n" +
	"bgp_status\x18\f \x01(\tR\tbgpStatus\x12'\n" +
	"\x0fprotocol_status\x18\r \x01(\tR\x0eprotocolStatus\x12#\n" +
	"\rprotocol_down\x18\x0e \x01(\bR\fprotocolDown\x12\x1b\n" +
	"\tmac_count\x18\x0f \x01(\x05R\bmacCount\x12#\n" +
	"\rlocal_ifindex\x18\x10 \x01(\x05R\flocalIfindex\x12#\n" +
	"\rnetwork_count\x18\x11 \x01(\x05R\fnetworkCount\x12\x1d\n" +
	"\n" +
	"join_count\x18\x12 \x01(\x05R\tjoinCount\x12\x1f\n" +
	"\vleave_count\x18\x13 \x01(\x05R\n" +
	"leaveCount\"\xb9\x01\n" +
	"\x16RoutingInformationBase\x12I\n" +
	"\x06routes\x18\x01 \x03(\v21.communication.RoutingInformationBase.RoutesEntryR\x06routes\x1aT\n" +
	"\vRoutesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.communication.RouteEntryR\x05value:\x028\x01\":\n" +
	"\n" +
	"RouteEntry\x12,\n" +
	"\x06routes\x18\x01 \x03(\v2\x14.communication.RouteR\x06routes\"\xab\x05\n" +
	"\x05Route\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12\x1d\n" +
	"\n" +
	"prefix_len\x18\x02 \x01(\x05R\tprefixLen\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x15\n" +
	"\x06vrf_id\x18\x04 \x01(\x05R\x05vrfId\x12\x19\n" +
	"\bvrf_name\x18\x05 \x01(\tR\avrfName\x12\x1a\n" +
	"\bselected\x18\x06 \x01(\bR\bselected\x12#\n" +
	"\rdest_selected\x18\a \x01(\bR\fdestSelected\x12\x1a\n" +
	"\bdistance\x18\b \x01(\x05R\bdistance\x12\x16\n" +
	"\x06metric\x18\t \x01(\x05R\x06metric\x12\x1c\n" +
	"\tinstalled\x18\n" +
	" \x01(\bR\tinstalled\x12\x14\n" +
	"\x05table\x18\v \x01(\x05R\x05table\x12'\n" +
	"\x0finternal_status\x18\f \x01(\x05R\x0einternalStatus\x12%\n" +
	"\x0einternal_flags\x18\r \x01(\x05R\rinternalFlags\x121\n" +
	"\x15internal_next_hop_num\x18\x0e \x01(\x05R\x12internalNextHopNum\x12>\n" +
	"\x1cinternal_next_hop_active_num\x18\x0f \x01(\x05R\x18internalNextHopActiveNum\x12(\n" +
	"\x10nexthop_group_id\x18\x10 \x01(\x05R\x0enexthopGroupId\x12;\n" +
	"\x1ainstalled_nexthop_group_id\x18\x11 \x01(\x05R\x17installedNexthopGroupId\x12\x16\n" +
	"\x06uptime\x18\x12 \x01(\tR\x06uptime\x122\n" +
	"\bnexthops\x18\x13 \x03(\v2\x16.communication.NexthopR\bnexthops\"\xa0\x02\n" +
	"\aNexthop\x12\x14\n" +
	"\x05flags\x18\x01 \x01(\x05R\x05flags\x12\x10\n" +
	"\x03fib\x18\x02 \x01(\bR\x03fib\x12-\n" +
	"\x12directly_connected\x18\x03 \x01(\bR\x11directlyConnected\x12\x1c\n" +
	"\tduplicate\x18\x04 \x01(\bR\tduplicate\x12\x0e\n" +
	"\x02ip\x18\x05 \x01(\tR\x02ip\x12\x10\n" +
	"\x03afi\x18\x06 \x01(\tR\x03afi\x12'\n" +
	"\x0finterface_index\x18\a \x01(\x05R\x0einterfaceIndex\x12%\n" +
	"\x0einterface_name\x18\b \x01(\tR\rinterfaceName\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x16\n" +
	"\x06weight\x18\n" +
	" \x01(\x05R\x06weight\"\xa8\x01\n" +
	"\x13RibFibSummaryRoutes\x12D\n" +
	"\x0froute_summaries\x18\x01 \x03(\v2\x1b.communication.RouteSummaryR\x0erouteSummaries\x12!\n" +
	"\froutes_total\x18\x02 \x01(\x05R\vroutesTotal\x12(\n" +
	"\x10routes_total_fib\x18\x03 \x01(\x05R\x0eroutesTotalFib\"\x8d\x01\n" +
	"\fRouteSummary\x12\x10\n" +
	"\x03fib\x18\x01 \x01(\x05R\x03fib\x12\x10\n" +
	"\x03rib\x18\x02 \x01(\x05R\x03rib\x12$\n" +
	"\x0efib_off_loaded\x18\x03 \x01(\x05R\ffibOffLoaded\x12\x1f\n" +
	"\vfib_trapped\x18\x04 \x01(\x05R\n" +
	"fibTrapped\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\"\x98\x03\n" +
	"\x0fAnomalyAnalysis\x12F\n" +
	"\x0erouter_anomaly\x18\x01 \x01(\v2\x1f.communication.AnomalyDetectionR\rrouterAnomaly\x12J\n" +
	"\x10external_anomaly\x18\x02 \x01(\v2\x1f.communication.AnomalyDetectionR\x0fexternalAnomaly\x12S\n" +
	"\x15nssa_external_anomaly\x18\x03 \x01(\v2\x1f.communication.AnomalyDetectionR\x13nssaExternalAnomaly\x12N\n" +
	"\x13lsdb_to_rib_anomaly\x18\x04 \x01(\v2\x1f.communication.AnomalyDetectionR\x10lsdbToRibAnomaly\x12L\n" +
	"\x12rib_to_fib_anomaly\x18\x05 \x01(\v2\x1f.communication.AnomalyDetectionR\x0fribToFibAnomaly\"\xdb\x03\n" +
	"\x10AnomalyDetection\x12<\n" +
	"\x19HasOverAdvertisedPrefixes\x18\x01 \x01(\bR\x19HasOverAdvertisedPrefixes\x128\n" +
	"\x17HasUnAdvertisedPrefixes\x18\x02 \x01(\bR\x17HasUnAdvertisedPrefixes\x122\n" +
	"\x14HasDuplicatePrefixes\x18\x03 \x01(\bR\x14HasDuplicatePrefixes\x12:\n" +
	"\x18HasMisconfiguredPrefixes\x18\x04 \x01(\bR\x18HasMisconfiguredPrefixes\x12M\n" +
	"\x13superfluous_entries\x18\x05 \x03(\v2\x1c.communication.AdvertisementR\x12superfluousEntries\x12E\n" +
	"\x0fmissing_entries\x18\x06 \x03(\v2\x1c.communication.AdvertisementR\x0emissingEntries\x12I\n" +
	"\x11duplicate_entries\x18\a \x03(\v2\x1c.communication.AdvertisementR\x10duplicateEntries\"\xfc\x01\n" +
	"\rAdvertisement\x12*\n" +
	"\x10InterfaceAddress\x18\x01 \x01(\tR\x10InterfaceAddress\x12 \n" +
	"\vLinkStateId\x18\x02 \x01(\tR\vLinkStateId\x12\"\n" +
	"\fPrefixLength\x18\x03 \x01(\tR\fPrefixLength\x12\x1a\n" +
	"\bLinkType\x18\x04 \x01(\tR\bLinkType\x12\x12\n" +
	"\x04PBit\x18\x05 \x01(\bR\x04PBit\x12\x18\n" +
	"\aOptions\x18\x06 \x01(\tR\aOptions\x12\x12\n" +
	"\x04Ospf\x18\a \x01(\bR\x04Ospf\x12\x1b\n" +
	"\tospf_area\x18\b \x01(\tR\bospfArea\"j\n" +
	"\x12AccessListAnalyzer\x12\x1e\n" +
	"\n" +
	"AccessList\x18\x01 \x01(\tR\n" +
	"AccessList\x124\n" +
	"\tacl_entry\x18\x02 \x03(\v2\x17.communication.ACLEntryR\baclEntry\"\x96\x01\n" +
	"\bACLEntry\x12\x1c\n" +
	"\tIPAddress\x18\x01 \x01(\tR\tIPAddress\x12\"\n" +
	"\fPrefixLength\x18\x02 \x01(\x05R\fPrefixLength\x12\x1a\n" +
	"\bIsPermit\x18\x03 \x01(\bR\bIsPermit\x12\x10\n" +
	"\x03Any\x18\x04 \x01(\bR\x03Any\x12\x1a\n" +
	"\bSequence\x18\x05 \x01(\x05R\bSequence\"|\n" +
	"\n" +
	"StaticList\x12\x1c\n" +
	"\tIpAddress\x18\x01 \x01(\tR\tIpAddress\x12\"\n" +
	"\fPrefixLength\x18\x02 \x01(\x05R\fPrefixLength\x12\x18\n" +
	"\aNextHop\x18\x03 \x01(\tR\aNextHop\x12\x12\n" +
	"\x04Area\x18\x04 \x01(\tR\x04Area\"\x9b\x01\n" +
	"\fIntraAreaLsa\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1b\n" +
	"\trouter_id\x18\x02 \x01(\tR\brouterId\x12\x1f\n" +
	"\vrouter_type\x18\x03 \x01(\tR\n" +
	"routerType\x121\n" +
	"\x05areas\x18\x04 \x03(\v2\x1b.communication.AreaAnalyzerR\x05areas\"\x9b\x01\n" +
	"\fInterAreaLsa\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1b\n" +
	"\trouter_id\x18\x02 \x01(\tR\brouterId\x12\x1f\n" +
	"\vrouter_type\x18\x03 \x01(\tR\n" +
	"routerType\x121\n" +
	"\x05areas\x18\x04 \x03(\v2\x1b.communication.AreaAnalyzerR\x05areas\"\x97\x01\n" +
	"\fAreaAnalyzer\x12\x1b\n" +
	"\tarea_name\x18\x01 \x01(\tR\bareaName\x12\x19\n" +
	"\blsa_type\x18\x02 \x01(\tR\alsaType\x12\x1b\n" +
	"\tarea_type\x18\x03 \x01(\tR\bareaType\x122\n" +
	"\x05links\x18\x04 \x03(\v2\x1c.communication.AdvertisementR\x05links\"\x90\x01\n" +
	"\vRibPrefixes\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12#\n" +
	"\rprefix_length\x18\x02 \x01(\tR\fprefixLength\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12(\n" +
	"\x10next_hop_address\x18\x04 \x01(\tR\x0enextHopAddress\"\xc0\x02\n" +
	"\x12ParsedAnalyzerData\x12I\n" +
	"\x12should_router_lsdb\x18\x01 \x01(\v2\x1b.communication.IntraAreaLsaR\x10shouldRouterLsdb\x12M\n" +
	"\x14should_external_lsdb\x18\x02 \x01(\v2\x1b.communication.InterAreaLsaR\x12shouldExternalLsdb\x12V\n" +
	"\x19should_nssa_external_lsdb\x18\x03 \x01(\v2\x1b.communication.InterAreaLsaR\x16shouldNssaExternalLsdb\x128\n" +
	"\ap2p_map\x18\x04 \x01(\v2\x1f.communication.PeerInterfaceMapR\x06p2pMap\"\xf4\x01\n" +
	"\x0eOspfRouterInfo\x12\x1b\n" +
	"\trouter_id\x18\x01 \x01(\tR\brouterId\x12a\n" +
	"\x12router_link_states\x18\x02 \x03(\v23.communication.OspfRouterInfo.RouterLinkStatesEntryR\x10routerLinkStates\x1ab\n" +
	"\x15RouterLinkStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.communication.AreaLinkStatesR\x05value:\x028\x01\"\xb9\x01\n" +
	"\x0eAreaLinkStates\x12N\n" +
	"\vrouter_lsas\x18\x01 \x03(\v2-.communication.AreaLinkStates.RouterLsasEntryR\n" +
	"routerLsas\x1aW\n" +
	"\x0fRouterLsasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.communication.RouterLSAR\x05value:\x028\x01\"\x98\x04\n" +
	"\tRouterLSA\x12\x17\n" +
	"\alsa_age\x18\x01 \x01(\x05R\x06lsaAge\x12\x18\n" +
	"\aoptions\x18\x02 \x01(\tR\aoptions\x12\x1b\n" +
	"\tlsa_flags\x18\x03 \x01(\x05R\blsaFlags\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\x05R\x05flags\x12\x12\n" +
	"\x04asbr\x18\x05 \x01(\bR\x04asbr\x12\x19\n" +
	"\blsa_type\x18\x06 \x01(\tR\alsaType\x12\"\n" +
	"\rlink_state_id\x18\a \x01(\tR\vlinkStateId\x12-\n" +
	"\x12advertising_router\x18\b \x01(\tR\x11advertisingRouter\x12$\n" +
	"\x0elsa_seq_number\x18\t \x01(\tR\flsaSeqNumber\x12\x1a\n" +
	"\bchecksum\x18\n" +
	" \x01(\tR\bchecksum\x12\x16\n" +
	"\x06length\x18\v \x01(\x05R\x06length\x12 \n" +
	"\fnum_of_links\x18\f \x01(\x05R\n" +
	"numOfLinks\x12L\n" +
	"\frouter_links\x18\r \x03(\v2).communication.RouterLSA.RouterLinksEntryR\vrouterLinks\x1aY\n" +
	"\x10RouterLinksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.communication.RouterLinkR\x05value:\x028\x01\"\xad\x03\n" +
	"\n" +
	"RouterLink\x12\x1b\n" +
	"\tlink_type\x18\x01 \x01(\tR\blinkType\x12?\n" +
	"\x19designated_router_address\x18\x02 \x01(\tH\x00R\x17designatedRouterAddress\x88\x01\x01\x12=\n" +
	"\x18router_interface_address\x18\x03 \x01(\tH\x01R\x16routerInterfaceAddress\x88\x01\x01\x12,\n" +
	"\x0fnetwork_address\x18\x04 \x01(\tH\x02R\x0enetworkAddress\x88\x01\x01\x12&\n" +
	"\fnetwork_mask\x18\x05 \x01(\tH\x03R\vnetworkMask\x88\x01\x01\x12+\n" +
	"\x12num_of_tos_metrics\x18\x06 \x01(\x05R\x0fnumOfTosMetrics\x12\x1f\n" +
	"\vtos0_metric\x18\a \x01(\x05R\n" +
	"tos0MetricB\x1c\n" +
	"\x1a_designated_router_addressB\x1b\n" +
	"\x19_router_interface_addressB\x12\n" +
	"\x10_network_addressB\x0f\n" +
	"\r_network_maskB,Z*github.com/frr-mad/frr-tui/backend/pkg;pkgb\x06proto3"

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData []byte
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protocol_proto_rawDesc), len(file_protocol_proto_rawDesc)))
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 108)
var file_protocol_proto_goTypes = []any{
	(*Message)(nil),                // 0: communication.Message
	(*Command)(nil),                // 1: communication.Command
	(*Response)(nil),               // 2: communication.Response
	(*PeerInterfaceMap)(nil),       // 3: communication.PeerInterfaceMap
	(*ResponseValue)(nil),          // 4: communication.ResponseValue
	(*NetworkConfig)(nil),          // 5: communication.NetworkConfig
	(*OSPFArea)(nil),               // 6: communication.OSPFArea
	(*OSPFInterfaceConfig)(nil),    // 7: communication.OSPFInterfaceConfig
	(*FullFRRData)(nil),            // 8: communication.FullFRRData
	(*StaticFRRConfiguration)(nil), // 9: communication.StaticFRRConfiguration
	(*Interface)(nil),              // 10: communication.Interface
	(*StaticRoute)(nil),            // 11: communication.StaticRoute
	(*OSPFConfig)(nil),             // 12: communication.OSPFConfig
	(*Redistribution)(nil),         // 13: communication.Redistribution
	(*Area)(nil),                   // 14: communication.Area
	(*RouteMap)(nil),               // 15: communication.RouteMap
	(*AccessList)(nil),             // 16: communication.AccessList
	(*AccessListItem)(nil),         // 17: communication.AccessListItem
	(*InterfaceIPPrefix)(nil),      // 18: communication.InterfaceIPPrefix
	(*IPPrefix)(nil),               // 19: communication.IPPrefix
	(*SystemMetrics)(nil),          // 20: communication.SystemMetrics
	(*GeneralOspfInformation)(nil), // 21: communication.GeneralOspfInformation
	(*GeneralInfoOspfArea)(nil),    // 22: communication.GeneralInfoOspfArea
	(*FRRRouterData)(nil),          // 23: communication.FRRRouterData
	(*OSPFRouterData)(nil),         // 24: communication.OSPFRouterData
	(*OSPFRouterArea)(nil),         // 25: communication.OSPFRouterArea
	(*OSPFRouterLSA)(nil),          // 26: communication.OSPFRouterLSA
	(*OSPFRouterLSALink)(nil),      // 27: communication.OSPFRouterLSALink
	(*OSPFNetworkData)(nil),        // 28: communication.OSPFNetworkData
	(*NetAreaState)(nil),           // 29: communication.NetAreaState
	(*NetworkLSA)(nil),             // 30: communication.NetworkLSA
	(*AttachedRouter)(nil),         // 31: communication.AttachedRouter
	(*OSPFSummaryData)(nil),        // 32: communication.OSPFSummaryData
	(*SummaryAreaState)(nil),       // 33: communication.SummaryAreaState
	(*SummaryLSA)(nil),             // 34: communication.SummaryLSA
	(*OSPFAsbrSummaryData)(nil),    // 35: communication.OSPFAsbrSummaryData
	(*OSPFExternalData)(nil),       // 36: communication.OSPFExternalData
	(*ExternalLSA)(nil),            // 37: communication.ExternalLSA
	(*OSPFNssaExternalData)(nil),   // 38: communication.OSPFNssaExternalData
	(*NssaExternalArea)(nil),       // 39: communication.NssaExternalArea
	(*NssaExternalLSA)(nil),        // 40: communication.NssaExternalLSA
	(*OSPFDatabase)(nil),           // 41: communication.OSPFDatabase
	(*OSPFDatabaseArea)(nil),       // 42: communication.OSPFDatabaseArea
	(*BaseLSA)(nil),                // 43: communication.BaseLSA
	(*RouterDataLSA)(nil),          // 44: communication.RouterDataLSA
	(*NetworkDataLSA)(nil),         // 45: communication.NetworkDataLSA
	(*SummaryDataLSA)(nil),         // 46: communication.SummaryDataLSA
	(*ASBRSummaryLSA)(nil),         // 47: communication.ASBRSummaryLSA
	(*NSSAExternalLSAData)(nil),    // 48: communication.NSSAExternalLSAData
	(*ASExternalLSA)(nil),          // 49: communication.ASExternalLSA
	(*OSPFExternalAll)(nil),        // 50: communication.OSPFExternalAll
	(*ASExternalLinkState)(nil),    // 51: communication.ASExternalLinkState
	(*OSPFNssaExternalAll)(nil),    // 52: communication.OSPFNssaExternalAll
	(*OSPFNeighbors)(nil),          // 53: communication.OSPFNeighbors
	(*NeighborList)(nil),           // 54: communication.NeighborList
	(*Neighbor)(nil),               // 55: communication.Neighbor
	(*InterfaceList)(nil),          // 56: communication.InterfaceList
	(*SingleInterface)(nil),        // 57: communication.SingleInterface
	(*IpAddress)(nil),              // 58: communication.IpAddress
	(*EvpnMh)(nil),                 // 59: communication.EvpnMh
	(*RoutingInformationBase)(nil), // 60: communication.RoutingInformationBase
	(*RouteEntry)(nil),             // 61: communication.RouteEntry
	(*Route)(nil),                  // 62: communication.Route
	(*Nexthop)(nil),                // 63: communication.Nexthop
	(*RibFibSummaryRoutes)(nil),    // 64: communication.RibFibSummaryRoutes
	(*RouteSummary)(nil),           // 65: communication.RouteSummary
	(*AnomalyAnalysis)(nil),        // 66: communication.AnomalyAnalysis
	(*AnomalyDetection)(nil),       // 67: communication.AnomalyDetection
	(*Advertisement)(nil),          // 68: communication.Advertisement
	(*AccessListAnalyzer)(nil),     // 69: communication.AccessListAnalyzer
	(*ACLEntry)(nil),               // 70: communication.ACLEntry
	(*StaticList)(nil),             // 71: communication.StaticList
	(*IntraAreaLsa)(nil),           // 72: communication.IntraAreaLsa
	(*InterAreaLsa)(nil),           // 73: communication.InterAreaLsa
	(*AreaAnalyzer)(nil),           // 74: communication.AreaAnalyzer
	(*RibPrefixes)(nil),            // 75: communication.RibPrefixes
	(*ParsedAnalyzerData)(nil),     // 76: communication.ParsedAnalyzerData
	(*OspfRouterInfo)(nil),         // 77: communication.OspfRouterInfo
	(*AreaLinkStates)(nil),         // 78: communication.AreaLinkStates
	(*RouterLSA)(nil),              // 79: communication.RouterLSA
	(*RouterLink)(nil),             // 80: communication.RouterLink
	nil,                            // 81: communication.Message.ParamsEntry
	nil,                            // 82: communication.Command.ParamsEntry
	nil,                            // 83: communication.PeerInterfaceMap.PeerInterfaceToAddressEntry
	nil,                            // 84: communication.StaticFRRConfiguration.RouteMapEntry
	nil,                            // 85: communication.StaticFRRConfiguration.AccessListEntry
	nil,                            // 86: communication.GeneralOspfInformation.AreasEntry
	nil,                            // 87: communication.OSPFRouterData.RouterStatesEntry
	nil,                            // 88: communication.OSPFRouterArea.LsaEntriesEntry
	nil,                            // 89: communication.OSPFRouterLSA.RouterLinksEntry
	nil,                            // 90: communication.OSPFNetworkData.NetStatesEntry
	nil,                            // 91: communication.NetAreaState.LsaEntriesEntry
	nil,                            // 92: communication.NetworkLSA.AttachedRoutersEntry
	nil,                            // 93: communication.OSPFSummaryData.NetStatesEntry
	nil,                            // 94: communication.OSPFSummaryData.SummaryStatesEntry
	nil,                            // 95: communication.SummaryAreaState.LsaEntriesEntry
	nil,                            // 96: communication.OSPFAsbrSummaryData.AsbrSummaryStatesEntry
	nil,                            // 97: communication.OSPFExternalData.AsExternalLinkStatesEntry
	nil,                            // 98: communication.OSPFNssaExternalData.NssaExternalLinkStatesEntry
	nil,                            // 99: communication.NssaExternalArea.DataEntry
	nil,                            // 100: communication.OSPFDatabase.AreasEntry
	nil,                            // 101: communication.OSPFNssaExternalAll.NssaExternalAllLinkStatesEntry
	nil,                            // 102: communication.OSPFNeighbors.NeighborsEntry
	nil,                            // 103: communication.InterfaceList.InterfacesEntry
	nil,                            // 104: communication.RoutingInformationBase.RoutesEntry
	nil,                            // 105: communication.OspfRouterInfo.RouterLinkStatesEntry
	nil,                            // 106: communication.AreaLinkStates.RouterLsasEntry
	nil,                            // 107: communication.RouterLSA.RouterLinksEntry
}
var file_protocol_proto_depIdxs = []int32{
	81,  // 0: communication.Message.params:type_name -> communication.Message.ParamsEntry
	82,  // 1: communication.Command.params:type_name -> communication.Command.ParamsEntry
	4,   // 2: communication.Response.data:type_name -> communication.ResponseValue
	83,  // 3: communication.PeerInterfaceMap.peer_interface_to_address:type_name -> communication.PeerInterfaceMap.PeerInterfaceToAddressEntry
	76,  // 4: communication.ResponseValue.parsed_analyzer_data:type_name -> communication.ParsedAnalyzerData
	67,  // 5: communication.ResponseValue.anomaly:type_name -> communication.AnomalyDetection
	3,   // 6: communication.ResponseValue.peer_interface_to_address:type_name -> communication.PeerInterfaceMap
	21,  // 7: communication.ResponseValue.general_ospf_information:type_name -> communication.GeneralOspfInformation
	41,  // 8: communication.ResponseValue.ospf_database:type_name -> communication.OSPFDatabase
	24,  // 9: communication.ResponseValue.ospf_router_data:type_name -> communication.OSPFRouterData
	28,  // 10: communication.ResponseValue.ospf_network_data:type_name -> communication.OSPFNetworkData
	32,  // 11: communication.ResponseValue.ospf_summary_data:type_name -> communication.OSPFSummaryData
	35,  // 12: communication.ResponseValue.ospf_asbr_summary_data:type_name -> communication.OSPFAsbrSummaryData
	36,  // 13: communication.ResponseValue.ospf_external_data:type_name -> communication.OSPFExternalData
	38,  // 14: communication.ResponseValue.ospf_nssa_external_data:type_name -> communication.OSPFNssaExternalData
	50,  // 15: communication.ResponseValue.ospf_external_all:type_name -> communication.OSPFExternalAll
	52,  // 16: communication.ResponseValue.ospf_nssa_external_all:type_name -> communication.OSPFNssaExternalAll
	53,  // 17: communication.ResponseValue.ospf_neighbors:type_name -> communication.OSPFNeighbors
	56,  // 18: communication.ResponseValue.interfaces:type_name -> communication.InterfaceList
	60,  // 19: communication.ResponseValue.routing_information_base:type_name -> communication.RoutingInformationBase
	64,  // 20: communication.ResponseValue.rib_fib_summary_routes:type_name -> communication.RibFibSummaryRoutes
	9,   // 21: communication.ResponseValue.static_frr_configuration:type_name -> communication.StaticFRRConfiguration
	20,  // 22: communication.ResponseValue.system_metrics:type_name -> communication.SystemMetrics
	23,  // 23: communication.ResponseValue.frr_router_data:type_name -> communication.FRRRouterData
	6,   // 24: communication.NetworkConfig.areas:type_name -> communication.OSPFArea
	7,   // 25: communication.NetworkConfig.interfaces:type_name -> communication.OSPFInterfaceConfig
	41,  // 26: communication.FullFRRData.ospf_database:type_name -> communication.OSPFDatabase
	24,  // 27: communication.FullFRRData.ospf_router_data:type_name -> communication.OSPFRouterData
	21,  // 28: communication.FullFRRData.general_ospf_information:type_name -> communication.GeneralOspfInformation
	24,  // 29: communication.FullFRRData.ospf_router_data_all:type_name -> communication.OSPFRouterData
	28,  // 30: communication.FullFRRData.ospf_network_data:type_name -> communication.OSPFNetworkData
	28,  // 31: communication.FullFRRData.ospf_network_data_all:type_name -> communication.OSPFNetworkData
	32,  // 32: communication.FullFRRData.ospf_summary_data:type_name -> communication.OSPFSummaryData
	32,  // 33: communication.FullFRRData.ospf_summary_data_all:type_name -> communication.OSPFSummaryData
	35,  // 34: communication.FullFRRData.ospf_asbr_summary_data:type_name -> communication.OSPFAsbrSummaryData
	36,  // 35: communication.FullFRRData.ospf_external_data:type_name -> communication.OSPFExternalData
	38,  // 36: communication.FullFRRData.ospf_nssa_external_data:type_name -> communication.OSPFNssaExternalData
	50,  // 37: communication.FullFRRData.ospf_external_all:type_name -> communication.OSPFExternalAll
	52,  // 38: communication.FullFRRData.ospf_nssa_external_all:type_name -> communication.OSPFNssaExternalAll
	53,  // 39: communication.FullFRRData.ospf_neighbors:type_name -> communication.OSPFNeighbors
	56,  // 40: communication.FullFRRData.interfaces:type_name -> communication.InterfaceList
	60,  // 41: communication.FullFRRData.routing_information_base:type_name -> communication.RoutingInformationBase
	64,  // 42: communication.FullFRRData.rib_fib_summary_routes:type_name -> communication.RibFibSummaryRoutes
	9,   // 43: communication.FullFRRData.static_frr_configuration:type_name -> communication.StaticFRRConfiguration
	20,  // 44: communication.FullFRRData.system_metrics:type_name -> communication.SystemMetrics
	23,  // 45: communication.FullFRRData.frr_router_data:type_name -> communication.FRRRouterData
	10,  // 46: communication.StaticFRRConfiguration.interfaces:type_name -> communication.Interface
	11,  // 47: communication.StaticFRRConfiguration.static_routes:type_name -> communication.StaticRoute
	12,  // 48: communication.StaticFRRConfiguration.ospf_config:type_name -> communication.OSPFConfig
	84,  // 49: communication.StaticFRRConfiguration.route_map:type_name -> communication.StaticFRRConfiguration.RouteMapEntry
	85,  // 50: communication.StaticFRRConfiguration.access_list:type_name -> communication.StaticFRRConfiguration.AccessListEntry
	18,  // 51: communication.Interface.interface_ip_prefixes:type_name -> communication.InterfaceIPPrefix
	19,  // 52: communication.StaticRoute.ip_prefix:type_name -> communication.IPPrefix
	13,  // 53: communication.OSPFConfig.redistribution:type_name -> communication.Redistribution
	14,  // 54: communication.OSPFConfig.area:type_name -> communication.Area
	17,  // 55: communication.AccessList.access_list_items:type_name -> communication.AccessListItem
	19,  // 56: communication.AccessListItem.ip_prefix:type_name -> communication.IPPrefix
	19,  // 57: communication.InterfaceIPPrefix.ip_prefix:type_name -> communication.IPPrefix
	19,  // 58: communication.InterfaceIPPrefix.peer_ip_prefix:type_name -> communication.IPPrefix
	86,  // 59: communication.GeneralOspfInformation.areas:type_name -> communication.GeneralOspfInformation.AreasEntry
	87,  // 60: communication.OSPFRouterData.router_states:type_name -> communication.OSPFRouterData.RouterStatesEntry
	88,  // 61: communication.OSPFRouterArea.lsa_entries:type_name -> communication.OSPFRouterArea.LsaEntriesEntry
	89,  // 62: communication.OSPFRouterLSA.router_links:type_name -> communication.OSPFRouterLSA.RouterLinksEntry
	90,  // 63: communication.OSPFNetworkData.net_states:type_name -> communication.OSPFNetworkData.NetStatesEntry
	91,  // 64: communication.NetAreaState.lsa_entries:type_name -> communication.NetAreaState.LsaEntriesEntry
	92,  // 65: communication.NetworkLSA.attached_routers:type_name -> communication.NetworkLSA.AttachedRoutersEntry
	93,  // 66: communication.OSPFSummaryData.net_states:type_name -> communication.OSPFSummaryData.NetStatesEntry
	94,  // 67: communication.OSPFSummaryData.summary_states:type_name -> communication.OSPFSummaryData.SummaryStatesEntry
	95,  // 68: communication.SummaryAreaState.lsa_entries:type_name -> communication.SummaryAreaState.LsaEntriesEntry
	96,  // 69: communication.OSPFAsbrSummaryData.asbr_summary_states:type_name -> communication.OSPFAsbrSummaryData.AsbrSummaryStatesEntry
	97,  // 70: communication.OSPFExternalData.as_external_link_states:type_name -> communication.OSPFExternalData.AsExternalLinkStatesEntry
	98,  // 71: communication.OSPFNssaExternalData.nssa_external_link_states:type_name -> communication.OSPFNssaExternalData.NssaExternalLinkStatesEntry
	99,  // 72: communication.NssaExternalArea.data:type_name -> communication.NssaExternalArea.DataEntry
	100, // 73: communication.OSPFDatabase.areas:type_name -> communication.OSPFDatabase.AreasEntry
	49,  // 74: communication.OSPFDatabase.as_external_link_states:type_name -> communication.ASExternalLSA
	44,  // 75: communication.OSPFDatabaseArea.router_link_states:type_name -> communication.RouterDataLSA
	45,  // 76: communication.OSPFDatabaseArea.network_link_states:type_name -> communication.NetworkDataLSA
	46,  // 77: communication.OSPFDatabaseArea.summary_link_states:type_name -> communication.SummaryDataLSA
	47,  // 78: communication.OSPFDatabaseArea.asbr_summary_link_states:type_name -> communication.ASBRSummaryLSA
	48,  // 79: communication.OSPFDatabaseArea.nssa_external_link_states:type_name -> communication.NSSAExternalLSAData
	43,  // 80: communication.RouterDataLSA.base:type_name -> communication.BaseLSA
	43,  // 81: communication.NetworkDataLSA.base:type_name -> communication.BaseLSA
	43,  // 82: communication.SummaryDataLSA.base:type_name -> communication.BaseLSA
	43,  // 83: communication.ASBRSummaryLSA.base:type_name -> communication.BaseLSA
	43,  // 84: communication.NSSAExternalLSAData.base:type_name -> communication.BaseLSA
	43,  // 85: communication.ASExternalLSA.base:type_name -> communication.BaseLSA
	51,  // 86: communication.OSPFExternalAll.as_external_link_states:type_name -> communication.ASExternalLinkState
	101, // 87: communication.OSPFNssaExternalAll.nssa_external_all_link_states:type_name -> communication.OSPFNssaExternalAll.NssaExternalAllLinkStatesEntry
	102, // 88: communication.OSPFNeighbors.neighbors:type_name -> communication.OSPFNeighbors.NeighborsEntry
	55,  // 89: communication.NeighborList.neighbors:type_name -> communication.Neighbor
	103, // 90: communication.InterfaceList.interfaces:type_name -> communication.InterfaceList.InterfacesEntry
	58,  // 91: communication.SingleInterface.ip_addresses:type_name -> communication.IpAddress
	59,  // 92: communication.SingleInterface.evpn_mh:type_name -> communication.EvpnMh
	104, // 93: communication.RoutingInformationBase.routes:type_name -> communication.RoutingInformationBase.RoutesEntry
	62,  // 94: communication.RouteEntry.routes:type_name -> communication.Route
	63,  // 95: communication.Route.nexthops:type_name -> communication.Nexthop
	65,  // 96: communication.RibFibSummaryRoutes.route_summaries:type_name -> communication.RouteSummary
	67,  // 97: communication.AnomalyAnalysis.router_anomaly:type_name -> communication.AnomalyDetection
	67,  // 98: communication.AnomalyAnalysis.external_anomaly:type_name -> communication.AnomalyDetection
	67,  // 99: communication.AnomalyAnalysis.nssa_external_anomaly:type_name -> communication.AnomalyDetection
	67,  // 100: communication.AnomalyAnalysis.lsdb_to_rib_anomaly:type_name -> communication.AnomalyDetection
	67,  // 101: communication.AnomalyAnalysis.rib_to_fib_anomaly:type_name -> communication.AnomalyDetection
	68,  // 102: communication.AnomalyDetection.superfluous_entries:type_name -> communication.Advertisement
	68,  // 103: communication.AnomalyDetection.missing_entries:type_name -> communication.Advertisement
	68,  // 104: communication.AnomalyDetection.duplicate_entries:type_name -> communication.Advertisement
	70,  // 105: communication.AccessListAnalyzer.acl_entry:type_name -> communication.ACLEntry
	74,  // 106: communication.IntraAreaLsa.areas:type_name -> communication.AreaAnalyzer
	74,  // 107: communication.InterAreaLsa.areas:type_name -> communication.AreaAnalyzer
	68,  // 108: communication.AreaAnalyzer.links:type_name -> communication.Advertisement
	72,  // 109: communication.ParsedAnalyzerData.should_router_lsdb:type_name -> communication.IntraAreaLsa
	73,  // 110: communication.ParsedAnalyzerData.should_external_lsdb:type_name -> communication.InterAreaLsa
	73,  // 111: communication.ParsedAnalyzerData.should_nssa_external_lsdb:type_name -> communication.InterAreaLsa
	3,   // 112: communication.ParsedAnalyzerData.p2p_map:type_name -> communication.PeerInterfaceMap
	105, // 113: communication.OspfRouterInfo.router_link_states:type_name -> communication.OspfRouterInfo.RouterLinkStatesEntry
	106, // 114: communication.AreaLinkStates.router_lsas:type_name -> communication.AreaLinkStates.RouterLsasEntry
	107, // 115: communication.RouterLSA.router_links:type_name -> communication.RouterLSA.RouterLinksEntry
	4,   // 116: communication.Message.ParamsEntry.value:type_name -> communication.ResponseValue
	4,   // 117: communication.Command.ParamsEntry.value:type_name -> communication.ResponseValue
	15,  // 118: communication.StaticFRRConfiguration.RouteMapEntry.value:type_name -> communication.RouteMap
	16,  // 119: communication.StaticFRRConfiguration.AccessListEntry.value:type_name -> communication.AccessList
	22,  // 120: communication.GeneralOspfInformation.AreasEntry.value:type_name -> communication.GeneralInfoOspfArea
	25,  // 121: communication.OSPFRouterData.RouterStatesEntry.value:type_name -> communication.OSPFRouterArea
	26,  // 122: communication.OSPFRouterArea.LsaEntriesEntry.value:type_name -> communication.OSPFRouterLSA
	27,  // 123: communication.OSPFRouterLSA.RouterLinksEntry.value:type_name -> communication.OSPFRouterLSALink
	29,  // 124: communication.OSPFNetworkData.NetStatesEntry.value:type_name -> communication.NetAreaState
	30,  // 125: communication.NetAreaState.LsaEntriesEntry.value:type_name -> communication.NetworkLSA
	31,  // 126: communication.NetworkLSA.AttachedRoutersEntry.value:type_name -> communication.AttachedRouter
	29,  // 127: communication.OSPFSummaryData.NetStatesEntry.value:type_name -> communication.NetAreaState
	33,  // 128: communication.OSPFSummaryData.SummaryStatesEntry.value:type_name -> communication.SummaryAreaState
	34,  // 129: communication.SummaryAreaState.LsaEntriesEntry.value:type_name -> communication.SummaryLSA
	33,  // 130: communication.OSPFAsbrSummaryData.AsbrSummaryStatesEntry.value:type_name -> communication.SummaryAreaState
	37,  // 131: communication.OSPFExternalData.AsExternalLinkStatesEntry.value:type_name -> communication.ExternalLSA
	39,  // 132: communication.OSPFNssaExternalData.NssaExternalLinkStatesEntry.value:type_name -> communication.NssaExternalArea
	40,  // 133: communication.NssaExternalArea.DataEntry.value:type_name -> communication.NssaExternalLSA
	42,  // 134: communication.OSPFDatabase.AreasEntry.value:type_name -> communication.OSPFDatabaseArea
	39,  // 135: communication.OSPFNssaExternalAll.NssaExternalAllLinkStatesEntry.value:type_name -> communication.NssaExternalArea
	54,  // 136: communication.OSPFNeighbors.NeighborsEntry.value:type_name -> communication.NeighborList
	57,  // 137: communication.InterfaceList.InterfacesEntry.value:type_name -> communication.SingleInterface
	61,  // 138: communication.RoutingInformationBase.RoutesEntry.value:type_name -> communication.RouteEntry
	78,  // 139: communication.OspfRouterInfo.RouterLinkStatesEntry.value:type_name -> communication.AreaLinkStates
	79,  // 140: communication.AreaLinkStates.RouterLsasEntry.value:type_name -> communication.RouterLSA
	80,  // 141: communication.RouterLSA.RouterLinksEntry.value:type_name -> communication.RouterLink
	142, // [142:142] is the sub-list for method output_type
	142, // [142:142] is the sub-list for method input_type
	142, // [142:142] is the sub-list for extension type_name
	142, // [142:142] is the sub-list for extension extendee
	0,   // [0:142] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	file_protocol_proto_msgTypes[4].OneofWrappers = []any{
		(*ResponseValue_StringValue)(nil),
		(*ResponseValue_ParsedAnalyzerData)(nil),
		(*ResponseValue_Anomaly)(nil),
		(*ResponseValue_PeerInterfaceToAddress)(nil),
		(*ResponseValue_GeneralOspfInformation)(nil),
		(*ResponseValue_OspfDatabase)(nil),
		(*ResponseValue_OspfRouterData)(nil),
		(*ResponseValue_OspfNetworkData)(nil),
		(*ResponseValue_OspfSummaryData)(nil),
		(*ResponseValue_OspfAsbrSummaryData)(nil),
		(*ResponseValue_OspfExternalData)(nil),
		(*ResponseValue_OspfNssaExternalData)(nil),
		(*ResponseValue_OspfExternalAll)(nil),
		(*ResponseValue_OspfNssaExternalAll)(nil),
		(*ResponseValue_OspfNeighbors)(nil),
		(*ResponseValue_Interfaces)(nil),
		(*ResponseValue_RoutingInformationBase)(nil),
		(*ResponseValue_RibFibSummaryRoutes)(nil),
		(*ResponseValue_StaticFrrConfiguration)(nil),
		(*ResponseValue_SystemMetrics)(nil),
		(*ResponseValue_FrrRouterData)(nil),
	}
	file_protocol_proto_msgTypes[17].OneofWrappers = []any{
		(*AccessListItem_IpPrefix)(nil),
		(*AccessListItem_Any)(nil),
	}
	file_protocol_proto_msgTypes[80].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protocol_proto_rawDesc), len(file_protocol_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   108,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
