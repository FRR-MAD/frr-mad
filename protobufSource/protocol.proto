syntax = "proto3";

package communication;
option go_package = "github.com/ba2025-ysmprc/frr-tui/backend/pkg;pkg";
	

// Message represents the top-level message structure
message Message {
  string service = 1;
  string command = 2;
  map<string, ResponseValue> params = 3;
}

// Command represents a specific command
message Command {
  string command = 1;
  string action = 2;
  map<string, ResponseValue> params = 3;
}

// Response represents the server's response
message Response {
  string status = 1;
  string message = 2;
  ResponseValue data = 3;
}

message PeerInterfaceMap {
  map<string, string> peer_interface_to_address = 1;
}

// ResponseValue represents a dynamic value (similar to interface{} in Go)
message ResponseValue {
  oneof kind {
    // For testing
    string string_value = 1;

    // Analyzer command message types
    // Anomalies anomalies = 2;
    ParsedAnalyzerData parsed_analyzer_data = 2;
    AnomalyDetection anomaly = 3;
    PeerInterfaceMap peer_interface_to_address = 4;

    // New Aggregator service message types
    GeneralOspfInformation general_ospf_information = 5;
    OSPFDatabase ospf_database = 6;
    OSPFRouterData ospf_router_data = 7;
    OSPFNetworkData ospf_network_data = 8;
    OSPFSummaryData ospf_summary_data = 9;
    OSPFAsbrSummaryData ospf_asbr_summary_data = 10;
    OSPFExternalData ospf_external_data = 11;
    OSPFNssaExternalData ospf_nssa_external_data = 12;
    OSPFExternalAll ospf_external_all = 13;
    OSPFNssaExternalAll ospf_nssa_external_all = 14;
    OSPFNeighbors ospf_neighbors = 15;
    InterfaceList interfaces = 16;
    RoutingInformationBase routing_information_base = 17;
    RibFibSummaryRoutes rib_fib_summary_routes = 18;
    StaticFRRConfiguration static_frr_configuration = 19;
    SystemMetrics system_metrics = 20;
    FRRRouterData frr_router_data = 21;
  }
}

// ================ Aggregator payload Messages ================




// ================ OLD setup ================

message NetworkConfig {
  string router_id = 1;
  repeated OSPFArea areas = 2;
  repeated OSPFInterfaceConfig interfaces = 3;
}

message OSPFArea {
  string id = 1;
  repeated string networks = 2;
}

message OSPFInterfaceConfig {
  string name = 1;
  string area = 2;
  string IpAddress = 3;
  bool passive = 4;
  int32 cost = 5;
}

// ================ Main Aggregated Message ================
message FullFRRData {
  OSPFDatabase ospf_database = 1;
  OSPFRouterData ospf_router_data = 2;
  GeneralOspfInformation general_ospf_information = 3;
  OSPFRouterData ospf_router_data_all = 4;
  OSPFNetworkData ospf_network_data = 5;
  OSPFNetworkData ospf_network_data_all = 6;
  OSPFSummaryData ospf_summary_data = 7;
  OSPFSummaryData ospf_summary_data_all = 8;
  OSPFAsbrSummaryData ospf_asbr_summary_data = 9;
  OSPFExternalData ospf_external_data = 10;
  OSPFNssaExternalData ospf_nssa_external_data = 11;
  OSPFExternalAll ospf_external_all = 12;
  OSPFNssaExternalAll ospf_nssa_external_all = 13;
  OSPFNeighbors ospf_neighbors = 14;
  InterfaceList interfaces = 15;
  RoutingInformationBase routing_information_base = 16;
  RibFibSummaryRoutes rib_fib_summary_routes = 17;
  StaticFRRConfiguration static_frr_configuration = 18;
  SystemMetrics system_metrics = 19;
  FRRRouterData frr_router_data = 20;
}


// ================ Aggregator Static FRRouting Configuration ================
message StaticFRRConfiguration {
  string hostname = 1;
  string frr_version = 2;
  // string frr_defaults = 3;
  bool ipv6_forwarding = 4;
  bool ipv4_forwarding = 5;
  bool service_advanced_vty = 6;
  // bool service_integrated_vtysh_config = 7;

  repeated Interface interfaces = 8;
  repeated StaticRoute static_routes = 9;
  OSPFConfig ospf_config = 10;
  map<string, RouteMap> route_map = 11;
  map<string, AccessList> access_list = 12;
}

message Interface {
  string name = 1;
  repeated InterfaceIPPrefix interface_ip_prefixes = 2;
  string area = 3;
  // Optional: cost, dead-interval, hello-interval
}

message StaticRoute {
  IPPrefix ip_prefix = 1;
  string next_hop = 2;
}

message OSPFConfig {
  string router_id = 1;
  repeated Redistribution redistribution = 2;
  repeated Area area = 3;
  string virtual_link_neighbor = 4;
}

message Redistribution {
  string type = 1;
  string metric = 2;
  string route_map = 3;
}

message Area {
  string name = 1;
  string type = 2; // transit (virtual-link) is an area type because itâ€™s not possible to be nssa/stub AND transit-area
}

message RouteMap {
  bool permit = 1;
  string sequence = 2;
  string match = 3;
  string access_list = 4;
}

message AccessList {
  string name = 1;
  repeated AccessListItem access_list_items = 2;
}

message AccessListItem {
  uint32 sequence = 1;
  string access_control = 2;
  oneof destination {
    IPPrefix ip_prefix = 3;
    bool any = 4; // if set to true, means "any"
  }
}

message InterfaceIPPrefix {
  IPPrefix ip_prefix = 1;
  bool passive = 2;
  bool has_peer = 3; // true/false
  IPPrefix peer_ip_prefix = 4;
}

message IPPrefix {
  string ip_address = 1;
  uint32 prefix_length = 2;
}

message SystemMetrics {
  int64 cpu_amount = 1;
  double cpu_usage = 2;
  double memory_usage = 3;
}

// ================ Aggregator OSPF (general query) ====================

message GeneralOspfInformation {
  string router_id = 1;
  bool tos_routes_only = 2;
  bool rfc2328_conform = 3;
  int32 spf_schedule_delay_msecs = 4;
  int32 holdtime_min_msecs = 5;
  int32 holdtime_max_msecs = 6;
  int32 holdtime_multiplier = 7;
  int64 spf_last_executed_msecs = 8;
  int32 spf_last_duration_msecs = 9;
  int32 lsa_min_interval_msecs = 10;
  int32 lsa_min_arrival_msecs = 11;
  int32 write_multiplier = 12;
  int32 refresh_timer_msecs = 13;
  int32 maximum_paths = 14;
  int32 preference = 15;
  string asbr_router = 16;
  string abr_type = 17;
  int32 lsa_external_counter = 18;
  int64 lsa_external_checksum = 19;
  int32 lsa_asopaque_counter = 20;
  int64 lsa_asopaque_checksum = 21;
  int32 attached_area_counter = 22;
  map<string, GeneralInfoOspfArea> areas = 23;
}

// Represents per-area statistics within the OSPF process.
message GeneralInfoOspfArea {
  bool backbone = 1;
  int32 area_if_total_counter = 2;
  int32 area_if_active_counter = 3;
  int32 nbr_full_adjacent_counter = 4;
  string authentication = 5;
  int32 spf_executed_counter = 6;
  int32 lsa_number = 7;
  int32 lsa_router_number = 8;
  int64 lsa_router_checksum = 9;
  int32 lsa_network_number = 10;
  int64 lsa_network_checksum = 11;
  int32 lsa_summary_number = 12;
  int64 lsa_summary_checksum = 13;
  int32 lsa_asbr_number = 14;
  int64 lsa_asbr_checksum = 15;
  int32 lsa_nssa_number = 16;
  int64 lsa_nssa_checksum = 17;
  int32 lsa_opaque_link_number = 18;
  int64 lsa_opaque_link_checksum = 19;
  int32 lsa_opaque_area_number = 20;
  int64 lsa_opaque_area_checksum = 21;
}

// ================ Aggregator LSA Router ====================

message FRRRouterData {
  string router_name = 1;
  string ospf_router_id =2;
}

message OSPFRouterData {
  string router_id = 1 [json_name = "routerId"];
  map<string, OSPFRouterArea> router_states = 2 [json_name = "Router Link States"];
}

message OSPFRouterArea {
  map<string, OSPFRouterLSA> lsa_entries = 1;  // json keys are linkStateId
}

message OSPFRouterLSA {
  int32 lsa_age = 1 [json_name = "lsaAge"];
  string options = 2 [json_name = "options"];
  int32 lsa_flags = 3 [json_name = "lsaFlags"];
  int32 flags = 4 [json_name = "flags"];
  bool asbr = 5 [json_name = "asbr"];
  string lsa_type = 6 [json_name = "lsaType"];
  string link_state_id = 7 [json_name = "linkStateId"];
  string advertising_router = 8 [json_name = "advertisingRouter"];
  string lsa_seq_number = 9 [json_name = "lsaSeqNumber"];
  string checksum = 10 [json_name = "checksum"];
  int32 length = 11 [json_name = "length"];
  int32 num_of_links = 12 [json_name = "numOfLinks"];
  map<string, OSPFRouterLSALink> router_links = 13 [json_name = "routerLinks"];
}

message OSPFRouterLSALink {
  string link_type = 1 [json_name = "linkType"];
  string designated_router_address = 2 [json_name = "designatedRouterAddress"];
  string neighbor_router_id = 3 [json_name = "neighborRouterId"];
  string router_interface_address = 4 [json_name = "routerInterfaceAddress"];
  string network_address = 5 [json_name = "networkAddress"];
  string network_mask = 6 [json_name = "networkMask"];
  string p2pInterfaceAddress = 7 [json_name ="p2pInterfaceAddress"];
  int32 num_of_tos_metrics = 8 [json_name = "numOfTosMetrics"];
  int32 tos0_metric = 9 [json_name = "tos0Metric"];
}

// ================ Aggregator LSA Network ===================

message OSPFNetworkData {
  string router_id = 1 [json_name = "routerId"];
  map<string, NetAreaState> net_states = 2 [json_name = "Net Link States"];
}

message NetAreaState {
  map<string, NetworkLSA> lsa_entries = 1;  // json keys are linkStateId
}

message NetworkLSA {
  int32 lsa_age = 1 [json_name = "lsaAge"];
  string options = 2 [json_name = "options"];
  int32 lsa_flags = 3 [json_name = "lsaFlags"];
  string lsa_type = 4 [json_name = "lsaType"];
  string link_state_id = 5 [json_name = "linkStateId"];
  string advertising_router = 6 [json_name = "advertisingRouter"];
  string lsa_seq_number = 7 [json_name = "lsaSeqNumber"];
  string checksum = 8 [json_name = "checksum"];
  int32 length = 9 [json_name = "length"];
  int32 network_mask = 10 [json_name = "networkMask"];
  map<string, AttachedRouter> attached_routers = 11 [json_name = "attchedRouters"];
}

message AttachedRouter {
  string attached_router_id = 1 [json_name = "attachedRouterId"];
}

// ================ Aggregator LSA Summary ===================

message OSPFSummaryData {
  string router_id = 1 [json_name = "routerId"];
  map<string, NetAreaState> net_states = 2 [json_name = "Net Link States"];
  map<string, SummaryAreaState> summary_states = 3 [json_name = "Summary Link States"];
}

message SummaryAreaState {
  map<string, SummaryLSA> lsa_entries = 1;  // json keys are linkStateId
}

message SummaryLSA {
  int32 lsa_age = 1 [json_name = "lsaAge"];
  string options = 2 [json_name = "options"];
  int32 lsa_flags = 3 [json_name = "lsaFlags"];
  string lsa_type = 4 [json_name = "lsaType"];
  string link_state_id = 5 [json_name = "linkStateId"];
  string advertising_router = 6 [json_name = "advertisingRouter"];
  string lsa_seq_number = 7 [json_name = "lsaSeqNumber"];
  string checksum = 8 [json_name = "checksum"];
  int32 length = 9 [json_name = "length"];
  int32 network_mask = 10 [json_name = "networkMask"];
  int32 tos0_metric = 11 [json_name = "tos0Metric"];
}

// ================ Aggregator LSA ASBR Summary ==============

message OSPFAsbrSummaryData {
  string router_id = 1 [json_name = "routerId"];
  map<string, SummaryAreaState> asbr_summary_states = 2 [json_name = "ASBR-Summary Link States"];
}

// ================ Aggregator LSA External ==================

message OSPFExternalData {
  string router_id = 1 [json_name = "routerId"];
  map<string, ExternalLSA> as_external_link_states = 2 [json_name = "AS External Link States"];
}

message ExternalLSA {
  int32 lsa_age = 1 [json_name = "lsaAge"];
  string options = 2 [json_name = "options"];
  int32 lsa_flags = 3 [json_name = "lsaFlags"];
  string lsa_type = 4 [json_name = "lsaType"];
  string link_state_id = 5 [json_name = "linkStateId"];
  string advertising_router = 6 [json_name = "advertisingRouter"];
  string lsa_seq_number = 7 [json_name = "lsaSeqNumber"];
  string checksum = 8 [json_name = "checksum"];
  int32 length = 9 [json_name = "length"];
  int32 network_mask = 10 [json_name = "networkMask"];
  string metric_type = 11 [json_name = "metricType"];
  int32 tos = 12 [json_name = "tos"];
  int32 metric = 13 [json_name = "metric"];
  string forward_address = 14 [json_name = "forwardAddress"];
  int32 external_route_tag = 15 [json_name = "externalRouteTag"];
}

// ================ Aggregator LSA NSSA External =============

message OSPFNssaExternalData {
  string router_id = 1 [json_name = "routerId"];
  map<string, NssaExternalArea> nssa_external_link_states = 2 [json_name = "NSSA-External Link States"];
}

message NssaExternalArea {
  map<string, NssaExternalLSA> data = 1;  // json keys are linkStateId
}

message NssaExternalLSA {
  int32 lsa_age = 1 [json_name = "lsaAge"];
  string options = 2 [json_name = "options"];
  int32 lsa_flags = 3 [json_name = "lsaFlags"];
  string lsa_type = 4 [json_name = "lsaType"];
  string link_state_id = 5 [json_name = "linkStateId"];
  string advertising_router = 6 [json_name = "advertisingRouter"];
  string lsa_seq_number = 7 [json_name = "lsaSeqNumber"];
  string checksum = 8 [json_name = "checksum"];
  int32 length = 9 [json_name = "length"];
  int32 network_mask = 10 [json_name = "networkMask"];
  string metric_type = 11 [json_name = "metricType"];
  int32 tos = 12 [json_name = "tos"];
  int32 metric = 13 [json_name = "metric"];
  string nssa_forward_address = 14 [json_name = "nssaForwardAddress"];
  int32 external_route_tag = 15 [json_name = "externalRouteTag"];
}

// ================ OSPF Database ================
message OSPFDatabase {
  string router_id = 1;
  map<string, OSPFDatabaseArea> areas = 2;
  repeated ASExternalLSA as_external_link_states = 3;
  int32 as_external_count = 4;
}

message OSPFDatabaseArea {
  repeated RouterDataLSA router_link_states = 1;
  int32 router_link_states_count = 2;
  repeated NetworkDataLSA network_link_states = 3;
  int32 network_link_states_count = 4;
  repeated SummaryDataLSA summary_link_states = 5;
  int32 summary_link_states_count = 6;
  repeated ASBRSummaryLSA asbr_summary_link_states = 7;
  int32 asbr_summary_link_states_count = 8;
  repeated NSSAExternalLSAData nssa_external_link_states = 9;
  int32 nssa_external_link_states_count = 10;
}

message BaseLSA {
  string ls_id = 1;
  string advertised_router = 2;
  int32 lsa_age = 3;
  string sequence_number = 4;
  string checksum = 5;
}

message RouterDataLSA {
  BaseLSA base = 1;
  int32 num_of_router_links = 2;
}

message NetworkDataLSA {
  BaseLSA base = 1;
}

message SummaryDataLSA {
  BaseLSA base = 1;
  string summary_address = 2;
}

message ASBRSummaryLSA {
  BaseLSA base = 1;
}

message NSSAExternalLSAData {
  BaseLSA base = 1;
  string metric_type = 2;
  string route = 3;
  int32 tag = 4;
}

message ASExternalLSA {
  BaseLSA base = 1;
  string metric_type = 2; // E1 or E2
  string route = 3;      // Prefix with mask
  int32 tag = 4;
}

// ================ OSPF External All ================
message OSPFExternalAll {
  string router_id = 1;
  repeated ASExternalLinkState as_external_link_states = 2;
}

message ASExternalLinkState {
  int32 lsa_age = 1;
  string options = 2;
  int32 lsa_flags = 3;
  string lsa_type = 4;
  string link_state_id = 5;
  string advertising_router = 6;
  string lsa_seq_number = 7;
  string checksum = 8;
  int32 length = 9;
  int32 network_mask = 10;
  string metric_type = 11;
  int32 tos = 12;
  int32 metric = 13;
  string forward_address = 14;
  int32 external_route_tag = 15;
}

// ================ OSPF Nssa External All ================
message OSPFNssaExternalAll {
  string router_id = 1 [json_name = "routerId"];
  map<string, NssaExternalArea> nssa_external_all_link_states = 2 [json_name = "NSSA-External Link States"];
}

// ================ OSPF Neighbors ================
message OSPFNeighbors {
  map<string, NeighborList> neighbors = 1;
}

message NeighborList {
  repeated Neighbor neighbors = 1;
}

message Neighbor {
  int32 priority = 1;
  string state = 2;
  int32 nbr_priority = 3;
  string nbr_state = 4;
  string converged = 5;
  string role = 6;
  int64 up_time_in_msec = 7;
  int32 dead_time_msecs = 8;
  int32 router_dead_interval_timer_due_msec = 9;
  string up_time = 10;
  string dead_time = 11;
  string address = 12;
  string iface_address = 13;
  string iface_name = 14;
  int32 retransmit_counter = 15;
  int32 link_state_retransmission_list_counter = 16;
  int32 request_counter = 17;
  int32 link_state_request_list_counter = 18;
  int32 db_summary_counter = 19;
  int32 database_summary_list_counter = 20;
}

// ================ Interfaces ================
message InterfaceList {
  map<string, SingleInterface> interfaces = 1;
}

message SingleInterface {
  string administrative_status = 1;
  string operational_status = 2;
  bool link_detection = 3;
  int32 link_ups = 4;
  int32 link_downs = 5;
  string last_link_up = 6;
  string last_link_down = 7;
  string vrf_name = 8;
  bool mpls_enabled = 9;
  bool link_down = 10;
  bool link_down_v6 = 11;
  bool mc_forwarding_v4 = 12;
  bool mc_forwarding_v6 = 13;
  bool pseudo_interface = 14;
  int32 index = 15;
  int32 metric = 16;
  int32 mtu = 17;
  int32 speed = 18;
  string flags = 19;
  string type = 20;
  string hardware_address = 21;
  repeated IpAddress ip_addresses = 22;
  string interface_type = 23;
  string interface_slave_type = 24;
  bool lacp_bypass = 25;
  EvpnMh evpn_mh = 26;
  string protodown = 27;
  int32 parent_ifindex = 28;
}

message IpAddress {
  string address = 1;
  bool secondary = 2;
  bool unnumbered = 3;
}

message EvpnMh {
  string ethernet_segment_id = 1;
  string esi = 2;
  int32 df_preference = 3;
  string df_algorithm = 4;
  string df_status = 5;
  string multi_homing_mode = 6;
  bool active_mode = 7;
  bool bypass_mode = 8;
  bool local_bias = 9;
  bool fast_failover = 10;
  string up_time = 11;
  string bgp_status = 12;
  string protocol_status = 13;
  bool protocol_down = 14;
  int32 mac_count = 15;
  int32 local_ifindex = 16;
  int32 network_count = 17;
  int32 join_count = 18;
  int32 leave_count = 19;
}

// ================ Aggregator Routes ================
message RoutingInformationBase {
  map<string, RouteEntry> routes = 1;
}

message RouteEntry {
  repeated Route routes = 1;
}

message Route {
  string prefix = 1;
  int32 prefix_len = 2;
  string protocol = 3;
  int32 vrf_id = 4;
  string vrf_name = 5;
  bool selected = 6;
  bool dest_selected = 7;
  int32 distance = 8;
  int32 metric = 9;
  bool installed = 10;
  int32 table = 11;
  int32 internal_status = 12;
  int32 internal_flags = 13;
  int32 internal_next_hop_num = 14;
  int32 internal_next_hop_active_num = 15;
  int32 nexthop_group_id = 16;
  int32 installed_nexthop_group_id = 17;
  string uptime = 18;
  repeated Nexthop nexthops = 19;
}

message Nexthop {
  int32 flags = 1;
  bool fib = 2;
  bool directly_connected = 3;
  bool duplicate = 4;
  string ip = 5;
  string afi = 6;
  int32 interface_index = 7;
  string interface_name = 8;
  bool active = 9;
  int32 weight = 10;
}

// ================ Routes ================

message RibFibSummaryRoutes {
  repeated RouteSummary route_summaries = 1;
  int32 routes_total = 2;
  int32 routes_total_fib = 3;
}

message RouteSummary {
  int32 fib = 1;
  int32 rib = 2;
  int32 fib_off_loaded = 3;
  int32 fib_trapped = 4;
  string type = 5;
}

// ================ Analyzer payload Messages ================

// new
message AnomalyAnalysis {
  AnomalyDetection router_anomaly= 1;
  AnomalyDetection external_anomaly = 2;
  AnomalyDetection nssa_external_anomaly = 3;
  AnomalyDetection lsdb_to_rib_anomaly = 4;
  AnomalyDetection rib_to_fib_anomaly = 5;
}

message AnomalyDetection {
  bool HasOverAdvertisedPrefixes = 1;
  bool HasUnAdvertisedPrefixes = 2;
  bool HasDuplicatePrefixes = 3;
  bool HasMisconfiguredPrefixes = 4;
  repeated Advertisement superfluous_entries = 5;
  repeated Advertisement missing_entries = 6;
  repeated Advertisement duplicate_entries = 7;
}

message Advertisement {
  string InterfaceAddress = 1;
  string LinkStateId = 2;
  string PrefixLength = 3;
  string LinkType = 4;
  bool PBit = 5;
  string Options = 6;
}


message AccessListAnalyzer {
  string AccessList = 1;
  repeated ACLEntry acl_entry = 2;
}

message ACLEntry {
  string IPAddress = 1; 
  int32 PrefixLength = 2;
  bool IsPermit = 3;
  bool Any = 4; 
  int32 Sequence = 5;
}

message StaticList {
	string IpAddress = 1;
	int32 PrefixLength = 2;
  string NextHop = 3;
  string Area =4;
}


message IntraAreaLsa {
  string hostname = 1;
  string router_id = 2;
  string router_type = 3;
  repeated AreaAnalyzer areas = 4;
}

message InterAreaLsa {
  string hostname = 1;
  string router_id = 2;
  string router_type = 3;
  repeated AreaAnalyzer areas = 4;
}

message AreaAnalyzer {
  string area_name = 1;
  string lsa_type = 2;
  string area_type = 3;
  repeated Advertisement links = 4;
}

message RibPrefixes {
  string prefix = 1;
  string prefix_length = 2;
  string protocol = 3;
  string next_hop_address = 4;
}

message ParsedAnalyzerData {
  IntraAreaLsa should_router_lsdb = 1;
  InterAreaLsa should_external_lsdb = 2;
  InterAreaLsa should_nssa_external_lsdb = 3;
  PeerInterfaceMap p2p_map = 4;
}

// Main message containing the router information
message OspfRouterInfo {
  string router_id = 1;
  map<string, AreaLinkStates> router_link_states = 2;
}

// Container for all link states in an area
message AreaLinkStates {
  map<string, RouterLSA> router_lsas = 1;
}

// Router Link State Advertisement
message RouterLSA {
  int32 lsa_age = 1;
  string options = 2;
  int32 lsa_flags = 3;
  int32 flags = 4;
  bool asbr = 5;
  string lsa_type = 6;
  string link_state_id = 7;
  string advertising_router = 8;
  string lsa_seq_number = 9;
  string checksum = 10;
  int32 length = 11;
  int32 num_of_links = 12;
  map<string, RouterLink> router_links = 13;
}

// Individual router link
message RouterLink {
  string link_type = 1;
  
  // For transit networks
  optional string designated_router_address = 2;
  optional string router_interface_address = 3;
  
  // For stub networks
  optional string network_address = 4;
  optional string network_mask = 5;
  
  int32 num_of_tos_metrics = 6;
  int32 tos0_metric = 7;
}